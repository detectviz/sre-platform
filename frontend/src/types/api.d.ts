/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/events": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢事件列表 */
        get: operations["listEvents"];
        put?: never;
        /** 建立事件 */
        post: operations["createEvent"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/events/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得事件詳情 */
        get: operations["getEvent"];
        /** 覆寫事件資料 */
        put: operations["replaceEvent"];
        post?: never;
        /** 刪除事件 */
        delete: operations["deleteEvent"];
        options?: never;
        head?: never;
        /** 局部更新事件 */
        patch: operations["updateEvent"];
        trace?: never;
    };
    "/event-rules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢事件規則列表 */
        get: operations["listEventRules"];
        put?: never;
        /** 建立事件規則 */
        post: operations["createEventRule"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/event-rules/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得事件規則 */
        get: operations["getEventRule"];
        /** 覆寫事件規則 */
        put: operations["replaceEventRule"];
        post?: never;
        /** 刪除事件規則 */
        delete: operations["deleteEventRule"];
        options?: never;
        head?: never;
        /** 更新事件規則 */
        patch: operations["updateEventRule"];
        trace?: never;
    };
    "/silences": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢靜音規則 */
        get: operations["listSilences"];
        put?: never;
        /** 建立靜音規則 */
        post: operations["createSilence"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/silences/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得靜音規則詳情 */
        get: operations["getSilence"];
        /** 覆寫靜音規則 */
        put: operations["replaceSilence"];
        post?: never;
        /** 刪除靜音規則 */
        delete: operations["deleteSilence"];
        options?: never;
        head?: never;
        /** 更新靜音規則 */
        patch: operations["updateSilence"];
        trace?: never;
    };
    "/resources": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢資源列表 */
        get: operations["listResources"];
        put?: never;
        /** 建立資源 */
        post: operations["createResource"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/resources/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得資源詳情 */
        get: operations["getResource"];
        /** 覆寫資源資料 */
        put: operations["replaceResource"];
        post?: never;
        /** 刪除資源 */
        delete: operations["deleteResource"];
        options?: never;
        head?: never;
        /** 更新資源 */
        patch: operations["updateResource"];
        trace?: never;
    };
    "/resource-groups": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢資源群組 */
        get: operations["listResourceGroups"];
        put?: never;
        /** 建立資源群組 */
        post: operations["createResourceGroup"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/resource-groups/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得資源群組 */
        get: operations["getResourceGroup"];
        /** 覆寫資源群組 */
        put: operations["replaceResourceGroup"];
        post?: never;
        /** 刪除資源群組 */
        delete: operations["deleteResourceGroup"];
        options?: never;
        head?: never;
        /** 更新資源群組 */
        patch: operations["updateResourceGroup"];
        trace?: never;
    };
    "/topology": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢拓撲視圖 */
        get: operations["listTopologyViews"];
        put?: never;
        /** 建立拓撲視圖 */
        post: operations["createTopologyView"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/topology/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得拓撲視圖 */
        get: operations["getTopologyView"];
        /** 覆寫拓撲視圖 */
        put: operations["replaceTopologyView"];
        post?: never;
        /** 刪除拓撲視圖 */
        delete: operations["deleteTopologyView"];
        options?: never;
        head?: never;
        /** 更新拓撲視圖 */
        patch: operations["updateTopologyView"];
        trace?: never;
    };
    "/dashboards": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢儀表板 */
        get: operations["listDashboards"];
        put?: never;
        /** 建立儀表板 */
        post: operations["createDashboard"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/dashboards/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得儀表板 */
        get: operations["getDashboard"];
        /** 覆寫儀表板 */
        put: operations["replaceDashboard"];
        post?: never;
        /** 刪除儀表板 */
        delete: operations["deleteDashboard"];
        options?: never;
        head?: never;
        /** 更新儀表板 */
        patch: operations["updateDashboard"];
        trace?: never;
    };
    "/insights": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢分析洞察 */
        get: operations["listInsights"];
        put?: never;
        /** 建立分析洞察 */
        post: operations["createInsight"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/insights/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得分析洞察 */
        get: operations["getInsight"];
        /** 覆寫洞察 */
        put: operations["replaceInsight"];
        post?: never;
        /** 刪除洞察 */
        delete: operations["deleteInsight"];
        options?: never;
        head?: never;
        /** 更新洞察 */
        patch: operations["updateInsight"];
        trace?: never;
    };
    "/war-room": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢戰情室儀表板 */
        get: operations["listWarRoomDashboards"];
        put?: never;
        /** 建立戰情室儀表板 */
        post: operations["createWarRoomDashboard"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/war-room/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得戰情室儀表板 */
        get: operations["getWarRoomDashboard"];
        /** 覆寫戰情室儀表板 */
        put: operations["replaceWarRoomDashboard"];
        post?: never;
        /** 刪除戰情室儀表板 */
        delete: operations["deleteWarRoomDashboard"];
        options?: never;
        head?: never;
        /** 更新戰情室儀表板 */
        patch: operations["updateWarRoomDashboard"];
        trace?: never;
    };
    "/scripts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢自動化腳本 */
        get: operations["listScripts"];
        put?: never;
        /** 建立腳本 */
        post: operations["createScript"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/scripts/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得腳本 */
        get: operations["getScript"];
        /** 覆寫腳本 */
        put: operations["replaceScript"];
        post?: never;
        /** 刪除腳本 */
        delete: operations["deleteScript"];
        options?: never;
        head?: never;
        /** 更新腳本 */
        patch: operations["updateScript"];
        trace?: never;
    };
    "/schedules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢排程 */
        get: operations["listSchedules"];
        put?: never;
        /** 建立排程 */
        post: operations["createSchedule"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/schedules/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得排程 */
        get: operations["getSchedule"];
        /** 覆寫排程 */
        put: operations["replaceSchedule"];
        post?: never;
        /** 刪除排程 */
        delete: operations["deleteSchedule"];
        options?: never;
        head?: never;
        /** 更新排程 */
        patch: operations["updateSchedule"];
        trace?: never;
    };
    "/executions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢執行日誌 */
        get: operations["listExecutions"];
        put?: never;
        /** 建立執行紀錄 */
        post: operations["createExecution"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/executions/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得執行紀錄 */
        get: operations["getExecution"];
        put?: never;
        post?: never;
        /** 刪除執行紀錄 */
        delete: operations["deleteExecution"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notification-policies": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢通知策略 */
        get: operations["listNotificationPolicies"];
        put?: never;
        /** 建立通知策略 */
        post: operations["createNotificationPolicy"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notification-policies/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得通知策略 */
        get: operations["getNotificationPolicy"];
        /** 覆寫通知策略 */
        put: operations["replaceNotificationPolicy"];
        post?: never;
        /** 刪除通知策略 */
        delete: operations["deleteNotificationPolicy"];
        options?: never;
        head?: never;
        /** 更新通知策略 */
        patch: operations["updateNotificationPolicy"];
        trace?: never;
    };
    "/channels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢通知管道 */
        get: operations["listNotificationChannels"];
        put?: never;
        /** 建立通知管道 */
        post: operations["createNotificationChannel"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/channels/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得通知管道 */
        get: operations["getNotificationChannel"];
        /** 覆寫通知管道 */
        put: operations["replaceNotificationChannel"];
        post?: never;
        /** 刪除通知管道 */
        delete: operations["deleteNotificationChannel"];
        options?: never;
        head?: never;
        /** 更新通知管道 */
        patch: operations["updateNotificationChannel"];
        trace?: never;
    };
    "/notifications": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢通知歷史 */
        get: operations["listNotificationHistory"];
        put?: never;
        /** 建立通知紀錄 */
        post: operations["createNotificationRecord"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notifications/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得通知紀錄 */
        get: operations["getNotificationRecord"];
        put?: never;
        post?: never;
        /** 刪除通知紀錄 */
        delete: operations["deleteNotificationRecord"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/labels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢標籤 */
        get: operations["listLabels"];
        put?: never;
        /** 建立標籤 */
        post: operations["createLabel"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/labels/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得標籤 */
        get: operations["getLabel"];
        /** 覆寫標籤 */
        put: operations["replaceLabel"];
        post?: never;
        /** 刪除標籤 */
        delete: operations["deleteLabel"];
        options?: never;
        head?: never;
        /** 更新標籤 */
        patch: operations["updateLabel"];
        trace?: never;
    };
    "/mail-settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢郵件設定 */
        get: operations["listMailSettings"];
        put?: never;
        /** 建立郵件設定 */
        post: operations["createMailSetting"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/mail-settings/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得郵件設定 */
        get: operations["getMailSetting"];
        /** 覆寫郵件設定 */
        put: operations["replaceMailSetting"];
        post?: never;
        /** 刪除郵件設定 */
        delete: operations["deleteMailSetting"];
        options?: never;
        head?: never;
        /** 更新郵件設定 */
        patch: operations["updateMailSetting"];
        trace?: never;
    };
    "/auth-settings": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 查詢身份驗證設定 */
        get: operations["listAuthSettings"];
        put?: never;
        /** 建立身份驗證設定 */
        post: operations["createAuthSetting"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth-settings/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得身份驗證設定 */
        get: operations["getAuthSetting"];
        /** 覆寫身份驗證設定 */
        put: operations["replaceAuthSetting"];
        post?: never;
        /** 刪除身份驗證設定 */
        delete: operations["deleteAuthSetting"];
        options?: never;
        head?: never;
        /** 更新身份驗證設定 */
        patch: operations["updateAuthSetting"];
        trace?: never;
    };
    "/profile": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得目前使用者個人資料 */
        get: operations["getCurrentProfile"];
        /** 覆寫個人資料 */
        put: operations["replaceProfile"];
        /** 建立個人資料 */
        post: operations["createProfile"];
        /** 停用個人資料 */
        delete: operations["deleteProfile"];
        options?: never;
        head?: never;
        /** 更新個人資料 */
        patch: operations["updateProfile"];
        trace?: never;
    };
    "/preferences": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** 取得目前使用者偏好設定 */
        get: operations["getCurrentPreferences"];
        /** 覆寫偏好設定 */
        put: operations["replacePreferences"];
        /** 建立偏好設定 */
        post: operations["createPreferences"];
        /** 重設偏好設定 */
        delete: operations["deletePreferences"];
        options?: never;
        head?: never;
        /** 更新偏好設定 */
        patch: operations["updatePreferences"];
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description 分頁資訊 */
        Pagination: {
            /** @example 1 */
            page?: number;
            /** @example 20 */
            page_size?: number;
            /** @example 200 */
            total?: number;
            /** @example false */
            has_more?: boolean;
        };
        ErrorResponse: {
            /**
             * @description 自訂錯誤代碼
             * @example E4040
             */
            code?: string;
            /**
             * @description 錯誤訊息
             * @example 找不到指定資源
             */
            message?: string;
            /** @description 額外錯誤細節 */
            details?: {
                [key: string]: unknown;
            };
        };
        /** @description 使用者摘要資訊 */
        UserSummary: {
            /** Format: uuid */
            id?: string;
            username?: string;
            display_name?: string;
            /** Format: email */
            email?: string;
            /** @enum {string} */
            role?: "sre_admin" | "sre_operator" | "developer" | "viewer" | "incident_commander";
        };
        TeamSummary: {
            /** Format: uuid */
            id?: string;
            name?: string;
        };
        /** @description 標籤引用資訊 */
        LabelReference: {
            /** Format: uuid */
            id?: string;
            key?: string;
            value?: string;
            /** @example #1677ff */
            color?: string;
        };
        /** @description 事件關聯資源摘要 */
        EventResourceSummary: {
            /** Format: uuid */
            id?: string;
            name?: string;
            /** @enum {string} */
            type?: "server" | "database" | "cache" | "gateway" | "service" | "container" | "queue";
            /** @enum {string} */
            environment?: "production" | "staging" | "development" | "testing";
        };
        /** @description 事件關聯規則摘要 */
        EventRuleSummary: {
            /** Format: uuid */
            id?: string;
            name?: string;
            /** @enum {string} */
            severity?: "critical" | "warning" | "info";
        };
        /** @description 事件時間線紀錄 */
        EventTimelineEntry: {
            /** Format: uuid */
            id?: string;
            /** @enum {string} */
            type?: "created" | "acknowledged" | "assigned" | "escalated" | "resolved" | "note" | "automation";
            message?: string;
            /** Format: date-time */
            created_at?: string;
            actor?: components["schemas"]["UserSummary"];
            metadata?: {
                [key: string]: unknown;
            };
        };
        /** @description 事件資料模型 */
        Event: {
            /** Format: uuid */
            id?: string;
            /** @description 人類可讀事件編號 */
            event_number?: string;
            summary?: string;
            description?: string;
            /** @enum {string} */
            severity?: "critical" | "warning" | "info";
            /** @enum {string} */
            status?: "new" | "acknowledged" | "resolved" | "closed" | "silenced";
            /** @enum {string} */
            service_impact?: "critical" | "high" | "medium" | "low" | "none";
            source?: string;
            /** @enum {string} */
            trigger_operator?: ">" | "<" | ">=" | "<=" | "=" | "!=";
            /** Format: double */
            trigger_threshold?: number;
            /** @example % */
            trigger_unit?: string;
            /** @example 5 */
            trigger_duration_minutes?: number;
            /** Format: double */
            current_value?: number;
            /** Format: date-time */
            triggered_at?: string;
            /** Format: date-time */
            acknowledged_at?: string | null;
            /** Format: date-time */
            resolved_at?: string | null;
            assignee?: components["schemas"]["UserSummary"];
            /** Format: uuid */
            assignee_id?: string | null;
            resource?: components["schemas"]["EventResourceSummary"];
            /** Format: uuid */
            resource_id?: string;
            rule?: components["schemas"]["EventRuleSummary"];
            /** Format: uuid */
            rule_id?: string | null;
            /** Format: uuid */
            automation_execution_id?: string | null;
            tags?: string[];
            metadata?: {
                [key: string]: unknown;
            };
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        EventDetail: components["schemas"]["Event"] & {
            description?: string;
            timeline?: components["schemas"]["EventTimelineEntry"][];
            related_events?: components["schemas"]["Event"][];
            automation_suggestions?: {
                /** Format: uuid */
                script_id?: string;
                name?: string;
                /** @enum {string} */
                priority?: "critical" | "high" | "medium" | "low";
                description?: string;
                /** Format: float */
                confidence?: number;
            }[];
        };
        EventCreateRequest: {
            summary: string;
            description?: string;
            /** @enum {string} */
            severity: "critical" | "warning" | "info";
            /** @enum {string} */
            status: "new" | "acknowledged" | "resolved" | "closed" | "silenced";
            /** @enum {string} */
            service_impact: "critical" | "high" | "medium" | "low" | "none";
            source?: string;
            /** @enum {string} */
            trigger_operator?: ">" | "<" | ">=" | "<=" | "=" | "!=";
            trigger_threshold?: number;
            trigger_unit?: string;
            trigger_duration_minutes?: number;
            current_value?: number;
            /** Format: uuid */
            resource_id: string;
            /** Format: uuid */
            rule_id?: string | null;
            /** Format: uuid */
            assignee_id?: string | null;
            /** Format: uuid */
            automation_execution_id?: string | null;
            tags?: string[];
            metadata?: {
                [key: string]: unknown;
            };
        };
        EventUpdateRequest: {
            summary?: string;
            description?: string;
            /** @enum {string} */
            severity?: "critical" | "warning" | "info";
            /** @enum {string} */
            status?: "new" | "acknowledged" | "resolved" | "closed" | "silenced";
            /** @enum {string} */
            service_impact?: "critical" | "high" | "medium" | "low" | "none";
            source?: string;
            /** @enum {string} */
            trigger_operator?: ">" | "<" | ">=" | "<=" | "=" | "!=";
            trigger_threshold?: number;
            trigger_unit?: string;
            trigger_duration_minutes?: number;
            current_value?: number;
            /** Format: uuid */
            resource_id?: string;
            /** Format: uuid */
            rule_id?: string;
            /** Format: uuid */
            assignee_id?: string;
            /** Format: uuid */
            automation_execution_id?: string;
            tags?: string[];
            metadata?: {
                [key: string]: unknown;
            };
        };
        EventListResponse: {
            items?: components["schemas"]["Event"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        ConditionItem: {
            metric?: string;
            /** @enum {string} */
            comparison?: ">" | "<" | ">=" | "<=" | "=" | "!=";
            threshold?: number;
            unit?: string;
            duration_minutes?: number;
            /** @enum {string} */
            severity?: "critical" | "warning" | "info";
        };
        ConditionGroup: {
            /** @enum {string} */
            logic?: "AND" | "OR";
            conditions?: components["schemas"]["ConditionItem"][];
        };
        EventRule: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            enabled?: boolean;
            /** @enum {string} */
            severity?: "critical" | "warning" | "info";
            /** @enum {string} */
            target_type?: "resource" | "resource_group" | "label";
            target_filters?: {
                resource_types?: string[];
                environments?: string[];
                labels?: string[];
            };
            label_selectors?: components["schemas"]["LabelReference"][];
            condition_groups?: components["schemas"]["ConditionGroup"][];
            title_template?: string;
            message_template?: string;
            automation_enabled?: boolean;
            /** Format: uuid */
            script_id?: string | null;
            automation_parameters?: {
                [key: string]: unknown;
            };
            created_by?: components["schemas"]["UserSummary"];
            updated_by?: components["schemas"]["UserSummary"];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            last_tested_at?: string | null;
        };
        EventRuleCreateRequest: {
            name: string;
            description?: string;
            enabled: boolean;
            /** @enum {string} */
            severity: "critical" | "warning" | "info";
            /** @enum {string} */
            target_type?: "resource" | "resource_group" | "label";
            target_filters?: {
                resource_types?: string[];
                environments?: string[];
                labels?: string[];
            };
            label_selectors?: components["schemas"]["LabelReference"][];
            condition_groups: components["schemas"]["ConditionGroup"][];
            title_template?: string;
            message_template?: string;
            automation_enabled?: boolean;
            /** Format: uuid */
            script_id?: string | null;
            automation_parameters?: {
                [key: string]: unknown;
            };
        };
        EventRuleUpdateRequest: {
            name?: string;
            description?: string;
            enabled?: boolean;
            /** @enum {string} */
            severity?: "critical" | "warning" | "info";
            /** @enum {string} */
            target_type?: "resource" | "resource_group" | "label";
            target_filters?: {
                resource_types?: string[];
                environments?: string[];
                labels?: string[];
            };
            label_selectors?: components["schemas"]["LabelReference"][];
            condition_groups?: components["schemas"]["ConditionGroup"][];
            title_template?: string;
            message_template?: string;
            automation_enabled?: boolean;
            /** Format: uuid */
            script_id?: string;
            automation_parameters?: {
                [key: string]: unknown;
            };
        };
        EventRuleListResponse: {
            items?: components["schemas"]["EventRule"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        Silence: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            /** @enum {string} */
            silence_type?: "single" | "recurring" | "condition";
            /** @enum {string} */
            scope?: "global" | "resource" | "resource_group" | "team" | "rule";
            matchers?: {
                key?: string;
                /** @enum {string} */
                operator?: "equals" | "not_equals" | "regex";
                value?: string;
            }[];
            /** Format: date-time */
            start_time?: string;
            /** Format: date-time */
            end_time?: string;
            timezone?: string;
            is_enabled?: boolean;
            repeat?: {
                /** @enum {string} */
                repeat_type?: "none" | "daily" | "weekly" | "monthly";
                days_of_week?: string[];
                day_of_month?: number;
                max_occurrences?: number;
                /** Format: date-time */
                until?: string;
            };
            notify_on_start?: boolean;
            notify_on_end?: boolean;
            created_by?: components["schemas"]["UserSummary"];
            updated_by?: components["schemas"]["UserSummary"];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        SilenceCreateRequest: {
            name: string;
            description?: string;
            /** @enum {string} */
            silence_type: "single" | "recurring" | "condition";
            /** @enum {string} */
            scope: "global" | "resource" | "resource_group" | "team" | "rule";
            matchers?: {
                key?: string;
                operator?: string;
                value?: string;
            }[];
            /** Format: date-time */
            start_time: string;
            /** Format: date-time */
            end_time: string;
            timezone?: string;
            is_enabled?: boolean;
            repeat?: {
                /** @enum {string} */
                repeat_type?: "none" | "daily" | "weekly" | "monthly";
                days_of_week?: string[];
                day_of_month?: number;
                max_occurrences?: number;
                /** Format: date-time */
                until?: string;
            };
            notify_on_start?: boolean;
            notify_on_end?: boolean;
        };
        SilenceUpdateRequest: {
            name?: string;
            description?: string;
            /** @enum {string} */
            silence_type?: "single" | "recurring" | "condition";
            /** @enum {string} */
            scope?: "global" | "resource" | "resource_group" | "team" | "rule";
            matchers?: {
                key?: string;
                operator?: string;
                value?: string;
            }[];
            /** Format: date-time */
            start_time?: string;
            /** Format: date-time */
            end_time?: string;
            timezone?: string;
            is_enabled?: boolean;
            repeat?: {
                /** @enum {string} */
                repeat_type?: "none" | "daily" | "weekly" | "monthly";
                days_of_week?: string[];
                day_of_month?: number;
                max_occurrences?: number;
                /** Format: date-time */
                until?: string;
            };
            notify_on_start?: boolean;
            notify_on_end?: boolean;
        };
        SilenceListResponse: {
            items?: components["schemas"]["Silence"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        Resource: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            /** @enum {string} */
            type?: "server" | "database" | "cache" | "gateway" | "service" | "container" | "queue";
            ip_address?: string;
            /** @enum {string} */
            status?: "healthy" | "warning" | "critical" | "offline";
            /** @enum {string} */
            environment?: "production" | "staging" | "development" | "testing";
            region?: string;
            owner_team?: string;
            tags?: string[];
            metrics?: {
                [key: string]: unknown;
            };
            dependencies?: string[];
            topology_metadata?: {
                [key: string]: unknown;
            };
            group_ids?: string[];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        ResourceCreateRequest: {
            name: string;
            description?: string;
            /** @enum {string} */
            type: "server" | "database" | "cache" | "gateway" | "service" | "container" | "queue";
            ip_address?: string;
            /** @enum {string} */
            status?: "healthy" | "warning" | "critical" | "offline";
            /** @enum {string} */
            environment: "production" | "staging" | "development" | "testing";
            region?: string;
            owner_team?: string;
            tags?: string[];
            metrics?: {
                [key: string]: unknown;
            };
            dependencies?: string[];
            topology_metadata?: {
                [key: string]: unknown;
            };
            group_ids?: string[];
        };
        ResourceUpdateRequest: {
            name?: string;
            description?: string;
            /** @enum {string} */
            type?: "server" | "database" | "cache" | "gateway" | "service" | "container" | "queue";
            ip_address?: string;
            /** @enum {string} */
            status?: "healthy" | "warning" | "critical" | "offline";
            /** @enum {string} */
            environment?: "production" | "staging" | "development" | "testing";
            region?: string;
            owner_team?: string;
            tags?: string[];
            metrics?: {
                [key: string]: unknown;
            };
            dependencies?: string[];
            topology_metadata?: {
                [key: string]: unknown;
            };
            group_ids?: string[];
        };
        ResourceListResponse: {
            items?: components["schemas"]["Resource"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        ResourceGroup: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            owner_team?: string;
            /** @enum {string} */
            status?: "healthy" | "warning" | "critical";
            tags?: string[];
            resource_ids?: string[];
            subscriber_ids?: string[];
            metadata?: {
                [key: string]: unknown;
            };
            created_by?: components["schemas"]["UserSummary"];
            updated_by?: components["schemas"]["UserSummary"];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        ResourceGroupCreateRequest: {
            name: string;
            description?: string;
            owner_team?: string;
            /** @enum {string} */
            status?: "healthy" | "warning" | "critical";
            tags?: string[];
            resource_ids?: string[];
            subscriber_ids?: string[];
            metadata?: {
                [key: string]: unknown;
            };
        };
        ResourceGroupUpdateRequest: {
            name?: string;
            description?: string;
            owner_team?: string;
            /** @enum {string} */
            status?: "healthy" | "warning" | "critical";
            tags?: string[];
            resource_ids?: string[];
            subscriber_ids?: string[];
            metadata?: {
                [key: string]: unknown;
            };
        };
        ResourceGroupListResponse: {
            items?: components["schemas"]["ResourceGroup"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        TopologyNode: {
            /** Format: uuid */
            resource_id?: string;
            name?: string;
            type?: string;
            /** @enum {string} */
            status?: "healthy" | "warning" | "critical" | "offline";
            position?: {
                x?: number;
                y?: number;
            };
            metadata?: {
                [key: string]: unknown;
            };
        };
        TopologyEdge: {
            /** Format: uuid */
            source_id?: string;
            /** Format: uuid */
            target_id?: string;
            connection_type?: string;
            metadata?: {
                [key: string]: unknown;
            };
        };
        TopologyView: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            /** @enum {string} */
            layout?: "force" | "grid" | "radial";
            filters?: {
                [key: string]: unknown;
            };
            nodes?: components["schemas"]["TopologyNode"][];
            edges?: components["schemas"]["TopologyEdge"][];
            created_by?: components["schemas"]["UserSummary"];
            updated_by?: components["schemas"]["UserSummary"];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        TopologyCreateRequest: {
            name: string;
            description?: string;
            /** @enum {string} */
            layout: "force" | "grid" | "radial";
            filters?: {
                [key: string]: unknown;
            };
            nodes?: components["schemas"]["TopologyNode"][];
            edges?: components["schemas"]["TopologyEdge"][];
        };
        TopologyUpdateRequest: {
            name?: string;
            description?: string;
            /** @enum {string} */
            layout?: "force" | "grid" | "radial";
            filters?: {
                [key: string]: unknown;
            };
            nodes?: components["schemas"]["TopologyNode"][];
            edges?: components["schemas"]["TopologyEdge"][];
        };
        TopologyListResponse: {
            items?: components["schemas"]["TopologyView"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        Dashboard: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            /** @enum {string} */
            category?: "infrastructure" | "war_room" | "insight" | "operations" | "automation" | "custom";
            /** @enum {string} */
            type?: "general" | "insight" | "war_room";
            /** Format: uuid */
            owner_id?: string;
            is_published?: boolean;
            is_default?: boolean;
            tags?: string[];
            layout?: {
                [key: string]: unknown;
            };
            filters?: {
                [key: string]: unknown;
            };
            view_count?: number;
            favorite_count?: number;
            /** Format: date-time */
            last_refreshed_at?: string | null;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        DashboardCreateRequest: {
            name: string;
            description?: string;
            /** @enum {string} */
            category: "infrastructure" | "war_room" | "insight" | "operations" | "automation" | "custom";
            /** @enum {string} */
            type: "general" | "insight" | "war_room";
            /** Format: uuid */
            owner_id?: string;
            is_published?: boolean;
            is_default?: boolean;
            tags?: string[];
            layout?: {
                [key: string]: unknown;
            };
            filters?: {
                [key: string]: unknown;
            };
        };
        DashboardUpdateRequest: {
            name?: string;
            description?: string;
            /** @enum {string} */
            category?: "infrastructure" | "war_room" | "insight" | "operations" | "automation" | "custom";
            /** @enum {string} */
            type?: "general" | "insight" | "war_room";
            /** Format: uuid */
            owner_id?: string;
            is_published?: boolean;
            is_default?: boolean;
            tags?: string[];
            layout?: {
                [key: string]: unknown;
            };
            filters?: {
                [key: string]: unknown;
            };
        };
        DashboardListResponse: {
            items?: components["schemas"]["Dashboard"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        Insight: components["schemas"]["Dashboard"] & {
            insight_summary?: string;
            key_metrics?: {
                title?: string;
                value?: string;
                trend?: string;
            }[];
        };
        InsightListResponse: {
            items?: components["schemas"]["Insight"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        WarRoom: components["schemas"]["Dashboard"] & {
            incident_focus?: components["schemas"]["Event"][];
            active_bridges?: {
                /** Format: uuid */
                id?: string;
                title?: string;
                /** @enum {string} */
                status?: "open" | "resolved";
                commander?: components["schemas"]["UserSummary"];
            }[];
        };
        WarRoomListResponse: {
            items?: components["schemas"]["WarRoom"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        Script: {
            /** Format: uuid */
            id?: string;
            name?: string;
            /** @enum {string} */
            type?: "shell" | "python" | "ansible" | "terraform" | "powershell";
            description?: string;
            version?: string;
            content?: string;
            tags?: string[];
            is_active?: boolean;
            created_by?: components["schemas"]["UserSummary"];
            updated_by?: components["schemas"]["UserSummary"];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
            /** Format: date-time */
            last_executed_at?: string | null;
        };
        ScriptCreateRequest: {
            name: string;
            /** @enum {string} */
            type: "shell" | "python" | "ansible" | "terraform" | "powershell";
            description?: string;
            tags?: string[];
            content: string;
            is_active?: boolean;
        };
        ScriptUpdateRequest: {
            name?: string;
            /** @enum {string} */
            type?: "shell" | "python" | "ansible" | "terraform" | "powershell";
            description?: string;
            tags?: string[];
            content?: string;
            is_active?: boolean;
        };
        ScriptListResponse: {
            items?: components["schemas"]["Script"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        Schedule: {
            /** Format: uuid */
            id?: string;
            name?: string;
            /** Format: uuid */
            script_id?: string;
            /** @enum {string} */
            type?: "one_time" | "recurring" | "event_driven";
            cron_expression?: string;
            timezone?: string;
            /** Format: date-time */
            next_run_at?: string;
            /** Format: date-time */
            last_run_at?: string | null;
            /** @enum {string} */
            status?: "enabled" | "disabled" | "paused";
            /** @enum {string} */
            concurrency_policy?: "allow" | "forbid" | "replace";
            retry_policy?: {
                max_attempts?: number;
                interval_seconds?: number;
            };
            parameters?: {
                [key: string]: unknown;
            };
            created_by?: components["schemas"]["UserSummary"];
            updated_by?: components["schemas"]["UserSummary"];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        ScheduleCreateRequest: {
            name: string;
            /** Format: uuid */
            script_id: string;
            /** @enum {string} */
            type: "one_time" | "recurring" | "event_driven";
            cron_expression?: string;
            timezone?: string;
            /** Format: date-time */
            next_run_at?: string;
            /** @enum {string} */
            status?: "enabled" | "disabled" | "paused";
            /** @enum {string} */
            concurrency_policy?: "allow" | "forbid" | "replace";
            retry_policy?: {
                max_attempts?: number;
                interval_seconds?: number;
            };
            parameters?: {
                [key: string]: unknown;
            };
        };
        ScheduleUpdateRequest: {
            name?: string;
            /** Format: uuid */
            script_id?: string;
            /** @enum {string} */
            type?: "one_time" | "recurring" | "event_driven";
            cron_expression?: string;
            timezone?: string;
            /** Format: date-time */
            next_run_at?: string;
            /** @enum {string} */
            status?: "enabled" | "disabled" | "paused";
            /** @enum {string} */
            concurrency_policy?: "allow" | "forbid" | "replace";
            retry_policy?: {
                max_attempts?: number;
                interval_seconds?: number;
            };
            parameters?: {
                [key: string]: unknown;
            };
        };
        ScheduleListResponse: {
            items?: components["schemas"]["Schedule"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        Execution: {
            /** Format: uuid */
            id?: string;
            /** Format: uuid */
            script_id?: string;
            /** Format: uuid */
            schedule_id?: string | null;
            /** Format: uuid */
            event_id?: string | null;
            /** @enum {string} */
            trigger_type?: "manual" | "schedule" | "event" | "api";
            /** @enum {string} */
            status?: "pending" | "running" | "success" | "failed" | "cancelled" | "timeout";
            /** Format: date-time */
            started_at?: string;
            /** Format: date-time */
            finished_at?: string | null;
            duration_ms?: number;
            triggered_by?: components["schemas"]["UserSummary"];
            output?: string;
            error_message?: string;
            parameters?: {
                [key: string]: unknown;
            };
            /** Format: date-time */
            created_at?: string;
        };
        ExecutionListResponse: {
            items?: components["schemas"]["Execution"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        NotificationRecipient: {
            /** @enum {string} */
            type?: "user" | "team" | "role";
            id?: string;
            display_name?: string;
        };
        NotificationPolicy: {
            /** Format: uuid */
            id?: string;
            name?: string;
            description?: string;
            enabled?: boolean;
            severity_filters?: ("critical" | "warning" | "info")[];
            event_filters?: {
                [key: string]: unknown;
            };
            resource_filters?: {
                [key: string]: unknown;
            };
            channel_ids?: string[];
            recipients?: components["schemas"]["NotificationRecipient"][];
            /** @enum {string} */
            priority?: "high" | "medium" | "low";
            mute_rule_ids?: string[];
            /** @enum {string} */
            aggregation_strategy?: "none" | "merge_by_event" | "merge_by_resource";
            delay_seconds?: number;
            retry_policy?: {
                max_attempts?: number;
                interval_seconds?: number;
            };
            created_by?: components["schemas"]["UserSummary"];
            updated_by?: components["schemas"]["UserSummary"];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        NotificationPolicyCreateRequest: {
            name: string;
            description?: string;
            enabled: boolean;
            severity_filters?: ("critical" | "warning" | "info")[];
            event_filters?: {
                [key: string]: unknown;
            };
            resource_filters?: {
                [key: string]: unknown;
            };
            channel_ids?: string[];
            recipients: components["schemas"]["NotificationRecipient"][];
            /** @enum {string} */
            priority?: "high" | "medium" | "low";
            mute_rule_ids?: string[];
            /** @enum {string} */
            aggregation_strategy?: "none" | "merge_by_event" | "merge_by_resource";
            delay_seconds?: number;
            retry_policy?: {
                max_attempts?: number;
                interval_seconds?: number;
            };
        };
        NotificationPolicyUpdateRequest: {
            name?: string;
            description?: string;
            enabled?: boolean;
            severity_filters?: ("critical" | "warning" | "info")[];
            event_filters?: {
                [key: string]: unknown;
            };
            resource_filters?: {
                [key: string]: unknown;
            };
            channel_ids?: string[];
            recipients?: components["schemas"]["NotificationRecipient"][];
            /** @enum {string} */
            priority?: "high" | "medium" | "low";
            mute_rule_ids?: string[];
            /** @enum {string} */
            aggregation_strategy?: "none" | "merge_by_event" | "merge_by_resource";
            delay_seconds?: number;
            retry_policy?: {
                max_attempts?: number;
                interval_seconds?: number;
            };
        };
        NotificationPolicyListResponse: {
            items?: components["schemas"]["NotificationPolicy"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        NotificationChannel: {
            /** Format: uuid */
            id?: string;
            name?: string;
            /** @enum {string} */
            type?: "email" | "slack" | "teams" | "webhook" | "line" | "sms";
            description?: string;
            /** @enum {string} */
            status?: "active" | "inactive" | "error";
            config?: {
                [key: string]: unknown;
            };
            /** Format: date-time */
            last_tested_at?: string | null;
            created_by?: components["schemas"]["UserSummary"];
            updated_by?: components["schemas"]["UserSummary"];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        NotificationChannelCreateRequest: {
            name: string;
            /** @enum {string} */
            type: "email" | "slack" | "teams" | "webhook" | "line" | "sms";
            description?: string;
            config?: {
                [key: string]: unknown;
            };
            /** @enum {string} */
            status?: "active" | "inactive" | "error";
        };
        NotificationChannelUpdateRequest: {
            name?: string;
            /** @enum {string} */
            type?: "email" | "slack" | "teams" | "webhook" | "line" | "sms";
            description?: string;
            config?: {
                [key: string]: unknown;
            };
            /** @enum {string} */
            status?: "active" | "inactive" | "error";
        };
        NotificationChannelListResponse: {
            items?: components["schemas"]["NotificationChannel"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        NotificationRecord: {
            /** Format: uuid */
            id?: string;
            /** Format: uuid */
            policy_id?: string;
            policy_name?: string;
            /** Format: uuid */
            channel_id?: string;
            /** @enum {string} */
            channel_type?: "email" | "slack" | "teams" | "webhook" | "line" | "sms";
            /** Format: uuid */
            event_id?: string | null;
            recipients?: components["schemas"]["NotificationRecipient"][];
            /** @enum {string} */
            status?: "success" | "failed" | "retrying" | "cancelled";
            retry_count?: number;
            /** Format: date-time */
            sent_at?: string;
            /** Format: date-time */
            completed_at?: string | null;
            duration_ms?: number;
            payload?: {
                [key: string]: unknown;
            };
            response?: {
                [key: string]: unknown;
            };
            error_message?: string;
            metadata?: {
                [key: string]: unknown;
            };
        };
        NotificationHistoryListResponse: {
            items?: components["schemas"]["NotificationRecord"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        Label: {
            /** Format: uuid */
            id?: string;
            key?: string;
            value?: string;
            category?: string;
            color?: string;
            description?: string;
            is_system?: boolean;
            created_by?: components["schemas"]["UserSummary"];
            updated_by?: components["schemas"]["UserSummary"];
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        LabelCreateRequest: {
            key: string;
            value: string;
            category?: string;
            color?: string;
            description?: string;
            is_system?: boolean;
        };
        LabelUpdateRequest: {
            key?: string;
            value?: string;
            category?: string;
            color?: string;
            description?: string;
            is_system?: boolean;
        };
        LabelListResponse: {
            items?: components["schemas"]["Label"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        MailSetting: {
            /** Format: uuid */
            id?: string;
            smtp_host?: string;
            smtp_port?: number;
            /** @enum {string} */
            encryption?: "none" | "starttls" | "ssl";
            username?: string;
            sender_name?: string;
            sender_email?: string;
            reply_to?: string;
            is_enabled?: boolean;
            test_recipient?: string;
            updated_by?: components["schemas"]["UserSummary"];
            /** Format: date-time */
            updated_at?: string;
        };
        MailSettingCreateRequest: {
            smtp_host: string;
            smtp_port: number;
            /** @enum {string} */
            encryption?: "none" | "starttls" | "ssl";
            username?: string;
            password?: string;
            sender_name?: string;
            sender_email?: string;
            reply_to?: string;
            is_enabled?: boolean;
            test_recipient?: string;
        };
        MailSettingUpdateRequest: {
            smtp_host?: string;
            smtp_port?: number;
            /** @enum {string} */
            encryption?: "none" | "starttls" | "ssl";
            username?: string;
            password?: string;
            sender_name?: string;
            sender_email?: string;
            reply_to?: string;
            is_enabled?: boolean;
            test_recipient?: string;
        };
        MailSettingListResponse: {
            items?: components["schemas"]["MailSetting"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        AuthSetting: {
            /** Format: uuid */
            id?: string;
            oidc_enabled?: boolean;
            /** @enum {string} */
            provider?: "keycloak" | "auth0" | "google" | "microsoft" | "custom";
            realm?: string;
            client_id?: string;
            client_secret_hint?: string;
            auth_url?: string;
            token_url?: string;
            userinfo_url?: string;
            redirect_uri?: string;
            logout_url?: string;
            scopes?: string[];
            user_sync?: boolean;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        AuthSettingCreateRequest: {
            oidc_enabled?: boolean;
            /** @enum {string} */
            provider: "keycloak" | "auth0" | "google" | "microsoft" | "custom";
            realm?: string;
            client_id: string;
            client_secret?: string;
            auth_url: string;
            token_url: string;
            userinfo_url: string;
            redirect_uri: string;
            logout_url?: string;
            scopes?: string[];
            user_sync?: boolean;
        };
        AuthSettingUpdateRequest: {
            oidc_enabled?: boolean;
            /** @enum {string} */
            provider?: "keycloak" | "auth0" | "google" | "microsoft" | "custom";
            realm?: string;
            client_id?: string;
            client_secret?: string;
            auth_url?: string;
            token_url?: string;
            userinfo_url?: string;
            redirect_uri?: string;
            logout_url?: string;
            scopes?: string[];
            user_sync?: boolean;
        };
        AuthSettingListResponse: {
            items?: components["schemas"]["AuthSetting"][];
            page?: number;
            page_size?: number;
            total?: number;
            has_more?: boolean;
        };
        UserProfile: {
            /** Format: uuid */
            id?: string;
            username?: string;
            display_name?: string;
            email?: string;
            /** @enum {string} */
            role?: "sre_admin" | "sre_operator" | "developer" | "viewer" | "incident_commander";
            teams?: components["schemas"]["TeamSummary"][];
            timezone?: string;
            language?: string;
            /** @enum {string} */
            status?: "active" | "inactive" | "suspended";
            /** Format: date-time */
            last_login_at?: string | null;
            /** Format: date-time */
            created_at?: string;
            /** Format: date-time */
            updated_at?: string;
        };
        UserPreference: {
            /** @enum {string} */
            theme?: "light" | "dark" | "system";
            /** @enum {string} */
            default_page?: "war_room" | "events" | "resources" | "dashboards";
            /** @enum {string} */
            language?: "zh-TW" | "en-US";
            timezone?: string;
            notification_preferences?: {
                email_notification?: boolean;
                slack_notification?: boolean;
                merge_notification?: boolean;
            };
            display_options?: {
                animation?: boolean;
                tooltips?: boolean;
                compact_mode?: boolean;
            };
            /** Format: date-time */
            updated_at?: string;
        };
        UserPreferenceUpdateRequest: {
            /** @enum {string} */
            theme?: "light" | "dark" | "system";
            /** @enum {string} */
            default_page?: "war_room" | "events" | "resources" | "dashboards";
            /** @enum {string} */
            language?: "zh-TW" | "en-US";
            timezone?: string;
            notification_preferences?: {
                email_notification?: boolean;
                slack_notification?: boolean;
                merge_notification?: boolean;
            };
            display_options?: {
                animation?: boolean;
                tooltips?: boolean;
                compact_mode?: boolean;
            };
        };
    };
    responses: {
        /** @description 指定資源不存在 */
        NotFound: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description 未授權或權限不足 */
        Unauthorized: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
        /** @description 請求參數驗證失敗 */
        ValidationError: {
            headers: {
                [name: string]: unknown;
            };
            content: {
                "application/json": components["schemas"]["ErrorResponse"];
            };
        };
    };
    parameters: {
        /** @description 分頁頁碼，預設為 1 */
        PageParam: number;
        /** @description 每頁資料筆數，預設為 20，最大 100 */
        PageSizeParam: number;
        /** @description 排序欄位，依各資源支援欄位設定 */
        SortByParam: string;
        /** @description 排序方向，升冪或降冪 */
        SortOrderParam: "asc" | "desc";
        /** @description 資源唯一識別碼 */
        ResourceIdParam: string;
    };
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    listEvents: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                status?: "new" | "acknowledged" | "resolved" | "closed" | "silenced";
                severity?: "critical" | "warning" | "info";
                resource_id?: string;
                rule_id?: string;
                assignee_id?: string;
                service_impact?: "critical" | "high" | "medium" | "low" | "none";
                search?: string;
                /** @description 起始時間，ISO 8601 格式 */
                from?: string;
                /** @description 結束時間，ISO 8601 格式 */
                to?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得事件列表 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventListResponse"];
                };
            };
            400: components["responses"]["ValidationError"];
            401: components["responses"]["Unauthorized"];
        };
    };
    createEvent: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EventCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventDetail"];
                };
            };
            400: components["responses"]["ValidationError"];
            401: components["responses"]["Unauthorized"];
        };
    };
    getEvent: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得事件 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventDetail"];
                };
            };
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    replaceEvent: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EventCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventDetail"];
                };
            };
            400: components["responses"]["ValidationError"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    deleteEvent: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    updateEvent: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EventUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventDetail"];
                };
            };
            400: components["responses"]["ValidationError"];
            401: components["responses"]["Unauthorized"];
            404: components["responses"]["NotFound"];
        };
    };
    listEventRules: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                enabled?: boolean;
                severity?: "critical" | "warning" | "info";
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得事件規則 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventRuleListResponse"];
                };
            };
            400: components["responses"]["ValidationError"];
        };
    };
    createEventRule: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EventRuleCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventRule"];
                };
            };
            400: components["responses"]["ValidationError"];
        };
    };
    getEventRule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得事件規則 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventRule"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceEventRule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EventRuleCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventRule"];
                };
            };
            400: components["responses"]["ValidationError"];
            404: components["responses"]["NotFound"];
        };
    };
    deleteEventRule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateEventRule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["EventRuleUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["EventRule"];
                };
            };
            400: components["responses"]["ValidationError"];
            404: components["responses"]["NotFound"];
        };
    };
    listSilences: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                scope?: "global" | "resource" | "resource_group" | "team" | "rule";
                silence_type?: "single" | "recurring" | "condition";
                is_enabled?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得靜音規則 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SilenceListResponse"];
                };
            };
        };
    };
    createSilence: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SilenceCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Silence"];
                };
            };
            400: components["responses"]["ValidationError"];
        };
    };
    getSilence: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得靜音規則 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Silence"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceSilence: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SilenceCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Silence"];
                };
            };
            400: components["responses"]["ValidationError"];
            404: components["responses"]["NotFound"];
        };
    };
    deleteSilence: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateSilence: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SilenceUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Silence"];
                };
            };
            400: components["responses"]["ValidationError"];
            404: components["responses"]["NotFound"];
        };
    };
    listResources: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                type?: "server" | "database" | "cache" | "gateway" | "service" | "container" | "queue";
                status?: "healthy" | "warning" | "critical" | "offline";
                environment?: "production" | "staging" | "development" | "testing";
                group_id?: string;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得資源列表 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceListResponse"];
                };
            };
        };
    };
    createResource: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResourceCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Resource"];
                };
            };
            400: components["responses"]["ValidationError"];
        };
    };
    getResource: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得資源 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Resource"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceResource: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResourceCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Resource"];
                };
            };
            400: components["responses"]["ValidationError"];
            404: components["responses"]["NotFound"];
        };
    };
    deleteResource: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateResource: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResourceUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Resource"];
                };
            };
            400: components["responses"]["ValidationError"];
            404: components["responses"]["NotFound"];
        };
    };
    listResourceGroups: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                status?: "healthy" | "warning" | "critical";
                owner_team?: string;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得資源群組 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceGroupListResponse"];
                };
            };
        };
    };
    createResourceGroup: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResourceGroupCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceGroup"];
                };
            };
            400: components["responses"]["ValidationError"];
        };
    };
    getResourceGroup: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得資源群組 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceGroup"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceResourceGroup: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResourceGroupCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceGroup"];
                };
            };
            400: components["responses"]["ValidationError"];
            404: components["responses"]["NotFound"];
        };
    };
    deleteResourceGroup: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateResourceGroup: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ResourceGroupUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResourceGroup"];
                };
            };
            400: components["responses"]["ValidationError"];
            404: components["responses"]["NotFound"];
        };
    };
    listTopologyViews: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                layout?: "force" | "grid" | "radial";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得拓撲視圖 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TopologyListResponse"];
                };
            };
        };
    };
    createTopologyView: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TopologyCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TopologyView"];
                };
            };
        };
    };
    getTopologyView: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得拓撲視圖 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TopologyView"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceTopologyView: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TopologyCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TopologyView"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteTopologyView: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateTopologyView: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["TopologyUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TopologyView"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    listDashboards: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                category?: "infrastructure" | "war_room" | "insight" | "operations" | "automation" | "custom";
                type?: "general" | "insight" | "war_room";
                is_published?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得儀表板 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DashboardListResponse"];
                };
            };
        };
    };
    createDashboard: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DashboardCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Dashboard"];
                };
            };
        };
    };
    getDashboard: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得儀表板 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Dashboard"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceDashboard: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DashboardCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Dashboard"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteDashboard: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateDashboard: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DashboardUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Dashboard"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    listInsights: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                category?: "infrastructure" | "operations" | "automation";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得洞察 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["InsightListResponse"];
                };
            };
        };
    };
    createInsight: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DashboardCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Insight"];
                };
            };
        };
    };
    getInsight: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得洞察 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Insight"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceInsight: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DashboardCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Insight"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteInsight: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateInsight: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DashboardUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Insight"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    listWarRoomDashboards: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得戰情室資料 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WarRoomListResponse"];
                };
            };
        };
    };
    createWarRoomDashboard: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DashboardCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WarRoom"];
                };
            };
        };
    };
    getWarRoomDashboard: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得戰情室 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WarRoom"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceWarRoomDashboard: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DashboardCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WarRoom"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteWarRoomDashboard: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateWarRoomDashboard: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DashboardUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WarRoom"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    listScripts: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                type?: "shell" | "python" | "ansible" | "terraform" | "powershell";
                is_active?: boolean;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得腳本列表 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ScriptListResponse"];
                };
            };
        };
    };
    createScript: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScriptCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Script"];
                };
            };
        };
    };
    getScript: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得腳本 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Script"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceScript: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScriptCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Script"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteScript: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateScript: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScriptUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Script"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    listSchedules: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                type?: "one_time" | "recurring" | "event_driven";
                status?: "enabled" | "disabled" | "paused";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得排程 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ScheduleListResponse"];
                };
            };
        };
    };
    createSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScheduleCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Schedule"];
                };
            };
        };
    };
    getSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得排程 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Schedule"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScheduleCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Schedule"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateSchedule: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["ScheduleUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Schedule"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    listExecutions: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                status?: "pending" | "running" | "success" | "failed" | "cancelled" | "timeout";
                script_id?: string;
                schedule_id?: string;
                trigger_type?: "manual" | "schedule" | "event" | "api";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得執行紀錄 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ExecutionListResponse"];
                };
            };
        };
    };
    createExecution: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["Execution"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Execution"];
                };
            };
        };
    };
    getExecution: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得執行紀錄 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Execution"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteExecution: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    listNotificationPolicies: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                enabled?: boolean;
                priority?: "high" | "medium" | "low";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得通知策略 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationPolicyListResponse"];
                };
            };
        };
    };
    createNotificationPolicy: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NotificationPolicyCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationPolicy"];
                };
            };
        };
    };
    getNotificationPolicy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得通知策略 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationPolicy"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceNotificationPolicy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NotificationPolicyCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationPolicy"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteNotificationPolicy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateNotificationPolicy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NotificationPolicyUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationPolicy"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    listNotificationChannels: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                type?: "email" | "slack" | "teams" | "webhook" | "line" | "sms";
                status?: "active" | "inactive" | "error";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得通知管道 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationChannelListResponse"];
                };
            };
        };
    };
    createNotificationChannel: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NotificationChannelCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationChannel"];
                };
            };
        };
    };
    getNotificationChannel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得通知管道 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationChannel"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceNotificationChannel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NotificationChannelCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationChannel"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteNotificationChannel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateNotificationChannel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NotificationChannelUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationChannel"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    listNotificationHistory: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                status?: "success" | "failed" | "retrying" | "cancelled";
                policy_id?: string;
                channel_id?: string;
                from?: string;
                to?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得通知歷史 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationHistoryListResponse"];
                };
            };
        };
    };
    createNotificationRecord: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["NotificationRecord"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationRecord"];
                };
            };
        };
    };
    getNotificationRecord: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得通知紀錄 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NotificationRecord"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteNotificationRecord: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    listLabels: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
                /** @description 排序欄位，依各資源支援欄位設定 */
                sort_by?: components["parameters"]["SortByParam"];
                /** @description 排序方向，升冪或降冪 */
                sort_order?: components["parameters"]["SortOrderParam"];
                category?: string;
                search?: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得標籤 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LabelListResponse"];
                };
            };
        };
    };
    createLabel: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LabelCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Label"];
                };
            };
        };
    };
    getLabel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得標籤 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Label"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceLabel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LabelCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Label"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteLabel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateLabel: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LabelUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Label"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    listMailSettings: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得郵件設定 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MailSettingListResponse"];
                };
            };
        };
    };
    createMailSetting: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MailSettingCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MailSetting"];
                };
            };
        };
    };
    getMailSetting: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得郵件設定 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MailSetting"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceMailSetting: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MailSettingCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MailSetting"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteMailSetting: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateMailSetting: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["MailSettingUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MailSetting"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    listAuthSettings: {
        parameters: {
            query?: {
                /** @description 分頁頁碼，預設為 1 */
                page?: components["parameters"]["PageParam"];
                /** @description 每頁資料筆數，預設為 20，最大 100 */
                page_size?: components["parameters"]["PageSizeParam"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得身份驗證設定 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuthSettingListResponse"];
                };
            };
        };
    };
    createAuthSetting: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AuthSettingCreateRequest"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuthSetting"];
                };
            };
        };
    };
    getAuthSetting: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得身份驗證設定 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuthSetting"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    replaceAuthSetting: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AuthSettingCreateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuthSetting"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    deleteAuthSetting: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 刪除成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            404: components["responses"]["NotFound"];
        };
    };
    updateAuthSetting: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                /** @description 資源唯一識別碼 */
                id: components["parameters"]["ResourceIdParam"];
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["AuthSettingUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AuthSetting"];
                };
            };
            404: components["responses"]["NotFound"];
        };
    };
    getCurrentProfile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得個人資料 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserProfile"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    replaceProfile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserProfile"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserProfile"];
                };
            };
        };
    };
    createProfile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserProfile"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserProfile"];
                };
            };
        };
    };
    deleteProfile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 停用成功 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updateProfile: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserProfile"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserProfile"];
                };
            };
        };
    };
    getCurrentPreferences: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 成功取得偏好設定 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPreference"];
                };
            };
            401: components["responses"]["Unauthorized"];
        };
    };
    replacePreferences: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserPreferenceUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPreference"];
                };
            };
        };
    };
    createPreferences: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserPreference"];
            };
        };
        responses: {
            /** @description 建立成功 */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPreference"];
                };
            };
        };
    };
    deletePreferences: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description 已重設為預設值 */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    updatePreferences: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UserPreferenceUpdateRequest"];
            };
        };
        responses: {
            /** @description 更新成功 */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["UserPreference"];
                };
            };
        };
    };
}
