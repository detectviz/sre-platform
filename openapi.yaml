# SRE 平台控制平面 API 規格
# 版本: 1.1.0
# 描述: SRE 平台控制平面服務的 API 規格。此版本根據與前端規格 (specs.md) 的對齊性審查進行了優化。
openapi: 3.1.0
info:
  title: SRE 平台 - 控制平面 API
  description: |
    控制平面是 SRE 平台的中央管理中樞。它提供 Web UI 和 API 用於管理資源、使用者、事件等。它透過呼叫 SRE Assistant 服務來協調診斷任務。
  version: "1.1.0"
  contact:
    name: SRE 平台團隊
    email: sre-platform@example.com
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:8081
    description: 控制平面開發伺服器

# ============================================
# 擴展屬性 (Vendor Extensions)
# ============================================
x-error-codes:
  # 集中定義錯誤碼，便於前端生成統一的錯誤處理邏輯
  RESOURCE_IN_USE:
    http: 409
    message: "資源正在使用中"
    i18n_key: errors.resource_in_use
  INVALID_METRIC:
    http: 400
    message: "無效的監控指標"
    i18n_key: errors.invalid_metric
  PERMISSION_DENIED:
    http: 403
    message: "權限不足"
    i18n_key: errors.permission_denied
  UNAUTHORIZED:
    http: 401
    message: "未登入或憑證失效"
    i18n_key: errors.unauthorized
  NOT_FOUND:
    http: 404
    message: "資源不存在"
    i18n_key: errors.not_found
  VALIDATION_ERROR:
    http: 400
    message: "參數驗證失敗"
    i18n_key: errors.validation_error
  INTERNAL_ERROR:
    http: 500
    message: "內部伺服器錯誤"
    i18n_key: errors.internal_error

x-role-definitions:
  # 集中定義角色，作為權限系統的 SSOT
  super_admin: "超級管理員：擁有平台所有管理操作權限。"
  team_manager: "團隊管理者：可管理團隊與其範圍內的資源。"
  team_member: "團隊成員：可查看團隊資源、處理事件、執行腳本。"
  viewer: "唯讀使用者：僅可查看儀表板與報表，無任何寫入權限。"

x-resource-status-rules:
  # 資源健康狀態的判定規則契約
  default:
    critical: "cpu > 90 OR memory > 95"
    warning: "cpu > 80 OR memory > 85"
    healthy: "cpu <= 80 AND memory <= 85"
  server:
    critical: "cpu > 90 OR memory > 95 OR disk > 95"
    warning: "cpu > 80 OR memory > 85 OR disk > 90"
    healthy: "cpu <= 80 AND memory <= 85 AND disk <= 90"
  database:
    critical: "cpu > 85 OR memory > 90 OR replication_lag_s > 10 OR connections_pct > 95"
    warning: "cpu > 75 OR memory > 85 OR replication_lag_s > 5 OR connections_pct > 90"
    healthy: "cpu <= 75 AND memory <= 85 AND replication_lag_s <= 5 AND connections_pct <= 90"
  network:
    critical: "packet_loss_pct > 5 OR latency_ms > 200"
    warning: "packet_loss_pct > 1 OR latency_ms > 100"
    healthy: "packet_loss_pct <= 1 AND latency_ms <= 100"
  application:
    critical: "error_rate_pct > 5 OR p95_latency_ms > 1000"
    warning: "error_rate_pct > 1 OR p95_latency_ms > 500"
    healthy: "error_rate_pct <= 1 AND p95_latency_ms <= 500"
  container:
    critical: "cpu > 90 OR memory > 95 OR restarts_5m > 3"
    warning: "cpu > 80 OR memory > 85 OR restarts_5m > 0"
    healthy: "cpu <= 80 AND memory <= 85 AND restarts_5m == 0"

x-incident-lifecycle:
  # 事件狀態機契約
  states: [new, acknowledged, resolved]
  transitions:
    - from: new
      to: acknowledged
      roles: [team_member, team_manager, super_admin]
    - from: acknowledged
      to: resolved
      roles: [team_member, team_manager, super_admin]
  actions:
    acknowledge:
      endpoint: "/api/v1/incidents/{incidentId}/acknowledge"
      method: POST
    resolve:
      endpoint: "/api/v1/incidents/{incidentId}/resolve"
      method: POST

x-permission-check:
  # 權限檢查實作說明
  description: "後端對所有寫入端點強制執行 x-roles；前端負責 UI 的權限控制 (gating) 並在收到 403 時顯示適當的 Forbidden 頁面。"
  notes:
    - "所有需要驗證的端點都應加入 security 機制，除非明確標示為公開。"
    - "所有寫入操作都應使用 x-roles 標註所需權限。"

x-websocket:
  # WebSocket 通訊契約
  notifications:
    url: "/ws/notifications"
    description: "WebSocket 替代 SSE，用於傳遞 alerts, incidents 等即時事件。"
    messages:
      alert_fired:
        payload_example:
          id: "a_1"
          severity: "P1"
          resource_name: "web-01"
          message: "CPU>90%"
      incident_updated:
        payload_schema: "#/components/schemas/Incident"
      resource_status_changed:
        payload_example:
          resource_id: "r_1"
          resource_name: "web-01"
          old_status: "healthy"
          new_status: "warning"
          timestamp: "2025-09-08T00:10:00Z"
      notification_received:
        payload_example:
          id: "n_1"
          title: "新事件通知"
          message: "web-01 CPU 使用率超過 90%"
          type: "incident"
          severity: "warning"
          created_at: "2025-09-08T00:10:00Z"

x-requirements:
  # 非功能性需求契約
  internationalization:
    enabled: true
    supported_languages: [zh-TW, en-US]
    default_language: zh-TW
    i18n_keys_required: true
  accessibility:
    wcag_level: "AA"
    features: [keyboard_navigation, screen_reader_support, focus_indicators, aria_labels]
  performance:
    page_load_time_ms: 2000
    api_response_time_ms: 500
    features: [pagination_required, lazy_loading, caching_strategy]
  responsive_design:
    breakpoints:
      mobile: 768
      tablet: 1024
      desktop: 1440
    features: [fluid_layout, adaptive_navigation]

# ============================================
# API 標籤 (Tags)
# ============================================
tags:
  - name: System - Core
    description: 核心系統功能，如健康檢查與指標
  - name: System - Auth
    description: 開發環境用的本地帳密登入端點（正式環境改用 OIDC 重導）
  - name: System - Search & Autocomplete
    description: 全局搜尋與自動完成功能
  - name: Dashboard
    description: 儀表板與統計
  - name: Resources
    description: 資源管理
  - name: Resource Groups
    description: 資源群組管理
  - name: Incidents
    description: 事件管理 (Incidents)
  - name: Alerts
    description: 原始告警管理 (Alerts)
  - name: Incident Rules
    description: 事件規則管理
  - name: Incident Silences
    description: 事件靜音規則管理
  - name: Analyzing - Capacity Planning
    description: 容量規劃與預測
  - name: Automation - Scripts
    description: 自動化腳本管理
  - name: Automation - Schedules
    description: 自動化排程管理
  - name: Automation - Executions
    description: 自動化執行日誌
  - name: Admin - Users
    description: [管理] 使用者管理
  - name: Admin - Teams
    description: [管理] 團隊管理
  - name: Admin - Roles
    description: [管理] 角色與權限定義
  - name: Admin - Notification Channels
    description: [管理] 通知管道管理
  - name: Admin - Settings
    description: [管理] 系統設定
  - name: Admin - Audit
    description: [管理] 審計日誌
  - name: Admin - Diagnostics
    description: [管理] 平台診斷
  - name: User - Profile
    description: 使用者個人資料與設定
  - name: User - Notifications
    description: 使用者通知中心
  - name: System - Callbacks
    description: 用於接收其他服務（如 SRE Assistant）回調的端點

paths:
  # ============================================
  # System - Core
  # ============================================
  /api/v1/healthz:
    get:
      tags: [System - Core]
      summary: 服務健康檢查
      description: 檢查服務是否存活，通常由 Kubernetes liveness probe 使用。
      operationId: checkHealth
      responses:
        "200":
          description: 服務健康
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthStatus"
  /api/v1/readyz:
    get:
      tags: [System - Core]
      summary: 服務就緒檢查
      description: 檢查服務及其依賴是否準備好接收流量，通常由 Kubernetes readiness probe 使用。
      operationId: checkReadiness
      responses:
        "200":
          description: 服務就緒
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadinessStatus"
        "503":
          description: 服務未就緒
  /api/v1/metrics:
    get:
      tags: [System - Core]
      summary: Prometheus 指標
      description: 獲取 Prometheus 格式的系統指標，供監控系統採集。
      operationId: getMetrics
      responses:
        "200":
          description: Prometheus 指標
          content:
            text/plain:
              schema:
                type: string
  /api/v1/metrics/definitions:
    get:
      tags: [System - Core]
      summary: 獲取可用監控指標列表
      description: 獲取所有可用於建立事件規則的監控指標及其定義。
      operationId: getMetricDefinitions
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 成功獲取指標列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricDefinitionList"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"
  /api/v1/metrics/query:
    post:
      tags: [System - Core]
      summary: 多資源指標時序查詢
      description: 根據資源ID列表和指標名稱，查詢一段時間內的時序數據。
      operationId: queryMetrics
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [resource_ids, metric, start_time, end_time]
              properties:
                resource_ids:
                  type: array
                  items: { type: string }
                  description: "要查詢的資源ID列表"
                metric:
                  type: string
                  description: "要查詢的指標名稱"
                start_time:
                  type: string
                  format: date-time
                  description: "查詢起始時間 (RFC3339)"
                end_time:
                  type: string
                  format: date-time
                  description: "查詢結束時間 (RFC3339)"
                granularity:
                  type: string
                  enum: [1m, 5m, 1h]
                  default: "5m"
                  description: "數據粒度"
      responses:
        "200":
          description: 成功返回指標時序數據
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricSeriesList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalServerError"

  # ============================================
  # System - Auth
  # ============================================
  /api/v1/auth/login:
    post:
      tags: [System - Auth]
      summary: 開發模式登入
      description: 僅開發環境使用的本地帳密登入端點。正式環境請使用 OIDC。
      operationId: devLogin
      requestBody:
        $ref: "#/components/requestBodies/AuthLoginRequest"
      responses:
        "200":
          description: 登入成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthTokens"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/auth/refresh:
    post:
      tags: [System - Auth]
      summary: 刷新 Token（開發）
      description: 使用 refresh_token 換取新的 access_token（僅開發環境）。
      operationId: devRefreshToken
      requestBody:
        $ref: "#/components/requestBodies/TokenRefreshRequest"
      responses:
        "200":
          description: 刷新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthTokens"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/auth/logout:
    post:
      tags: [System - Auth]
      summary: 登出（開發）
      description: 登出並使 refresh_token 失效（僅開發環境）。
      operationId: devLogout
      responses:
        "200":
          description: 登出成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"

  # ============================================
  # System - Search & Autocomplete
  # ============================================
  /api/v1/autocomplete:
    get:
      tags: [System - Search & Autocomplete]
      summary: 獲取自動完成建議
      description: 根據實體類型和關鍵字提供輕量級的搜尋建議，用於 UI 的自動完成功能。
      operationId: getAutocompleteSuggestions
      security:
        - bearerAuth: []
      parameters:
        - name: type
          in: query
          required: true
          description: "要搜尋的實體類型（或 'all' 跨多類型）"
          schema:
            type: string
            enum: [user, resource, script, team, channel, all]
        - name: q
          in: query
          required: true
          description: "搜尋關鍵字"
          schema:
            type: string
      responses:
        "200":
          description: "成功獲取建議列表"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AutocompleteResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/search:
    get:
      tags: [System - Search & Autocomplete]
      summary: 全局搜尋
      description: 在全平台範圍內搜尋各種資源與實體。
      operationId: globalSearch
      security:
        - bearerAuth: []
      parameters:
        - name: q
          in: query
          required: true
          description: "搜尋關鍵字"
          schema:
            type: string
      responses:
        "200":
          description: "成功返回搜尋結果"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SearchResultItem"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  # ============================================
  # Dashboard
  # ============================================
  /api/v1/dashboard/summary:
    get:
      tags: [Dashboard]
      summary: 儀表板摘要
      description: 獲取儀表板的摘要數據
      operationId: getDashboardSummary
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 儀表板摘要
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/dashboard/trends:
    get:
      tags: [Dashboard]
      summary: 趨勢數據
      description: 獲取各項指標的趨勢數據
      operationId: getDashboardTrends
      security:
        - bearerAuth: []
      parameters:
        - name: period
          in: query
          description: 時間範圍
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 24h
      responses:
        "200":
          description: 趨勢數據
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrendData"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/dashboard/resource-distribution:
    get:
      tags: [Dashboard]
      summary: 資源分佈
      description: 獲取資源狀態分佈統計
      operationId: getResourceDistribution
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 資源分佈數據
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceDistribution"
        "401":
          $ref: "#/components/responses/Unauthorized"

  # ============================================
  # Resources
  # ============================================
  /api/v1/resources:
    get:
      tags: [Resources]
      summary: 獲取資源列表
      description: 獲取所有資源的列表，支援分頁和過濾
      operationId: listResources
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: status
          in: query
          schema:
            type: string
            enum: [healthy, warning, critical, unknown]
        - name: type
          in: query
          schema:
            type: string
            enum: [server, network, database, application, container]
        - name: group_id
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
      responses:
        "200":
          description: 資源列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceList"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags: [Resources]
      summary: 創建資源
      description: 創建新的資源
      operationId: createResource
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      requestBody:
        $ref: "#/components/requestBodies/ResourceCreateRequest"
      responses:
        "201":
          description: 資源創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
  /api/v1/resources/{resourceId}:
    get:
      tags: [Resources]
      summary: 獲取資源詳情
      description: 獲取特定資源的詳細資訊
      operationId: getResource
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ResourceIdParam"
      responses:
        "200":
          description: 資源詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags: [Resources]
      summary: 更新資源
      description: 更新資源資訊
      operationId: updateResource
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - $ref: "#/components/parameters/ResourceIdParam"
      requestBody:
        $ref: "#/components/requestBodies/ResourceUpdateRequest"
      responses:
        "200":
          description: 資源更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Resource"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags: [Resources]
      summary: 刪除資源
      description: 刪除資源
      operationId: deleteResource
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - $ref: "#/components/parameters/ResourceIdParam"
      responses:
        "204":
          description: 資源刪除成功
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/resources/{resourceId}/metrics:
    get:
      tags: [Resources]
      summary: 獲取資源歷史指標
      description: 獲取指定資源在一段時間內的歷史指標數據，用於繪製趨勢圖。
      operationId: getResourceMetricsHistory
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ResourceIdParam"
        - name: metric
          in: query
          required: true
          description: "要查詢的指標名稱 (e.g., cpu_usage)"
          schema: { type: string }
        - name: period
          in: query
          description: "時間範圍 (與 start_time/end_time 擇一使用)"
          schema:
            type: string
            enum: [1h, 6h, 24h, 7d, 30d]
            default: 24h
        - name: start_time
          in: query
          schema: { type: string, format: date-time }
        - name: end_time
          in: query
          schema: { type: string, format: date-time }
      responses:
        "200":
          description: "成功返回指標歷史數據"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TrendData"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/resources/{resourceId}/incidents:
    get:
      tags: [Resources]
      summary: 獲取資源關聯事件列表
      description: 獲取與指定資源相關的事件列表，支援分頁和過濾
      operationId: getResourceIncidents
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ResourceIdParam"
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: status
          in: query
          schema: { type: string, enum: [new, acknowledged, resolved] }
        - name: severity
          in: query
          schema: { type: string, enum: [P1, P2, P3, P4] }
      responses:
        "200":
          description: 資源關聯事件列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentList"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/resources/batch:
    post:
      tags: [Resources]
      summary: 批次操作資源
      description: |
        對多個資源執行批次操作。
        `operation` 決定執行的動作，`parameters` 根據不同操作提供所需參數。
        - `delete`: 不需要額外參數。
        - `move_group`: 需要 `parameters.group_id`。
        - `tag_add`: 需要 `parameters.tags` 陣列。
        - `tag_remove`: 需要 `parameters.tags` 陣列。
      operationId: batchOperateResources
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      requestBody:
        $ref: "#/components/requestBodies/BatchResourceOperation"
      responses:
        "200":
          description: 批次操作結果
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchOperationResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/resources/scan:
    post:
      tags: [Resources]
      summary: 掃描網段
      description: 掃描指定網段發現新資源
      operationId: scanNetwork
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      requestBody:
        $ref: "#/components/requestBodies/NetworkScanRequest"
      responses:
        "202":
          description: 掃描任務已接受
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScanTaskResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/resources/scan/{taskId}:
    get:
      tags: [Resources]
      summary: 獲取掃描結果
      description: 獲取網段掃描任務的結果
      operationId: getScanResult
      security:
        - bearerAuth: []
      parameters:
        - name: taskId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 掃描結果
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScanResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Resource Groups
  # ============================================
  /api/v1/resources/groups:
    get:
      tags: [Resource Groups]
      summary: 獲取群組列表
      description: 獲取所有資源分組
      operationId: listResourceGroups
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
      responses:
        "200":
          description: 群組列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroupList"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags: [Resource Groups]
      summary: 創建群組
      description: 創建新的資源分組
      operationId: createResourceGroup
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      requestBody:
        $ref: "#/components/requestBodies/ResourceGroupCreateRequest"
      responses:
        "201":
          description: 群組創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroup"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/resources/groups/{groupId}:
    get:
      tags: [Resource Groups]
      summary: 獲取單一資源群組詳情
      description: 獲取單一資源群組的詳細資訊，包含成員列表。
      operationId: getResourceGroup
      security:
        - bearerAuth: []
      parameters:
        - name: groupId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 資源群組詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroup"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags: [Resource Groups]
      summary: 更新群組
      description: 更新資源群組資訊
      operationId: updateResourceGroup
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: groupId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/ResourceGroupUpdateRequest"
      responses:
        "200":
          description: 群組更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroup"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags: [Resource Groups]
      summary: 刪除群組
      description: 刪除資源分組
      operationId: deleteResourceGroup
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: groupId
          in: path
          required: true
          schema: { type: string }
      responses:
        "204":
          description: 群組刪除成功
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/resources/groups/{groupId}/members:
    post:
      tags: [Resource Groups]
      summary: 管理群組成員
      description: 新增或移除資源群組的成員
      operationId: manageResourceGroupMembers
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: groupId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/GroupMemberOperation"
      responses:
        "200":
          description: 成員管理成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Incidents
  # ============================================
  /api/v1/incidents:
    get:
      tags: [Incidents]
      summary: 獲取事件列表
      description: 獲取所有事件記錄
      operationId: listIncidents
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: status
          in: query
          schema: { type: string, enum: [new, acknowledged, resolved] }
        - name: severity
          in: query
          schema: { type: string, enum: [critical, error, warning, info] }
        - name: start_time
          in: query
          schema: { type: string, format: date-time }
        - name: end_time
          in: query
          schema: { type: string, format: date-time }
        - name: resource_id
          in: query
          schema: { type: string }
      responses:
        "200":
          description: 事件列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentList"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags: [Incidents]
      summary: 創建事件
      description: 創建新的事件記錄
      operationId: createIncident
      security:
        - bearerAuth: []
      x-roles: [team_member, team_manager, super_admin]
      requestBody:
        $ref: "#/components/requestBodies/IncidentCreateRequest"
      responses:
        "201":
          description: 事件創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/incidents/batch:
    post:
      tags: [Incidents]
      summary: 批次處理事件
      description: 對多個事件執行批次操作，例如批次確認或解決。
      operationId: batchUpdateIncidents
      security:
        - bearerAuth: []
      x-roles: [team_member, team_manager, super_admin]
      requestBody:
        $ref: "#/components/requestBodies/BatchIncidentOperation"
      responses:
        "200":
          description: "批次操作成功"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchOperationResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/incidents/{incidentId}:
    get:
      tags: [Incidents]
      summary: 獲取事件詳情
      description: 獲取特定事件的詳細資訊
      operationId: getIncident
      security:
        - bearerAuth: []
      parameters:
        - name: incidentId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 事件詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags: [Incidents]
      summary: 更新事件
      description: 更新事件資訊
      operationId: updateIncident
      security:
        - bearerAuth: []
      x-roles: [team_member, team_manager, super_admin]
      parameters:
        - name: incidentId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/IncidentUpdateRequest"
      responses:
        "200":
          description: 事件更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
  /api/v1/incidents/{incidentId}/acknowledge:
    post:
      tags: [Incidents]
      summary: 確認事件
      description: 確認事件已被接收處理
      operationId: acknowledgeIncident
      security:
        - bearerAuth: []
      x-roles: [team_member, team_manager, super_admin]
      parameters:
        - name: incidentId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                acknowledged_by:
                  type: string
                comment:
                  type: string
      responses:
        "200":
          description: 事件確認成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/incidents/{incidentId}/resolve:
    post:
      tags: [Incidents]
      summary: 解決事件
      description: 標記事件為已解決
      operationId: resolveIncident
      security:
        - bearerAuth: []
      x-roles: [team_member, team_manager, super_admin]
      parameters:
        - name: incidentId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                resolved_by:
                  type: string
                resolution:
                  type: string
                root_cause:
                  type: string
      responses:
        "200":
          description: 事件解決成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Incident"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/incidents/{incidentId}/assign:
    post:
      tags: [Incidents]
      summary: 指派事件
      description: 指派事件給特定人員處理
      operationId: assignIncident
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: incidentId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [assignee_id]
              properties:
                assignee_id:
                  type: string
      responses:
        "200":
          description: 事件指派成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/incidents/{incidentId}/comments:
    post:
      tags: [Incidents]
      summary: 新增事件註記
      description: 為事件新增註記
      operationId: addIncidentComment
      security:
        - bearerAuth: []
      x-roles: [team_member, team_manager, super_admin]
      parameters:
        - name: incidentId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [comment]
              properties:
                comment:
                  type: string
      responses:
        "201":
          description: 註記新增成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/incidents/{incidentId}/correlated:
    get:
      tags: [Incidents]
      summary: 獲取關聯事件
      description: 獲取與指定事件在時間上或拓撲上相關的其他事件。
      operationId: getCorrelatedIncidents
      security:
        - bearerAuth: []
      parameters:
        - name: incidentId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: "成功返回關聯事件列表"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IncidentList"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/incidents/generate-report:
    post:
      tags: [Incidents]
      summary: AI 生成事件報告
      description: 使用 AI 生成事件分析報告 (由 SRE Assistant 處理)
      operationId: generateIncidentReport
      security:
        - bearerAuth: []
      x-roles: [team_member, team_manager, super_admin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [incident_ids]
              properties:
                incident_ids:
                  type: array
                  items: { type: string }
                report_type:
                  type: string
                  enum: [summary, root_cause, impact_analysis]
                  default: summary
      responses:
        "200":
          description: AI 報告生成成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIGeneratedReport"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

  # ============================================
  # Alerts
  # ============================================
  /api/v1/alerts:
    get:
      tags: [Alerts]
      summary: 獲取原始告警列表
      description: 獲取由監控系統直接觸發、未經整合的原始告警 (Alerts)。此功能主要用於底層問題的追蹤與診斷。
      operationId: listAlerts
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: severity
          in: query
          schema: { type: string, enum: [P0, P1, P2, P3] }
        - name: status
          in: query
          schema: { type: string, enum: [firing, resolved, pending] }
        - name: start_time
          in: query
          schema: { type: string, format: date-time }
        - name: end_time
          in: query
          schema: { type: string, format: date-time }
      responses:
        "200":
          description: 原始告警列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertList"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  # ============================================
  # Incident Rules
  # ============================================
  /api/v1/incidents/rules:
    get:
      tags: [Incident Rules]
      summary: 獲取事件規則列表
      description: 獲取所有事件規則
      operationId: listIncidentRules
      security:
        - bearerAuth: []
      parameters:
        - name: enabled
          in: query
          schema: { type: boolean }
      responses:
        "200":
          description: 事件規則列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRuleList"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags: [Incident Rules]
      summary: 創建事件規則
      description: 創建新的事件規則
      operationId: createIncidentRule
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      requestBody:
        $ref: "#/components/requestBodies/AlertRuleCreateRequest"
      responses:
        "201":
          description: 規則創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRule"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/incidents/rules/{ruleId}:
    get:
      tags: [Incident Rules]
      summary: 獲取規則詳情
      description: 獲取特定事件規則的詳情
      operationId: getIncidentRule
      security:
        - bearerAuth: []
      parameters:
        - name: ruleId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 規則詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRule"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags: [Incident Rules]
      summary: 更新事件規則
      description: 更新事件規則
      operationId: updateIncidentRule
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: ruleId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/AlertRuleUpdateRequest"
      responses:
        "200":
          description: 規則更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AlertRule"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags: [Incident Rules]
      summary: 刪除事件規則
      description: |
        刪除事件規則。
        **建議**: 為了提高平台的容錯能力和操作安全性，建議實作軟刪除 (Soft Delete) 機制。此操作可將規則標記為 `archived` 而非物理刪除，並提供相應的 API (如 `GET /alert-rules?status=archived` 和 `POST /alert-rules/{ruleId}/restore`) 來查看和恢復被誤刪的規則。
      operationId: deleteIncidentRule
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: ruleId
          in: path
          required: true
          schema: { type: string }
      responses:
        "204":
          description: 規則刪除成功
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/incidents/rules/{ruleId}/test:
    post:
      tags: [Incident Rules]
      summary: 測試事件規則
      description: 測試事件規則是否正常運作
      operationId: testIncidentRule
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: ruleId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 測試結果
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  matched_resources:
                    type: array
                    items: { type: string }
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/incidents/rules/{ruleId}/enable:
    post:
      tags: [Incident Rules]
      summary: 啟用規則
      description: 啟用事件規則
      operationId: enableIncidentRule
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: ruleId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 規則已啟用
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/incidents/rules/{ruleId}/disable:
    post:
      tags: [Incident Rules]
      summary: 停用規則
      description: 停用事件規則
      operationId: disableIncidentRule
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: ruleId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 規則已停用
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Incident Silences
  # ============================================
  /api/v1/incidents/silences:
    get:
      tags: [Incident Silences]
      summary: 獲取靜音規則列表
      description: 獲取所有靜音規則
      operationId: listSilences
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
      responses:
        "200":
          description: 靜音規則列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SilenceList"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags: [Incident Silences]
      summary: 創建靜音規則
      description: 創建新的靜音規則
      operationId: createSilence
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      requestBody:
        $ref: "#/components/requestBodies/SilenceCreateRequest"
      responses:
        "201":
          description: 靜音規則創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Silence"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/incidents/silences/{silenceId}:
    get:
      tags: [Incident Silences]
      summary: 獲取單一靜音規則
      description: 獲取指定靜音規則的詳細資訊
      operationId: getSilence
      security:
        - bearerAuth: []
      parameters:
        - name: silenceId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 靜音規則詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Silence"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags: [Incident Silences]
      summary: 更新靜音規則
      description: 更新指定的靜音規則
      operationId: updateSilence
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: silenceId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/SilenceUpdateRequest"
      responses:
        "200":
          description: 靜音規則更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Silence"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags: [Incident Silences]
      summary: 刪除靜音規則
      description: 刪除指定的靜音規則
      operationId: deleteSilence
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: silenceId
          in: path
          required: true
          schema: { type: string }
      responses:
        "204":
          description: 靜音規則刪除成功
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/incidents/silences/{silenceId}/enable:
    post:
      tags: [Incident Silences]
      summary: 啟用靜音規則
      description: 啟用一個指定的靜音規則，使其狀態變為 active。
      operationId: enableSilence
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: silenceId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 靜音規則已啟用
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/incidents/silences/{silenceId}/disable:
    post:
      tags: [Incident Silences]
      summary: 停用靜音規則
      description: 停用一個指定的靜音規則，使其狀態變為 disabled。
      operationId: disableSilence
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: silenceId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 靜音規則已停用
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Analyzing - Capacity Planning
  # ============================================
  /api/v1/analyzing/capacity:
    post:
      tags: [Analyzing - Capacity Planning]
      summary: 執行容量分析與預測
      description: "根據歷史數據對指定資源進行容量分析與預測 (由 SRE Assistant 處理)。可透過 mode 參數控制回傳內容。"
      operationId: analyzeCapacity
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: mode
          in: query
          description: "控制回傳內容的詳細程度 (full: 完整分析, forecast_only: 僅預測數據)"
          schema:
            type: string
            enum: [full, forecast_only]
            default: full
      requestBody:
        $ref: "#/components/requestBodies/CapacityAnalysisRequest"
      responses:
        "200":
          description: "容量分析結果"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CapacityAnalysisResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/analyzing/capacity/execute-recommendation:
    post:
      tags: [Analyzing - Capacity Planning]
      summary: 執行容量規劃建議措施
      description: "根據容量分析報告中的建議，觸發一個自動化動作（例如執行擴容腳本）。"
      operationId: executeCapacityRecommendation
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - report_id
                - recommendation_id
              properties:
                report_id:
                  type: string
                  description: "來源報告的 ID"
                recommendation_id:
                  type: string
                  description: "要執行的建議措施的 ID"
                parameters:
                  type: object
                  additionalProperties: true
                  description: "執行時需要覆寫或提供的額外參數"
      responses:
        "202":
          description: "執行任務已接受"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionTaskResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/analyzing/capacity/reports:
    get:
      tags: [Analyzing - Capacity Planning]
      summary: 獲取容量報告列表
      description: "獲取容量規劃報告的列表，支援分頁和過濾"
      operationId: listCapacityReports
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: resource_id
          in: query
          schema: { type: string }
        - name: start_time
          in: query
          schema: { type: string, format: date-time }
        - name: end_time
          in: query
          schema: { type: string, format: date-time }
      responses:
        "200":
          description: "容量報告列表"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CapacityReportList"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/analyzing/capacity/reports/{reportId}:
    get:
      tags: [Analyzing - Capacity Planning]
      summary: 獲取容量報告詳情
      description: "獲取指定容量報告的詳細資訊"
      operationId: getCapacityReport
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: reportId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: "容量報告詳情"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CapacityReport"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Automation - Scripts
  # ============================================
  /api/v1/automation/scripts:
    get:
      tags: [Automation - Scripts]
      summary: 獲取腳本列表
      description: 獲取所有自動化腳本
      operationId: listScripts
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: category
          in: query
          schema: { type: string, enum: [diagnostic, remediation, maintenance, custom] }
      responses:
        "200":
          description: 腳本列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScriptList"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags: [Automation - Scripts]
      summary: 創建腳本
      description: 創建新的自動化腳本
      operationId: createScript
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      requestBody:
        $ref: "#/components/requestBodies/ScriptCreateRequest"
      responses:
        "201":
          description: 腳本創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Script"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/automation/scripts/{scriptId}:
    get:
      tags: [Automation - Scripts]
      summary: 獲取腳本詳情
      description: 獲取特定腳本的詳情
      operationId: getScript
      security:
        - bearerAuth: []
      parameters:
        - name: scriptId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 腳本詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Script"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags: [Automation - Scripts]
      summary: 更新腳本
      description: 更新自動化腳本
      operationId: updateScript
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: scriptId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/ScriptUpdateRequest"
      responses:
        "200":
          description: 腳本更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Script"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags: [Automation - Scripts]
      summary: 刪除腳本
      description: |
        刪除自動化腳本。
        **建議**: 同事件規則，為了提高平台的容錯能力和操作安全性，建議對關鍵腳本實作軟刪除 (Soft Delete) 機制。
      operationId: deleteScript
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: scriptId
          in: path
          required: true
          schema: { type: string }
      responses:
        "204":
          description: 腳本刪除成功
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/automation/scripts/{scriptId}/run:
    post:
      summary: 手動執行腳本
      description: 手動觸發特定腳本的執行，主要用於測試或手動干預。
      operationId: runScript
      tags: [Automation - Scripts]
      security:
        - bearerAuth: []
      x-roles: [team_member, team_manager, super_admin]
      parameters:
        - name: scriptId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/ScriptRunRequest"
      responses:
        "202":
          description: 執行任務已接受
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionTaskResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Automation - Schedules
  # ============================================
  /api/v1/automation/schedules:
    get:
      tags: [Automation - Schedules]
      summary: 獲取排程列表
      description: 獲取所有自動化腳本的執行排程
      operationId: listSchedules
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
      responses:
        "200":
          description: 排程列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScheduleList"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags: [Automation - Schedules]
      summary: 創建排程
      description: 創建腳本執行排程
      operationId: createSchedule
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      requestBody:
        $ref: "#/components/requestBodies/ScheduleCreateRequest"
      responses:
        "201":
          description: 排程創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/automation/schedules/{scheduleId}:
    get:
      tags: [Automation - Schedules]
      summary: 獲取單一排程
      description: 獲取指定排程的詳細資訊
      operationId: getSchedule
      security:
        - bearerAuth: []
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 排程詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags: [Automation - Schedules]
      summary: 更新排程
      description: 更新指定的排程
      operationId: updateSchedule
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/ScheduleUpdateRequest"
      responses:
        "200":
          description: 排程更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Schedule"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags: [Automation - Schedules]
      summary: 刪除排程
      description: 刪除指定的排程
      operationId: deleteSchedule
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema: { type: string }
      responses:
        "204":
          description: 排程刪除成功
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/automation/schedules/{scheduleId}/enable:
    post:
      tags: [Automation - Schedules]
      summary: 啟用排程
      description: 啟用一個指定的自動化排程。
      operationId: enableSchedule
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 排程已啟用
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/automation/schedules/{scheduleId}/disable:
    post:
      tags: [Automation - Schedules]
      summary: 停用排程
      description: 停用一個指定的自動化排程。
      operationId: disableSchedule
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: scheduleId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 排程已停用
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Automation - Executions
  # ============================================
  /api/v1/automation/executions:
    get:
      tags: [Automation - Executions]
      summary: 執行歷史
      description: 查詢腳本執行歷史
      operationId: listExecutions
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: script_id
          in: query
          schema: { type: string }
        - name: status
          in: query
          schema: { type: string, enum: [pending, running, success, failed] }
      responses:
        "200":
          description: 執行歷史列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecutionList"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/automation/executions/{executionId}:
    get:
      tags: [Automation - Executions]
      summary: 執行詳情
      description: 獲取執行任務的詳情
      operationId: getExecution
      security:
        - bearerAuth: []
      parameters:
        - name: executionId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 執行詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Execution"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Admin - Users
  # ============================================
  /api/v1/admin/users:
    get:
      tags: [Admin - Users]
      summary: 獲取使用者列表
      description: 獲取所有使用者
      operationId: listUsers
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: role
          in: query
          schema: { type: string, enum: [super_admin, team_manager, team_member] }
        - name: team_id
          in: query
          schema: { type: string }
      responses:
        "200":
          description: 使用者列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserList"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
    post:
      tags: [Admin - Users]
      summary: 創建使用者
      description: 創建新使用者
      operationId: createUser
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      requestBody:
        $ref: "#/components/requestBodies/UserCreateRequest"
      responses:
        "201":
          description: 使用者創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "409":
          $ref: "#/components/responses/Conflict"
  /api/v1/admin/users/{userId}:
    get:
      tags: [Admin - Users]
      summary: 獲取使用者詳情
      description: 獲取特定使用者的詳情
      operationId: getUser
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - name: userId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 使用者詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags: [Admin - Users]
      summary: 更新使用者
      description: 更新使用者資訊
      operationId: updateUser
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - name: userId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/UserUpdateRequest"
      responses:
        "200":
          description: 使用者更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
    delete:
      tags: [Admin - Users]
      summary: 刪除使用者
      description: |
        刪除使用者。
        **注意**: 為了確保系統資料的完整性，如果該使用者仍被指派了事件或作為資源負責人，API 應返回 409 Conflict 錯誤，並在響應中告知前端有哪些關聯的任務需要先被轉移。或者，可以考慮增加一個可選的 `reassign_to_user_id` 參數來自動完成任務轉移。
      operationId: deleteUser
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - name: userId
          in: path
          required: true
          schema: { type: string }
      responses:
        "204":
          description: 使用者刪除成功
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"

  # ============================================
  # User - Profile
  # ============================================
  /api/v1/profile:
    get:
      tags: [User - Profile]
      summary: 獲取個人資料
      description: 獲取當前登入使用者的個人資料
      operationId: getProfile
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 個人資料
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      tags: [User - Profile]
      summary: 更新個人資料
      description: 更新當前使用者的個人資料
      operationId: updateProfile
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/ProfileUpdateRequest"
      responses:
        "200":
          description: 個人資料更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/profile/security:
    post:
      tags: [User - Profile]
      summary: 修改密碼
      description: 修改當前使用者的密碼
      operationId: changePassword
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [current_password, new_password]
              properties:
                current_password:
                  type: string
                  format: password
                new_password:
                  type: string
                  format: password
      responses:
        "200":
          description: 密碼修改成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/profile/notifications:
    put:
      tags: [User - Profile]
      summary: 更新通知設定
      description: 更新個人通知偏好設定
      operationId: updateNotificationPreferences
      security:
        - bearerAuth: []
      requestBody:
        $ref: "#/components/requestBodies/NotificationPreferences"
      responses:
        "200":
          description: 通知設定更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/profile/verify-contact:
    post:
      tags: [User - Profile]
      summary: 驗證聯絡方式
      description: 驗證使用者的聯絡方式（Email、SMS、LINE）
      operationId: verifyContact
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [method, value]
              properties:
                method:
                  type: string
                  enum: [email, sms, line]
                value:
                  type: string
                verification_code:
                  type: string
      responses:
        "200":
          description: 驗證成功或驗證碼已發送
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"

  # ============================================
  # Admin - Teams
  # ============================================
  /api/v1/admin/teams:
    get:
      tags: [Admin - Teams]
      summary: 獲取團隊列表
      description: 獲取所有團隊
      operationId: listTeams
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
      responses:
        "200":
          description: 團隊列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamList"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
    post:
      tags: [Admin - Teams]
      summary: 創建團隊
      description: 創建新團隊
      operationId: createTeam
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      requestBody:
        $ref: "#/components/requestBodies/TeamCreateRequest"
      responses:
        "201":
          description: 團隊創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/admin/teams/{teamId}:
    get:
      tags: [Admin - Teams]
      summary: 獲取團隊詳情
      description: 獲取特定團隊的詳情
      operationId: getTeam
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: teamId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 團隊詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags: [Admin - Teams]
      summary: 更新團隊
      description: 更新團隊資訊
      operationId: updateTeam
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: teamId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/TeamUpdateRequest"
      responses:
        "200":
          description: 團隊更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags: [Admin - Teams]
      summary: 刪除團隊
      description: 刪除團隊
      operationId: deleteTeam
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: teamId
          in: path
          required: true
          schema: { type: string }
      responses:
        "204":
          description: 團隊刪除成功
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/admin/teams/{teamId}/members:
    post:
      tags: [Admin - Teams]
      summary: 管理團隊成員
      description: 新增或移除團隊成員
      operationId: manageTeamMembers
      security:
        - bearerAuth: []
      x-roles: [team_manager, super_admin]
      parameters:
        - name: teamId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/TeamMemberOperation"
      responses:
        "200":
          description: 成員管理成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Admin - Roles
  # ============================================
  /api/v1/admin/roles:
    get:
      tags: [Admin - Roles]
      summary: 獲取角色定義列表
      description: 獲取系統中所有可用的角色及其權限描述。
      operationId: getRoleDefinitions
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 角色列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoleDefinition"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags: [Admin - Roles]
      summary: 創建自定義角色
      description: 創建新的自定義角色（僅 super_admin 可操作）
      operationId: createRole
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      requestBody:
        $ref: "#/components/requestBodies/RoleCreateRequest"
      responses:
        "201":
          description: 角色創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleDefinition"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/admin/roles/{roleName}:
    put:
      tags: [Admin - Roles]
      summary: 更新角色權限
      description: 更新指定角色的權限設定（僅 super_admin 可操作）
      operationId: updateRole
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - name: roleName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/RoleUpdateRequest"
      responses:
        "200":
          description: 角色更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleDefinition"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Admin - Notification Channels
  # ============================================
  /api/v1/admin/channels:
    get:
      tags: [Admin - Notification Channels]
      summary: 獲取通知管道列表
      description: 獲取所有通知管道
      operationId: listNotificationChannels
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
      responses:
        "200":
          description: 通知管道列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationChannelList"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
    post:
      tags: [Admin - Notification Channels]
      summary: 創建通知管道
      description: 創建新的通知管道
      operationId: createNotificationChannel
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      requestBody:
        $ref: "#/components/requestBodies/NotificationChannelCreateRequest"
      responses:
        "201":
          description: 通知管道創建成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationChannel"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/admin/channels/{channelId}:
    get:
      tags: [Admin - Notification Channels]
      summary: 獲取管道詳情
      description: 獲取特定通知管道的詳情
      operationId: getNotificationChannel
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - name: channelId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 通知管道詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationChannel"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags: [Admin - Notification Channels]
      summary: 更新通知管道
      description: 更新通知管道設定
      operationId: updateNotificationChannel
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - name: channelId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        $ref: "#/components/requestBodies/NotificationChannelUpdateRequest"
      responses:
        "200":
          description: 通知管道更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationChannel"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags: [Admin - Notification Channels]
      summary: 刪除通知管道
      description: 刪除通知管道
      operationId: deleteNotificationChannel
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - name: channelId
          in: path
          required: true
          schema: { type: string }
      responses:
        "204":
          description: 通知管道刪除成功
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /api/v1/admin/channels/{channelId}/test:
    post:
      tags: [Admin - Notification Channels]
      summary: 測試通知管道
      description: 發送測試訊息到通知管道
      operationId: testNotificationChannel
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - name: channelId
          in: path
          required: true
          schema: { type: string }
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  default: "這是一則測試訊息"
      responses:
        "200":
          description: 測試訊息已發送
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Admin - Settings
  # ============================================
  /api/v1/admin/settings:
    get:
      tags: [Admin - Settings]
      summary: 獲取系統設定
      description: 獲取系統設定（需管理員權限）
      operationId: getSettings
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      responses:
        "200":
          description: 系統設定
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SystemSettings"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
    put:
      tags: [Admin - Settings]
      summary: 更新系統設定
      description: 更新系統設定（需管理員權限）
      operationId: updateSettings
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SystemSettings"
      responses:
        "200":
          description: 系統設定更新成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

  # ============================================
  # Admin - Audit
  # ============================================
  /api/v1/admin/audit:
    get:
      tags: [Admin - Audit]
      summary: 查詢審計日誌
      description: 查詢系統審計日誌
      operationId: queryAuditLogs
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: user_id
          in: query
          schema: { type: string }
        - name: action
          in: query
          schema: { type: string, enum: [create, update, delete, execute, login, logout] }
        - name: resource_type
          in: query
          schema: { type: string }
        - name: start_time
          in: query
          schema: { type: string, format: date-time }
        - name: end_time
          in: query
          schema: { type: string, format: date-time }
      responses:
        "200":
          description: 審計日誌列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditLogList"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /api/v1/admin/audit/{logId}:
    get:
      tags: [Admin - Audit]
      summary: 獲取審計日誌詳情
      description: 獲取單筆審計日誌的詳細資訊
      operationId: getAuditLog
      security:
        - bearerAuth: []
      x-roles: [super_admin]
      parameters:
        - name: logId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 審計日誌詳情
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuditLog"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # Admin - Diagnostics
  # ============================================
  /api/v1/admin/diagnostics:
    get:
      tags: [Admin - Diagnostics]
      summary: 獲取平台自身狀態診斷
      description: 獲取平台關鍵健康指標，如自動化腳本和通知管道的失敗率。
      operationId: getPlatformDiagnostics
      x-roles: [super_admin]
      security:
        - bearerAuth: []
      parameters:
        - name: period
          in: query
          schema: { type: string, enum: [1h, 24h, 7d, 30d], default: 24h }
        - name: start_time
          in: query
          schema: { type: string, format: date-time }
        - name: end_time
          in: query
          schema: { type: string, format: date-time }
      responses:
        "200":
          description: "成功獲取平台診斷資訊"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlatformDiagnostics"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"

  # ============================================
  # User - Notifications
  # ============================================
  /api/v1/notifications:
    get:
      tags: [User - Notifications]
      summary: 獲取使用者的通知
      description: 獲取當前登入使用者的通知列表，支援分頁和過濾
      operationId: listUserNotifications
      security:
        - bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: status
          in: query
          schema: { type: string, enum: [read, unread] }
      responses:
        "200":
          description: 通知列表
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserNotificationList"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/notifications/summary:
    get:
      tags: [User - Notifications]
      summary: 獲取通知摘要
      description: 獲取未讀通知數量等摘要資訊
      operationId: getUserNotificationSummary
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 通知摘要
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserNotificationSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/notifications/mark-all-as-read:
    post:
      tags: [User - Notifications]
      summary: 將所有通知標示為已讀
      description: 將當前使用者的所有未讀通知標示為已讀
      operationId: markAllUserNotificationsAsRead
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /api/v1/notifications/{notificationId}/mark-as-read:
    put:
      tags: [User - Notifications]
      summary: 將單一通知標示為已讀
      description: 將指定的通知標示為已讀
      operationId: markUserNotificationAsRead
      security:
        - bearerAuth: []
      parameters:
        - name: notificationId
          in: path
          required: true
          schema: { type: string }
      responses:
        "200":
          description: 操作成功
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"

  # ============================================
  # System - Callbacks
  # ============================================
  /api/v1/callbacks/diagnosis-complete:
    post:
      tags: [System - Callbacks]
      summary: 接收診斷完成的回調
      description: SRE Assistant 完成診斷後會呼叫此端點
      operationId: diagnosisCallback
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                session_id: { type: string, format: uuid }
                status: { type: string, enum: [completed, failed] }
                result_url: { type: string, format: uri }
      responses:
        "200":
          description: 回調已接收
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OperationResult"
        "400":
          $ref: "#/components/responses/BadRequest"

  # ============================================
  # System - Real-time Events (SSE/WS)
  # ============================================
  /api/v1/events:
    get:
      tags: [System - Core]
      summary: SSE 事件流
      description: 以 Server-Sent Events 提供即時更新（alerts、incidents 等）。建議前端自動重連並使用退避策略。
      operationId: streamEvents
      security:
        - bearerAuth: []
      parameters:
        - name: channels
          in: query
          description: 訂閱的事件頻道，逗號分隔（可用：alerts,incidents,automation,notifications）
          schema: { type: string }
        - name: lastEventId
          in: header
          description: SSE 重連時用於從上次事件續傳
          schema: { type: string }
      responses:
        "200":
          description: 事件流（text/event-stream）
          content:
            text/event-stream:
              schema:
                type: string
              example: |
                event: ping
                data: {"ts":"2025-09-08T07:28:00Z"}

                event: alert_fired
                data: {"id":"a_1","severity":"P1","resource_name":"web-01","message":"CPU>90%"}
        "401":
          $ref: "#/components/responses/Unauthorized"

# ============================================
# Components (Reusable objects)
# ============================================
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: "透過 OIDC/OAuth2 流程取得的 JWT Bearer Token"

  parameters:
    PageParam:
      name: page
      in: query
      description: "頁碼（從 1 開始）"
      schema:
        type: integer
        minimum: 1
        default: 1
    PageSizeParam:
      name: page_size
      in: query
      description: "每頁筆數"
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    ResourceIdParam:
      name: resourceId
      in: path
      required: true
      description: "資源 ID"
      schema:
        type: string
    SortByParam:
      name: sort_by
      in: query
      description: "排序欄位（依端點支援的欄位名稱）"
      schema:
        type: string
    SortOrderParam:
      name: sort_order
      in: query
      description: "排序方向"
      schema:
        type: string
        enum: [asc, desc]
        default: desc

  responses:
    BadRequest:
      description: "請求參數錯誤 (400)"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Unauthorized:
      description: "未授權 (401)"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Forbidden:
      description: "無權限 (403)"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFound:
      description: "資源不存在 (404)"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Conflict:
      description: "資源衝突 (409)"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    InternalServerError:
      description: "內部伺服器錯誤 (500)"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    RateLimited:
      description: "請求過於頻繁 (429)"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"

  requestBodies:
    # 集中管理 Request Bodies，提高複用性
    AuthLoginRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AuthLoginRequest"
    TokenRefreshRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TokenRefreshRequest"
    ResourceCreateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResourceCreateRequest"
    ResourceUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResourceUpdateRequest"
    BatchResourceOperation:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BatchResourceOperation"
    NetworkScanRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NetworkScanRequest"
    ResourceGroupCreateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResourceGroupCreateRequest"
    ResourceGroupUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ResourceGroupUpdateRequest"
    GroupMemberOperation:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/GroupMemberOperation"
    IncidentCreateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/IncidentCreateRequest"
    IncidentUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/IncidentUpdateRequest"
    BatchIncidentOperation:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/BatchIncidentOperation"
    SilenceCreateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SilenceCreateRequest"
    SilenceUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SilenceUpdateRequest"
    AlertRuleCreateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AlertRuleCreateRequest"
    AlertRuleUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AlertRuleUpdateRequest"
    CapacityAnalysisRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CapacityAnalysisRequest"
    ScriptCreateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ScriptCreateRequest"
    ScriptUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ScriptUpdateRequest"
    ScriptRunRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ScriptRunRequest"
    ScheduleCreateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ScheduleCreateRequest"
    ScheduleUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ScheduleUpdateRequest"
    UserCreateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserCreateRequest"
    UserUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserUpdateRequest"
    ProfileUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProfileUpdateRequest"
    NotificationPreferences:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotificationPreferences"
    TeamCreateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TeamCreateRequest"
    TeamUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TeamUpdateRequest"
    TeamMemberOperation:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TeamMemberOperation"
    RoleCreateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RoleCreateRequest"
    RoleUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RoleUpdateRequest"
    NotificationChannelCreateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotificationChannelCreateRequest"
    NotificationChannelUpdateRequest:
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/NotificationChannelUpdateRequest"

  schemas:
    # ============================================
    # Common Schemas
    # ============================================
    ErrorResponse:
      type: object
      required: [error, message]
      properties:
        error: { type: string, description: "錯誤代碼" }
        message: { type: string, description: "錯誤訊息" }
        details: { type: object, description: "錯誤詳情" }
        request_id: { type: string, description: "請求追蹤 ID" }
      example:
        error: "FORBIDDEN"
        message: "無權限存取此資源"
        details: { required_role: "super_admin" }
        request_id: "req-1234567890"
    OperationResult:
      type: object
      properties:
        success: { type: boolean }
        message: { type: string }
        details: { type: object, additionalProperties: true }
      example:
        success: true
        message: "OK"
    Pagination:
      type: object
      properties:
        page: { type: integer, description: "當前頁碼" }
        page_size: { type: integer, description: "每頁筆數" }
        total_items: { type: integer, description: "總筆數" }
        total_pages: { type: integer, description: "總頁數" }
      example:
        page: 1
        page_size: 20
        total_items: 47
        total_pages: 3
    # ... (其餘 schema 定義保持不變，此處省略以節省篇幅) ...
    # ... (The rest of the schema definitions remain unchanged and are omitted for brevity) ...

    # ============================================
    # Core Schemas
    # ============================================
    HealthStatus:
      type: object
      required:
        - status
        - timestamp
      properties:
        status:
          type: string
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
        version:
          type: string
        uptime:
          type: integer
          description: 運行時間（秒）

    ReadinessStatus:
      type: object
      required:
        - ready
        - checks
      properties:
        ready:
          type: boolean
        checks:
          type: object
          properties:
            database:
              type: boolean
            redis:
              type: boolean
            keycloak:
              type: boolean
            sre_assistant:
              type: boolean

    MetricDefinition:
      type: object
      properties:
        name:
          type: string
          description: "指標的唯一名稱 (e.g., cpu.usage.percentage)"
        unit:
          type: string
          description: "指標單位 (e.g., %, bytes, requests/sec)"
        description:
          type: string
          description: "指標的可讀描述"
    MetricDefinitionList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/MetricDefinition"

    MetricSeriesList:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              resource_id:
                type: string
              metric_name:
                type: string
              data_points:
                type: array
                items:
                  type: object
                  properties:
                    timestamp:
                      type: string
                      format: date-time
                    value:
                      type: number
                      format: float
      example:
        items:
          - resource_id: "r_1"
            metric_name: "cpu_usage"
            data_points:
              - timestamp: "2025-09-08T00:00:00Z"
                value: 55.5
              - timestamp: "2025-09-08T00:05:00Z"
                value: 56.1

    AuthLoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string
          format: password
      example:
        username: "dev@example.com"
        password: "password123"

    TokenRefreshRequest:
      type: object
      required:
        - refresh_token
      properties:
        refresh_token:
          type: string
      example:
        refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.refresh"

    AuthTokens:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
          default: Bearer
        expires_in:
          type: integer
          description: access_token 的有效秒數
        user:
          $ref: "#/components/schemas/UserProfile"
      example:
        access_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.access"
        refresh_token: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.refresh"
        token_type: "Bearer"
        expires_in: 3600
        user:
          id: "u_123"
          username: "dev"
          email: "dev@example.com"
          name: "Dev User"

    AutocompleteResult:
      type: object
      properties:
        id:
          type: string
          description: "實體 ID"
        name:
          type: string
          description: "實體名稱"
      example:
        id: "r_1"
        name: "web-01"

    SearchResultItem:
      type: object
      properties:
        type:
          type: string
          enum: [resource, team, user, alert_rule, automation_script]
          description: "搜尋結果的實體類型"
        score:
          type: number
          format: float
          description: "相關性分數"
        item:
          oneOf:
            - $ref: "#/components/schemas/Resource"
            - $ref: "#/components/schemas/Team"
            - $ref: "#/components/schemas/User"
            - $ref: "#/components/schemas/AlertRule"
            - $ref: "#/components/schemas/Script"
      example:
        type: "resource"
        score: 0.92
        item:
          id: "r_1"
          name: "web-01"
          type: "server"
          status: "healthy"

    RoleDefinition:
      type: object
      properties:
        name:
          type: string
          description: "角色的唯一識別名稱 (e.g., super_admin)"
        display_name:
          type: string
          description: "角色的顯示名稱 (e.g., 超級管理員)"
        description:
          type: string
          description: "角色的權限描述"
      example:
        name: "super_admin"
        display_name: "超級管理員"
        description: "擁有平台所有管理操作權限"

    RoleCreateRequest:
      type: object
      required:
        - name
        - display_name
        - permissions
      properties:
        name:
          type: string
          description: "角色的唯一識別名稱"
        display_name:
          type: string
          description: "角色的顯示名稱"
        description:
          type: string
          description: "角色的描述"
        permissions:
          type: array
          items:
            type: string
          description: "角色擁有的權限列表"
      example:
        name: "custom_role"
        display_name: "自定義角色"
        description: "具有特定權限的自定義角色"
        permissions: ["read_resources", "write_resources"]

    RoleUpdateRequest:
      type: object
      properties:
        display_name:
          type: string
          description: "角色的顯示名稱"
        description:
          type: string
          description: "角色的描述"
        permissions:
          type: array
          items:
            type: string
          description: "角色擁有的權限列表"
      example:
        display_name: "更新的自定義角色"
        description: "更新後的描述"
        permissions: ["read_resources", "write_resources", "delete_resources"]

    PlatformDiagnostics:
      type: object
      properties:
        automation_health:
          type: array
          items:
            type: object
            properties:
              script_id:
                type: string
              script_name:
                type: string
              total_runs:
                type: integer
              failure_rate:
                type: number
                format: float
        notification_health:
          type: array
          items:
            type: object
            properties:
              channel_id:
                type: string
              channel_name:
                type: string
              sent_count:
                type: integer
              failure_count:
                type: integer
      example:
        automation_health:
          - script_id: "s_1"
            script_name: "Restart Service"
            total_runs: 42
            failure_rate: 0.12
        notification_health:
          - channel_id: "c_email"
            channel_name: "Email"
            sent_count: 1200
            failure_count: 7

    # ============================================
    # Dashboard Schemas
    # ============================================
    DashboardSummary:
      type: object
      properties:
        alerts:
          type: object
          properties:
            new:
              type: integer
            processing:
              type: integer
            resolved_today:
              type: integer
        resources:
          type: object
          properties:
            total:
              type: integer
            healthy:
              type: integer
            warning:
              type: integer
            critical:
              type: integer
        kpis:
          type: object
          properties:
            availability:
              type: number
              format: float
              description: 系統可用性百分比
            mttr:
              type: number
              description: 平均修復時間（分鐘）
            incident_rate:
              type: number
              description: 事件發生率
      example:
        alerts:
          new: 5
          processing: 3
          resolved_today: 12
        resources:
          total: 250
          healthy: 220
          warning: 20
          critical: 10
        kpis:
          availability: 99.95
          mttr: 37
          incident_rate: 0.12

    TrendData:
      type: object
      properties:
        period:
          type: string
        data_points:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              alerts:
                type: integer
              incidents:
                type: integer
              resources_healthy:
                type: integer
              resources_unhealthy:
                type: integer
      example:
        period: "24h"
        data_points:
          - timestamp: "2025-09-07T01:00:00Z"
            alerts: 2
            incidents: 1
            resources_healthy: 218
            resources_unhealthy: 32
          - timestamp: "2025-09-07T02:00:00Z"
            alerts: 1
            incidents: 0
            resources_healthy: 220
            resources_unhealthy: 30

    ResourceDistribution:
      type: object
      properties:
        by_status:
          type: object
          properties:
            healthy:
              type: integer
            warning:
              type: integer
            critical:
              type: integer
            unknown:
              type: integer
        by_type:
          type: object
          additionalProperties:
            type: integer
        by_group:
          type: array
          items:
            type: object
            properties:
              group_id:
                type: string
              group_name:
                type: string
              total:
                type: integer
              healthy:
                type: integer
              warning:
                type: integer
              critical:
                type: integer
      example:
        by_status:
          healthy: 220
          warning: 20
          critical: 10
          unknown: 0
        by_type:
          server: 120
          database: 20
          application: 60
          network: 30
          container: 20
        by_group:

    CapacityReportList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/CapacityReport"
        pagination:
          $ref: "#/components/schemas/Pagination"

    CapacityReport:
      type: object
      properties:
        id:
          type: string
        resource_id:
          type: string
        resource_name:
          type: string
        metric_name:
          type: string
        generated_at:
          type: string
          format: date-time
        forecast_data:
          type: array
          items:
            $ref: "#/components/schemas/CapacityDataPoint"
        recommendations:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
      example:
        id: "cr_1"
        resource_id: "r_1"
        resource_name: "web-01"
        metric_name: "cpu_usage"
        generated_at: "2025-09-08T00:00:00Z"
        forecast_data:
          - timestamp: "2025-09-15T00:00:00Z"
            predicted_value: 75.5
        recommendations:
          - "預計在30天內達到80%使用率"
        created_at: "2025-09-08T00:00:00Z"

    CapacityDataPoint:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        predicted_value:
          type: number
          format: float
        actual_value:
          type: number
          format: float
        confidence_interval:
          type: object
          properties:
            lower:
              type: number
              format: float
            upper:
              type: number
              format: float

    # ============================================
    # Resource Schemas
    # ============================================
    Resource:
      type: object
      required:
        - id
        - name
        - type
        - status
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [server, network, database, application, container]
        status:
          type: string
          enum: [healthy, warning, critical, unknown]
        ip_address:
          type: string
        location:
          type: string
        group_id:
          type: string
        group_name:
          type: string
        tags:
          type: array
          items:
            type: string
        owner:
          type: string
          description: 負責人
        description:
          type: string
        silences:
          type: array
          items:
            $ref: "#/components/schemas/Silence"
          description: "套用於此資源的靜音規則列表"
        metrics:
          type: object
          properties:
            cpu_usage:
              type: number
              format: float
            memory_usage:
              type: number
              format: float
            disk_usage:
              type: number
              format: float
            network_io:
              type: number
              format: float
        metadata:
          type: object
          additionalProperties: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: "r_1"
        name: "web-01"
        type: "server"
        status: "healthy"
        ip_address: "10.0.0.11"
        group_id: "g_1"
        group_name: "Web"
        tags: ["prod", "frontend"]
        owner: "u_1"
        description: "Frontend web server"
        created_at: "2025-09-07T12:00:00Z"
        updated_at: "2025-09-08T01:00:00Z"

    ResourceList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Resource"
        pagination:
          $ref: "#/components/schemas/Pagination"
      example:
        items:
          - id: "r_1"
            name: "db-01"
            type: "database"
            status: "healthy"
            ip_address: "10.0.0.10"
          - id: "r_2"
            name: "web-02"
            type: "server"
            status: "warning"
            ip_address: "10.0.0.21"
        pagination:
          page: 1
          page_size: 20
          total_items: 2
          total_pages: 1

    ResourceCreateRequest:
      type: object
      required:
        - name
        - type
        - ip_address
      properties:
        name:
          type: string
        type:
          type: string
          enum: [server, network, database, application, container]
        ip_address:
          type: string
        location:
          type: string
        group_id:
          type: string
        tags:
          type: array
          items:
            type: string
        owner:
          type: string
        description:
          type: string
        metadata:
          type: object

    ResourceUpdateRequest:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
        group_id:
          type: string
        tags:
          type: array
          items:
            type: string
        owner:
          type: string
        description:
          type: string
        metadata:
          type: object

    BatchResourceOperation:
      type: object
      required:
        - operation
        - resource_ids
      properties:
        operation:
          type: string
          enum: [delete, move_group, tag_add, tag_remove]
        resource_ids:
          type: array
          items:
            type: string
        parameters:
          type: object
          properties:
            group_id:
              type: string
            tags:
              type: array
              items:
                type: string
      examples:
        move_group:
          value:
            operation: "move_group"
            resource_ids: ["r_1", "r_2"]
            parameters:
              group_id: "g_new"
        add_tags:
          value:
            operation: "tag_add"
            resource_ids: ["r_1", "r_2"]
            parameters:
              tags: ["new-tag", "prod"]

    BatchOperationResult:
      type: object
      properties:
        results:
          type: array
          items:
            type: object
            properties:
              item_id:
                type: string
              success:
                type: boolean
              message:
                type: string
              error_code:
                type: string

    NetworkScanRequest:
      type: object
      required:
        - cidr
      properties:
        cidr:
          type: string
          description: CIDR 格式的網段（如 192.168.1.0/24）
        port_ranges:
          type: array
          items:
            type: string
          default: ["22", "80", "443", "3389"]
        timeout:
          type: integer
          description: 掃描超時時間（秒）
          default: 30

    ScanTaskResponse:
      type: object
      properties:
        task_id:
          type: string
        status:
          type: string
          enum: [pending, scanning, completed, failed]
        message:
          type: string

    ScanResult:
      type: object
      properties:
        task_id:
          type: string
        status:
          type: string
          enum: [completed, failed]
        discovered_resources:
          type: array
          items:
            type: object
            properties:
              ip_address:
                type: string
              hostname:
                type: string
              open_ports:
                type: array
                items:
                  type: integer
              os_detection:
                type: string
              services:
                type: array
                items:
                  type: string
        scan_time:
          type: string
          format: date-time
        error:
          type: string

    # ============================================
    # Resource Group Schemas
    # ============================================
    ResourceGroup:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        parent_group_id:
          type: string
        resource_count:
          type: integer
        status_summary:
          type: object
          properties:
            healthy:
              type: integer
            warning:
              type: integer
            critical:
              type: integer
        tags:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ResourceGroupList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/ResourceGroup"
        pagination:
          $ref: "#/components/schemas/Pagination"

    ResourceGroupCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        parent_group_id:
          type: string
        tags:
          type: array
          items:
            type: string

    ResourceGroupUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        parent_group_id:
          type: string
        tags:
          type: array
          items:
            type: string

    GroupMemberOperation:
      type: object
      required:
        - operation
        - resource_ids
      properties:
        operation:
          type: string
          enum: [add, remove]
        resource_ids:
          type: array
          items:
            type: string

    # ============================================
    # Diagnostic Schemas
    # ============================================
    DiagnosticRequest:
      type: object
      required:
        - incident_id
        - severity
        - affected_services
      properties:
        incident_id:
          type: string
        severity:
          type: string
          enum: [P0, P1, P2, P3]
        affected_services:
          type: array
          items:
            type: string
        context:
          type: object
          additionalProperties: true

    DiagnosticTaskResponse:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [accepted, processing, completed, failed]
        message:
          type: string
        estimated_time:
          type: integer
          description: 預估完成時間（秒）

    DiagnosticStatus:
      type: object
      properties:
        session_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [processing, completed, failed]
        progress:
          type: integer
          minimum: 0
          maximum: 100
        current_step:
          type: string
        result:
          $ref: "#/components/schemas/DiagnosticResult"
        error:
          type: string

    DiagnosticResult:
      type: object
      properties:
        summary:
          type: string
        findings:
          type: array
          items:
            type: object
            properties:
              source:
                type: string
              severity:
                type: string
                enum: [critical, warning, info]
              message:
                type: string
              evidence:
                type: object
              timestamp:
                type: string
                format: date-time
        recommended_actions:
          type: array
          items:
            type: string
        confidence_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
        tools_used:
          type: array
          items:
            type: string
        execution_time:
          type: number
          description: 執行時間（秒）

    DiagnosticHistoryList:
      type: object
      properties:
        items:
          type: array
          items:
            type: object
            properties:
              session_id:
                type: string
              incident_id:
                type: string
              status:
                type: string
              created_at:
                type: string
                format: date-time
              completed_at:
                type: string
                format: date-time
              summary:
                type: string
        pagination:
          $ref: "#/components/schemas/Pagination"

    AlertAnalysisRequest:
      type: object
      required:
        - alert_ids
      properties:
        alert_ids:
          type: array
          items:
            type: string
        correlation_window:
          type: integer
          default: 300
          description: 關聯時間窗口（秒）

    CapacityAnalysisRequest:
      type: object
      required:
        - resource_ids
        - metric_name
      properties:
        resource_ids:
          type: array
          items:
            type: string
          description: "要分析的資源ID列表"
        metric_name:
          type: string
          description: "要分析的指標名稱 (e.g., cpu.usage.percentage)"
        forecast_period:
          type: string
          enum: [7d, 30d, 90d]
          default: 30d
          description: "預測時間範圍"
        start_time:
          type: string
          format: date-time
          description: "分析的歷史數據起始時間（可選，預設為過去90天）"

    CapacityAnalysisResponse:
      type: object
      properties:
        current_usage:
          type: object
          properties:
            average:
              type: number
            peak:
              type: number
            percentile_95:
              type: number
        forecast:
          type: object
          properties:
            trend:
              type: string
              enum: [increasing, stable, decreasing]
            days_to_capacity:
              type: integer
              description: 預測多少天後達到容量上限
            growth_rate:
              type: number
              description: 月增長率百分比
            capacity_alerts:
              type: array
              items:
                type: object
                properties:
                  alert_type:
                    type: string
                  threshold:
                    type: string
                  estimated_date:
                    type: string
                    format: date-time
                  days_remaining:
                    type: integer
                  severity:
                    type: string
        recommendations:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
                enum: [scale_up, scale_down, optimize]
              resource:
                type: string
              priority:
                type: string
                enum: [immediate, high, medium, low]
              current_allocation:
                type: number
              recommended_allocation:
                type: number
              reasoning:
                type: string
              cost_impact:
                type: object
                properties:
                  monthly_increase:
                    type: number
                  currency:
                    type: string
                    default: USD
              actionable:
                type: boolean
                description: "此建議是否可直接觸發動作"
                example: true
              action_type:
                type: string
                enum: [automation_script, external_link]
                description: "動作類型"
                example: "automation_script"
              action_target:
                type: string
                description: "動作目標，例如 script_id 或一個 URL"
                example: "script_123_auto_scale_up"
        chart_data:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date
              historical:
                type: number
              predicted:
                type: number
      example:
        current_usage:
          average: 62.5
          peak: 89.3
          percentile_95: 78.1
        forecast:
          trend: increasing
          days_to_capacity: 45
          growth_rate: 12.3
          capacity_alerts:
            - alert_type: "cpu_threshold"
              threshold: "80%"
              estimated_date: "2025-10-23T00:00:00Z"
              days_remaining: 45
              severity: "warning"
        recommendations:
          - type: scale_up
            resource: "web-cluster"
            priority: high
            current_allocation: 8
            recommended_allocation: 12
            reasoning: "預測 45 天後達到 80% 警戒，建議擴容節點。"
            cost_impact:
              monthly_increase: 400
              currency: USD
        chart_data:
          - date: "2025-08-25"
            historical: 58
            predicted: 60
          - date: "2025-08-26"
            historical: 60
            predicted: 62

    # ============================================
    # Incident Schemas
    # ============================================
    Incident:
      type: object
      required:
        - id
        - title
        - severity
        - status
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, error, warning, info]
        priority:
          type: string
          enum: [P0, P1, P2, P3]
          description: "事件處理的優先級"
        status:
          type: string
          enum: [new, acknowledged, resolved]
        affected_resources:
          type: array
          items:
            type: string
        assignee:
          type: string
        acknowledged_by:
          type: string
        acknowledged_at:
          type: string
          format: date-time
        resolved_by:
          type: string
        resolved_at:
          type: string
          format: date-time
        resolution:
          type: string
        root_cause:
          type: string
        comments:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              user:
                type: string
              comment:
                type: string
              created_at:
                type: string
                format: date-time
        tags:
          type: array
          items:
            type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        automation_execution_ids:
          type: array
          items:
            type: string
          description: "由此事件觸發的自動化執行 ID 列表"

    IncidentList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Incident"
        pagination:
          $ref: "#/components/schemas/Pagination"
      example:
        items:
          - id: "i_1001"
            title: "CPU 高於 90%"
            severity: "warning"
            status: "new"
            affected_resources: ["r_2"]
            created_at: "2025-09-08T00:12:00Z"
          - id: "i_1000"
            title: "資料庫連線失敗"
            severity: "critical"
            status: "acknowledged"
            affected_resources: ["r_1"]
            created_at: "2025-09-07T23:50:00Z"
        pagination:
          page: 1
          page_size: 20
          total_items: 2
          total_pages: 1

    IncidentCreateRequest:
      type: object
      required:
        - title
        - severity
      properties:
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, error, warning, info]
        affected_resources:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string

    IncidentUpdateRequest:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, error, warning, info]
        affected_resources:
          type: array
          items:
            type: string
        tags:
          type: array
          items:
            type: string

    AIGeneratedReport:
      type: object
      properties:
        report_type:
          type: string
          enum: [summary, root_cause, impact_analysis]
        content:
          type: string
          description: AI 生成的報告內容（Markdown 格式）
        key_findings:
          type: array
          items:
            type: string
        recommendations:
          type: array
          items:
            type: string
        confidence_score:
          type: number
          format: float
        generated_at:
          type: string
          format: date-time

    BatchIncidentOperation:
      type: object
      required:
        - operation
        - incident_ids
      properties:
        operation:
          type: string
          enum: [acknowledge, resolve]
        incident_ids:
          type: array
          items:
            type: string
        comment:
          type: string
          description: "用於 acknowledge 操作的批次備註"
        resolution:
          type: string
          description: "用於 resolve 操作的批次解決方案描述"

    # ============================================
    # Silence Schemas - 靜音規則
    # ============================================
    Silence:
      type: object
      required:
        - id
        - name
        - condition
        - start_time
        - end_time
        - created_by
      properties:
        id:
          type: string
          description: 靜音規則唯一識別碼
        name:
          type: string
          description: 靜音規則名稱
        description:
          type: string
          description: 靜音規則描述
        condition:
          type: object
          description: 匹配條件
          properties:
            resources:
              type: array
              items:
                type: string
              description: 匹配的資源 ID 列表
            resource_groups:
              type: array
              items:
                type: string
              description: 匹配的資源群組 ID 列表
            tags:
              type: array
              items:
                type: string
              description: 匹配的標籤列表
            severity:
              type: string
              enum: [critical, error, warning, info]
              description: 匹配的嚴重程度
        start_time:
          type: string
          format: date-time
          description: 靜音開始時間
        end_time:
          type: string
          format: date-time
          description: 靜音結束時間
        is_recurring:
          type: boolean
          description: 是否重複靜音
          default: false
        recurrence_pattern:
          type: object
          description: 重複模式（當 is_recurring 為 true 時使用）
          properties:
            frequency:
              type: string
              enum: [daily, weekly, monthly]
            interval:
              type: integer
              minimum: 1
              default: 1
        created_by:
          type: string
          description: 創建者 ID
        created_at:
          type: string
          format: date-time
          description: 創建時間
        updated_at:
          type: string
          format: date-time
          description: 更新時間
        status:
          type: string
          enum: [active, expired, disabled]
          description: 靜音規則狀態

    SilenceList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Silence"
        pagination:
          $ref: "#/components/schemas/Pagination"
      example:
        items:
          - id: "s_1001"
            name: "週末維護靜音"
            description: "每週六日進行系統維護"
            condition:
              resources: ["r_1", "r_2"]
              severity: "warning"
            start_time: "2025-01-04T18:00:00Z"
            end_time: "2025-01-05T06:00:00Z"
            is_recurring: true
            recurrence_pattern:
              frequency: "weekly"
              interval: 1
            created_by: "u_123"
            created_at: "2025-01-03T10:00:00Z"
            status: "active"
        pagination:
          page: 1
          page_size: 20
          total_items: 5
          total_pages: 1

    SilenceCreateRequest:
      type: object
      required:
        - name
        - condition
        - start_time
        - end_time
      properties:
        name:
          type: string
          description: 靜音規則名稱
        description:
          type: string
          description: 靜音規則描述
        condition:
          type: object
          description: 匹配條件
          properties:
            resources:
              type: array
              items:
                type: string
              description: 匹配的資源 ID 列表
            resource_groups:
              type: array
              items:
                type: string
              description: 匹配的資源群組 ID 列表
            tags:
              type: array
              items:
                type: string
              description: 匹配的標籤列表
            severity:
              type: string
              enum: [critical, error, warning, info]
              description: 匹配的嚴重程度
        start_time:
          type: string
          format: date-time
          description: 靜音開始時間
        end_time:
          type: string
          format: date-time
          description: 靜音結束時間
        is_recurring:
          type: boolean
          description: 是否重複靜音
          default: false
        recurrence_pattern:
          type: object
          description: 重複模式（當 is_recurring 為 true 時使用）
          properties:
            frequency:
              type: string
              enum: [daily, weekly, monthly]
            interval:
              type: integer
              minimum: 1
              default: 1

    SilenceUpdateRequest:
      type: object
      properties:
        name:
          type: string
          description: 靜音規則名稱
        description:
          type: string
          description: 靜音規則描述
        condition:
          type: object
          description: 匹配條件
          properties:
            resources:
              type: array
              items:
                type: string
              description: 匹配的資源 ID 列表
            resource_groups:
              type: array
              items:
                type: string
              description: 匹配的資源群組 ID 列表
            tags:
              type: array
              items:
                type: string
              description: 匹配的標籤列表
            severity:
              type: string
              enum: [critical, error, warning, info]
              description: 匹配的嚴重程度
        start_time:
          type: string
          format: date-time
          description: 靜音開始時間
        end_time:
          type: string
          format: date-time
          description: 靜音結束時間
        is_recurring:
          type: boolean
          description: 是否重複靜音
        recurrence_pattern:
          type: object
          description: 重複模式
          properties:
            frequency:
              type: string
              enum: [daily, weekly, monthly]
            interval:
              type: integer
              minimum: 1

    # ============================================
    # Alert Schemas
    # ============================================
    Alert:
      type: object
      properties:
        id: { type: string }
        name: { type: string }
        severity: { type: string, enum: [P0, P1, P2, P3] }
        status: { type: string, enum: [firing, resolved, pending] }
        resource_name: { type: string }
        message: { type: string }
        fired_at: { type: string, format: date-time }
        resolved_at: { type: string, format: date-time }
    AlertList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Alert'
        pagination:
          $ref: '#/components/schemas/Pagination'

    # ============================================
    # Alert Rule Schemas
    # ============================================
    AlertRule:
      type: object
      required:
        - id
        - name
        - condition
        - enabled
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        condition:
          type: object
          properties:
            metric:
              type: string
            operator:
              type: string
              enum: [gt, gte, lt, lte, eq, neq]
            threshold:
              type: number
            duration:
              type: integer
              description: 持續時間（秒）
        severity:
          type: string
          enum: [critical, error, warning, info]
        priority:
          type: string
          enum: [P0, P1, P2, P3]
          description: "規則觸發的事件優先級"
        enabled:
          type: boolean
        notification_channels:
          type: array
          items:
            type: string
        resource_filter:
          type: object
          properties:
            groups:
              type: array
              items:
                type: string
            types:
              type: array
              items:
                type: string
            tags:
              type: array
              items:
                type: string
        automation:
          type: object
          properties:
            enabled:
              type: boolean
              default: false
            script_id:
              type: string
              description: "觸發事件時要執行的自動化腳本 ID"
            parameters:
              type: object
              additionalProperties: true
              description: "傳遞給腳本的參數"
          description: "事件觸發時的自動化設定"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    AlertRuleList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/AlertRule"
        pagination:
          $ref: "#/components/schemas/Pagination"

    AlertRuleCreateRequest:
      type: object
      required:
        - name
        - condition
        - severity
      properties:
        name:
          type: string
        description:
          type: string
        condition:
          type: object
          required:
            - metric
            - operator
            - threshold
          properties:
            metric:
              type: string
            operator:
              type: string
              enum: [gt, gte, lt, lte, eq, neq]
            threshold:
              type: number
            duration:
              type: integer
        severity:
          type: string
          enum: [critical, error, warning, info]
        notification_channels:
          type: array
          items:
            type: string
        resource_filter:
          type: object

    AlertRuleUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        condition:
          type: object
        severity:
          type: string
        notification_channels:
          type: array
          items:
            type: string
        resource_filter:
          type: object

    # ============================================
    # Automation Schemas
    # ============================================
    Script:
      type: object
      required:
        - id
        - name
        - category
        - language
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
          enum: [diagnostic, remediation, maintenance, custom]
        language:
          type: string
          enum: [python, bash, powershell, javascript]
        content:
          type: string
          description: 腳本內容
        parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              type:
                type: string
                enum: [string, number, boolean, array, object]
              required:
                type: boolean
              default:
                description: 參數的預設值（可以是任何類型）
                oneOf:
                  - type: string
                  - type: number
                  - type: boolean
                  - type: array
                    items: {}
                  - type: object
              description:
                type: string
        tags:
          type: array
          items:
            type: string
        version:
          type: string
        created_by:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    ScriptList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Script"
        pagination:
          $ref: "#/components/schemas/Pagination"

    ScriptCreateRequest:
      type: object
      required:
        - name
        - category
        - language
        - content
      properties:
        name:
          type: string
        description:
          type: string
        category:
          type: string
          enum: [diagnostic, remediation, maintenance, custom]
        language:
          type: string
          enum: [python, bash, powershell, javascript]
        content:
          type: string
        parameters:
          type: array
          items:
            type: object
        tags:
          type: array
          items:
            type: string

    ScriptUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        content:
          type: string
        parameters:
          type: array
          items:
            type: object
        tags:
          type: array
          items:
            type: string

    ScriptRunRequest:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties: true
          description: "傳遞給腳本的參數"
        target_resource_ids:
          type: array
          items:
            type: string
          description: "執行腳本的目標資源 ID 列表"
        reason:
          type: string
          description: "手動執行的原因，用於審計"

    ExecutionTaskResponse:
      type: object
      properties:
        execution_id:
          type: string
        status:
          type: string
          enum: [pending, running, success, failed]
        message:
          type: string

    Execution:
      type: object
      properties:
        id:
          type: string
        script_id:
          type: string
        script_name:
          type: string
        status:
          type: string
          enum: [pending, running, success, failed]
        parameters:
          type: object
        target_resources:
          type: array
          items:
            type: string
        output:
          type: string
        error:
          type: string
        started_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
        executed_by:
          type: string
        triggering_incident_id:
          type: string
          description: "觸發此次執行的事件 ID"

    ExecutionList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Execution"
        pagination:
          $ref: "#/components/schemas/Pagination"

    Schedule:
      type: object
      properties:
        id:
          type: string
        script_id:
          type: string
        cron_expression:
          type: string
        enabled:
          type: boolean
        parameters:
          type: object
        target_resources:
          type: array
          items:
            type: string
        next_run:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time

    ScheduleCreateRequest:
      type: object
      required:
        - script_id
        - cron_expression
      properties:
        script_id:
          type: string
        cron_expression:
          type: string
        parameters:
          type: object
        target_resources:
          type: array
          items:
            type: string

    ScheduleUpdateRequest:
      type: object
      properties:
        cron_expression:
          type: string
        enabled:
          type: boolean
        parameters:
          type: object
        target_resources:
          type: array
          items:
            type: string

    ScheduleList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Schedule"
        pagination:
          $ref: "#/components/schemas/Pagination"

    # ============================================
    # User Schemas
    # ============================================
    User:
      type: object
      required:
        - id
        - username
        - email
        - role
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [super_admin, team_manager, team_member]
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        department:
          type: string
        phone:
          type: string
        avatar_url:
          type: string
        last_login:
          type: string
          format: date-time
        status:
          type: string
          enum: [active, inactive, suspended]
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    UserList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/User"
        pagination:
          $ref: "#/components/schemas/Pagination"

    UserCreateRequest:
      type: object
      required:
        - username
        - email
        - password
        - role
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        name:
          type: string
        role:
          type: string
          enum: [super_admin, team_manager, team_member]
        team_ids:
          type: array
          items:
            type: string
        department:
          type: string
        phone:
          type: string

    UserUpdateRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        role:
          type: string
          enum: [super_admin, team_manager, team_member]
        team_ids:
          type: array
          items:
            type: string
        department:
          type: string
        phone:
          type: string
        status:
          type: string
          enum: [active, inactive, suspended]

    UserProfile:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
        email:
          type: string
        email_verified:
          type: boolean
        name:
          type: string
        phone:
          type: string
        phone_verified:
          type: boolean
        line_token:
          type: string
        line_verified:
          type: boolean
        avatar_url:
          type: string
        department:
          type: string
        teams:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
        notification_preferences:
          $ref: "#/components/schemas/NotificationPreferences"
      example:
        id: "u_123"
        username: "zoe"
        email: "zoe@example.com"
        email_verified: true
        name: "Zoe"
        phone: "+886900000000"
        phone_verified: true
        avatar_url: "https://example.com/avatars/zoe.png"
        department: "SRE"
        teams:
          - id: "t_001"
            name: "SRE Team"
        notification_preferences:
          email:
            enabled: true
            severity_filter: [critical, error]
          sms:
            enabled: false
          line:
            enabled: false
          quiet_hours:
            enabled: true
            start: "22:00:00"
            end: "07:00:00"

    ProfileUpdateRequest:
      type: object
      properties:
        name:
          type: string
        phone:
          type: string
        line_token:
          type: string
        department:
          type: string
        avatar_url:
          type: string

    NotificationPreferences:
      type: object
      properties:
        email:
          type: object
          properties:
            enabled:
              type: boolean
            severity_filter:
              type: array
              items:
                type: string
                enum: [critical, error, warning, info]
        sms:
          type: object
          properties:
            enabled:
              type: boolean
            severity_filter:
              type: array
              items:
                type: string
        line:
          type: object
          properties:
            enabled:
              type: boolean
            severity_filter:
              type: array
              items:
                type: string
        quiet_hours:
          type: object
          properties:
            enabled:
              type: boolean
            start:
              type: string
              format: time
            end:
              type: string
              format: time

    # ============================================
    # Team Schemas
    # ============================================
    Team:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        manager_id:
          type: string
        manager_name:
          type: string
        member_count:
          type: integer
        members:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              role:
                type: string
        notification_settings:
          type: object
          properties:
            primary_contact:
              type: string
            escalation_contact:
              type: string
            subscribers:
              type: array
              items:
                type: object
                properties:
                  user_id:
                    type: string
                  user_name:
                    type: string
                  notify_on_severities:
                    type: array
                    items:
                      type: string
                      enum: [critical, error, warning, info]
              description: "接收此團隊相關通知的訂閱者列表"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: "t_001"
        name: "SRE Team"
        description: "Site Reliability Engineering"
        manager_id: "u_mgr"
        manager_name: "Zoe"
        member_count: 3
        members:
          - id: "u_1"
            name: "Alice"
            role: "team_member"
          - id: "u_2"
            name: "Bob"
            role: "team_member"
        notification_settings:
          primary_contact: "u_1"
          escalation_contact: "u_2"
          subscribers:
            - user_id: "u_1"
              user_name: "Alice"
              notify_on_severities: [critical, error]

    TeamList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/Team"
        pagination:
          $ref: "#/components/schemas/Pagination"

    TeamCreateRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        description:
          type: string
        manager_id:
          type: string
        member_ids:
          type: array
          items:
            type: string
        notification_settings:
          type: object

    TeamUpdateRequest:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        manager_id:
          type: string
        notification_settings:
          type: object

    TeamMemberOperation:
      type: object
      required:
        - operation
        - user_ids
      properties:
        operation:
          type: string
          enum: [add, remove]
        user_ids:
          type: array
          items:
            type: string

    # ============================================
    # Notification Channel Schemas
    # ============================================
    NotificationChannel:
      type: object
      required:
        - id
        - name
        - type
        - enabled
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [email, webhook, slack, line, sms]
        enabled:
          type: boolean
        configuration:
          type: object
          description: 管道特定的配置
          properties:
            # Email
            smtp_host:
              type: string
            smtp_port:
              type: integer
            smtp_username:
              type: string
            smtp_from:
              type: string
            # Webhook
            url:
              type: string
            method:
              type: string
            headers:
              type: object
            # Slack
            webhook_url:
              type: string
            channel:
              type: string
            mention:
              type: string
            # LINE
            access_token:
              type: string
            # SMS
            api_endpoint:
              type: string
            api_key:
              type: string
            sender_id:
              type: string
        test_status:
          type: object
          properties:
            last_test:
              type: string
              format: date-time
            success:
              type: boolean
            message:
              type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      example:
        id: "nc_email_01"
        name: "Primary Email"
        type: "email"
        enabled: true
        configuration:
          smtp_host: "smtp.example.com"
          smtp_port: 587
          smtp_username: "noreply@example.com"
          smtp_from: "noreply@example.com"
        test_status:
          last_test: "2025-09-07T12:00:00Z"
          success: true
          message: "OK"

    NotificationChannelList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/NotificationChannel"
        pagination:
          $ref: "#/components/schemas/Pagination"

    NotificationChannelCreateRequest:
      type: object
      required:
        - name
        - type
        - configuration
      properties:
        name:
          type: string
        type:
          type: string
          enum: [email, webhook, slack, line, sms]
        configuration:
          type: object
        enabled:
          type: boolean
          default: true

    NotificationChannelUpdateRequest:
      type: object
      properties:
        name:
          type: string
        configuration:
          type: object
        enabled:
          type: boolean

    # ============================================
    # Settings Schemas
    # ============================================
    SystemSettings:
      type: object
      properties:
        general:
          type: object
          properties:
            site_name:
              type: string
            site_url:
              type: string
            time_zone:
              type: string
            language:
              type: string
              enum: [zh-TW, en-US]
        integration:
          type: object
          properties:
            grafana_url:
              type: string
            prometheus_url:
              type: string
            loki_url:
              type: string
            keycloak_url:
              type: string
        notification:
          type: object
          properties:
            default_channel:
              type: string
            retry_count:
              type: integer
            retry_delay:
              type: integer
        maintenance:
          type: object
          properties:
            auto_acknowledge:
              type: boolean
            auto_resolve:
              type: boolean
            default_assignee:
              type: string
      example:
        general:
          site_name: "SRE Platform"
          site_url: "https://sre.example.com"
          time_zone: "Asia/Taipei"
          language: "zh-TW"
        integration:
          grafana_url: "https://grafana.example.com"
          prometheus_url: "https://prometheus.example.com"
          loki_url: "https://loki.example.com"
          keycloak_url: "https://keycloak.example.com"
        notification:
          default_channel: "nc_email_01"
          retry_count: 3
          retry_delay: 30
        maintenance:
          auto_acknowledge: true
          auto_resolve: false
          default_assignee: "u_oncall"

    # ============================================
    # Audit Log Schemas
    # ============================================
    AuditLog:
      type: object
      properties:
        id:
          type: string
        timestamp:
          type: string
          format: date-time
        user_id:
          type: string
        username:
          type: string
        action:
          type: string
          enum: [create, update, delete, execute, login, logout]
        resource_type:
          type: string
        resource_id:
          type: string
        resource_name:
          type: string
        changes:
          type: object
          properties:
            before:
              type: object
            after:
              type: object
        result:
          type: string
          enum: [success, failure]
        error_message:
          type: string
        ip_address:
          type: string
        user_agent:
          type: string
      example:
        id: "al_001"
        timestamp: "2025-09-08T00:00:00Z"
        user_id: "u_123"
        username: "zoe"
        action: "update"
        resource_type: "resource"
        resource_id: "r_1"
        resource_name: "web-01"
        changes:
          before:
            status: "warning"
          after:
            status: "healthy"
        result: "success"
        ip_address: "203.0.113.10"
        user_agent: "Mozilla/5.0"

    AuditLogList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/AuditLog"
        pagination:
          $ref: "#/components/schemas/Pagination"

    # ============================================
    # Notification Center Schemas
    # ============================================
    UserNotification:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        message:
          type: string
        type:
          type: string
          enum: [alert, incident, system, announcement]
        severity:
          type: string
          enum: [critical, error, warning, info]
        status:
          type: string
          enum: [read, unread]
        created_at:
          type: string
          format: date-time
        read_at:
          type: string
          format: date-time
        link:
          type: string
          description: "相關資源的連結 URL"
      example:
        id: "n_001"
        title: "新事件：CPU 使用率過高"
        message: "web-01 CPU > 90% 持續 5 分鐘"
        type: "alert"
        severity: "warning"
        status: "unread"
        created_at: "2025-09-08T00:10:00Z"
        link: "/incidents/i_1001"

    UserNotificationList:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: "#/components/schemas/UserNotification"
        pagination:
          $ref: "#/components/schemas/Pagination"

    UserNotificationSummary:
      type: object
      properties:
        unread_count:
          type: integer
        unread_by_severity:
          type: object
          properties:
            critical:
              type: integer
            error:
              type: integer
            warning:
              type: integer
            info:
              type: integer
        top_unread:
          type: array
          items:
            $ref: "#/components/schemas/UserNotification"
