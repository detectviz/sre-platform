openapi: 3.1.0
info:
  title: SRE 平台 API 契約
  version: 2.0.0
  description: |
    定義 SRE 平台前端與後端之間的資料契約，涵蓋事件管理、資源監控、儀表板、
    自動化、通知、設定與個人偏好等模組。所有時間皆為 ISO 8601 格式 (UTC)。
servers:
  - url: http://localhost:4000
    description: 本地 Mock 伺服器
x-error-codes:
  - code: INVALID_REQUEST
    message: 請求參數驗證失敗，請確認輸入資料。
  - code: UNAUTHORIZED
    message: 尚未登入或登入已逾期。
  - code: FORBIDDEN
    message: 權限不足，請聯絡系統管理員。
  - code: NOT_FOUND
    message: 查無符合條件的資料。
  - code: CONFLICT
    message: 資料狀態衝突或已存在重複紀錄。
  - code: INTERNAL_ERROR
    message: 系統處理發生未預期錯誤，請稍後再試。
tags:
  - name: 認證
    description: 登入與令牌管理。
  - name: 全局功能
    description: 全局搜尋與頂部摘要功能。
  - name: 通知中心
    description: 個人通知收取與管理。
  - name: 事件管理
    description: 事件列表、詳情與 AI 分析。
  - name: 事件規則
    description: 事件偵測與自動化規則設定。
  - name: 靜音規則
    description: 事件靜音排程與條件設定。
  - name: 資源管理
    description: 資源列表與指標查詢。
  - name: 資源群組
    description: 資源群組與訂閱管理。
  - name: 拓撲視圖
    description: 資源拓撲圖與依賴關係。
  - name: 儀表板
    description: 儀表板清單與戰情室設定。
  - name: 分析中心
    description: 容量規劃、資源負載與 AI 洞察。
  - name: 自動化
    description: 腳本、排程與執行日誌管理。
  - name: 身份與存取
    description: 人員、團隊、角色與審計日誌。
  - name: 通知管理
    description: 通知策略、管道與歷史。
  - name: 平台設定
    description: 標籤、郵件與身份驗證設定。
  - name: 個人偏好
    description: 個人偏好與安全設定。
  - name: 標籤服務
    description: 提供全平台標籤鍵與標籤值查詢服務。
paths:
  /auth/login:
    post:
      tags:
        - 認證
      summary: 使用者登入
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: 登入成功，回傳存取與刷新令牌。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
  /auth/logout:
    post:
      tags:
        - 認證
      summary: 登出並註銷目前的存取令牌
      operationId: logout
      responses:
        '204':
          description: 已成功登出。
        '401':
          $ref: '#/components/responses/Unauthorized'
  /auth/refresh:
    post:
      tags:
        - 認證
      summary: 透過刷新令牌取得新的存取令牌
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshRequest'
      responses:
        '200':
          description: 成功換發新的令牌。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalError'
  /me:
    get:
      tags:
        - 個人偏好
      summary: 取得目前登入者的個人資訊
      operationId: getCurrentUser
      responses:
        '200':
          description: 回傳使用者基本資料與角色。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /me/preferences:
    get:
      tags:
        - 個人偏好
      summary: 取得使用者偏好設定
      operationId: getPreferences
      responses:
        '200':
          description: 回傳偏好設定資料。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
        '401':
          $ref: '#/components/responses/Unauthorized'
    put:
      tags:
        - 個人偏好
      summary: 更新使用者偏好設定
      operationId: updatePreferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceUpdateRequest'
      responses:
        '200':
          description: 偏好設定已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPreference'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /me/security/logins:
    get:
      tags:
        - 個人偏好
      summary: 取得最近登入記錄
      operationId: listSecurityLogins
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: 回傳登入記錄列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/SecurityLoginRecord'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /search:
    get:
      tags:
        - 全局功能
      summary: 全局搜尋
      operationId: globalSearch
      parameters:
        - name: keyword
          in: query
          required: true
          description: 搜尋關鍵字。
          schema:
            type: string
        - name: types
          in: query
          description: 限制搜尋類型 (以逗號分隔)。
          schema:
            type: string
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: 回傳依類型分組的搜尋結果。
          content:
            application/json:
              schema:
                type: object
                properties:
                  query:
                    type: string
                  groups:
                    type: array
                    items:
                      $ref: '#/components/schemas/GlobalSearchGroup'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /notifications/summary:
    get:
      tags:
        - 通知中心
      summary: 取得通知中心摘要
      operationId: getNotificationSummary
      responses:
        '200':
          description: 回傳未讀數量與分類統計。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /notifications:
    get:
      tags:
        - 通知中心
      summary: 取得通知列表
      operationId: listNotifications
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: status
          in: query
          description: 依通知狀態篩選。
          schema:
            type: string
            enum: [unread, read]
        - name: severity
          in: query
          description: 依嚴重程度篩選。
          schema:
            type: string
            enum: [critical, warning, info, success]
      responses:
        '200':
          description: 回傳個人通知列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/NotificationItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /notifications/{notification_id}/read:
    post:
      tags:
        - 通知中心
      summary: 標記單一通知為已讀
      operationId: markNotificationRead
      parameters:
        - name: notification_id
          in: path
          required: true
          description: 通知唯一識別碼。
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkNotificationReadRequest'
      responses:
        '200':
          description: 已更新通知狀態。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /notifications/mark-all-read:
    post:
      tags:
        - 通知中心
      summary: 將所有通知標記為已讀
      operationId: markAllNotificationsRead
      responses:
        '200':
          description: 返回更新後的通知摘要。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /events/summary:
    get:
      tags:
        - 事件管理
      summary: 取得事件 KPI 統計
      operationId: getEventSummary
      parameters:
        - name: time_range_start
          in: query
          description: KPI 起始時間 (含)。
          schema:
            type: string
            format: date-time
        - name: time_range_end
          in: query
          description: KPI 結束時間 (含)。
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: 事件總覽統計。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventSummaryMetrics'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /events:
    get:
      tags:
        - 事件管理
      summary: 取得事件列表
      operationId: listEvents
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: status
          in: query
          schema:
            type: string
            enum: [new, acknowledged, in_progress, resolved, silenced]
        - name: severity
          in: query
          schema:
            type: string
            enum: [critical, warning, info]
        - name: resource_id
          in: query
          schema:
            type: string
        - name: rule_id
          in: query
          schema:
            type: string
        - name: assignee_id
          in: query
          schema:
            type: string
        - name: start_time
          in: query
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          schema:
            type: string
            format: date-time
        - name: keyword
          in: query
          description: 摘要或描述搜尋關鍵字。
          schema:
            type: string
        - name: resource_name
          in: query
          description: 依資源名稱模糊搜尋。
          schema:
            type: string
        - name: resource_type
          in: query
          description: 依資源類型篩選。
          schema:
            type: string
        - name: rule_name
          in: query
          description: 依規則名稱模糊搜尋。
          schema:
            type: string
        - name: tags
          in: query
          description: 依標籤篩選 (以逗號分隔)。
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: 回傳事件分頁列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/EventSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 事件管理
      summary: 手動建立事件
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventRequest'
      responses:
        '201':
          description: 事件建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
  /events/{event_id}:
    parameters:
      - name: event_id
        in: path
        required: true
        description: 事件唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 事件管理
      summary: 取得事件詳情
      operationId: getEventById
      responses:
        '200':
          description: 回傳事件詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - 事件管理
      summary: 更新事件狀態或指派資訊
      operationId: updateEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventRequest'
      responses:
        '200':
          description: 事件已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 事件管理
      summary: 刪除事件
      operationId: deleteEvent
      responses:
        '204':
          description: 事件已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /events/{event_id}/timeline:
    get:
      tags:
        - 事件管理
      summary: 取得事件處理歷史
      operationId: getEventTimeline
      responses:
        '200':
          description: 回傳事件歷程清單。
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventTimelineEntry'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - 事件管理
      summary: 新增事件歷程記錄
      operationId: appendEventTimeline
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventTimelineEntry'
      responses:
        '201':
          description: 已新增事件歷程。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventTimelineEntry'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /events/{event_id}/related:
    get:
      tags:
        - 事件管理
      summary: 取得關聯事件
      operationId: getRelatedEvents
      responses:
        '200':
          description: 回傳關聯事件列表。
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/EventRelatedItem'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /events/{event_id}/acknowledge:
    post:
      tags:
        - 事件管理
      summary: 確認接手事件
      operationId: acknowledgeEvent
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcknowledgeEventRequest'
      responses:
        '200':
          description: 事件已標記為接手。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /events/{event_id}/analysis:
    get:
      tags:
        - 事件管理
      summary: 取得最新的 AI 事件分析
      operationId: getEventAnalysis
      responses:
        '200':
          description: 回傳事件 AI 分析內容。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventAnalysisReport'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - 事件管理
      summary: 重新產生 AI 事件分析
      operationId: generateEventAnalysis
      responses:
        '202':
          description: 已觸發分析，回傳最新結果或排程資訊。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventAnalysisReport'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /events/{event_id}/silence:
    post:
      tags:
        - 事件管理
      summary: 針對事件建立快速靜音設定
      operationId: createQuickSilence
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuickSilenceRequest'
      responses:
        '201':
          description: 已建立新的靜音規則。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SilenceRuleDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /event-rules/summary:
    get:
      tags:
        - 事件規則
      summary: 取得事件規則統計
      operationId: getEventRuleSummary
      responses:
        '200':
          description: 規則啟用狀態統計。
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  enabled:
                    type: integer
                  automation_enabled:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
  /event-rules:
    get:
      tags:
        - 事件規則
      summary: 取得事件規則列表
      operationId: listEventRules
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: severity
          in: query
          schema:
            type: string
            enum: [critical, warning, info]
        - name: enabled
          in: query
          schema:
            type: boolean
        - name: keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 回傳事件規則列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/EventRuleSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 事件規則
      summary: 建立事件規則
      operationId: createEventRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEventRuleRequest'
      responses:
        '201':
          description: 規則建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRuleDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '409':
          $ref: '#/components/responses/Conflict'
  /event-rules/{rule_id}:
    parameters:
      - name: rule_id
        in: path
        required: true
        description: 事件規則唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 事件規則
      summary: 取得事件規則詳情
      operationId: getEventRuleById
      responses:
        '200':
          description: 規則詳情資料。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRuleDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - 事件規則
      summary: 更新事件規則
      operationId: updateEventRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEventRuleRequest'
      responses:
        '200':
          description: 規則已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRuleDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 事件規則
      summary: 刪除事件規則
      operationId: deleteEventRule
      responses:
        '204':
          description: 規則已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /event-rules/{rule_id}/toggle:
    post:
      tags:
        - 事件規則
      summary: 切換事件規則啟用狀態
      operationId: toggleEventRule
      responses:
        '200':
          description: 規則狀態已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventRuleDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /event-rules/{rule_id}/test:
    post:
      tags:
        - 事件規則
      summary: 測試事件規則
      operationId: testEventRule
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestEventRuleRequest'
      responses:
        '200':
          description: 回傳測試結果摘要。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestEventRuleResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /silence-rules:
    get:
      tags:
        - 靜音規則
      summary: 取得靜音規則列表
      operationId: listSilenceRules
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: silence_type
          in: query
          schema:
            type: string
            enum: [single, repeat, condition]
        - name: enabled
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: 回傳靜音規則列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/SilenceRuleSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 靜音規則
      summary: 建立靜音規則
      operationId: createSilenceRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSilenceRuleRequest'
      responses:
        '201':
          description: 靜音規則建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SilenceRuleDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /silence-rules/{silence_id}:
    parameters:
      - name: silence_id
        in: path
        required: true
        description: 靜音規則唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 靜音規則
      summary: 取得靜音規則詳情
      operationId: getSilenceRuleById
      responses:
        '200':
          description: 靜音規則詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SilenceRuleDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - 靜音規則
      summary: 更新靜音規則
      operationId: updateSilenceRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSilenceRuleRequest'
      responses:
        '200':
          description: 靜音規則已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SilenceRuleDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 靜音規則
      summary: 刪除靜音規則
      operationId: deleteSilenceRule
      responses:
        '204':
          description: 靜音規則已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /silence-rules/{silence_id}/toggle:
    post:
      tags:
        - 靜音規則
      summary: 切換靜音規則啟用狀態
      operationId: toggleSilenceRule
      responses:
        '200':
          description: 靜音規則狀態已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SilenceRuleDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /resources/summary:
    get:
      tags:
        - 資源管理
      summary: 取得資源 KPI 指標
      operationId: getResourceSummary
      responses:
        '200':
          description: 資源統計資料。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceSummaryMetrics'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /resources:
    get:
      tags:
        - 資源管理
      summary: 取得資源列表
      operationId: listResources
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: status
          in: query
          schema:
            type: string
            enum: [healthy, warning, critical, offline]
        - name: type
          in: query
          schema:
            type: string
            enum: [server, database, cache, gateway, service]
        - name: environment
          in: query
          schema:
            type: string
        - name: keyword
          in: query
          description: 名稱、IP 或標籤關鍵字。
          schema:
            type: string
      responses:
        '200':
          description: 回傳資源列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/ResourceSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 資源管理
      summary: 建立資源
      operationId: createResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceRequest'
      responses:
        '201':
          description: 資源建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /resources/{resource_id}:
    parameters:
      - name: resource_id
        in: path
        required: true
        description: 資源唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 資源管理
      summary: 取得資源詳情
      operationId: getResourceById
      responses:
        '200':
          description: 回傳資源詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - 資源管理
      summary: 更新資源資訊
      operationId: updateResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceRequest'
      responses:
        '200':
          description: 資源已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 資源管理
      summary: 刪除資源
      operationId: deleteResource
      responses:
        '204':
          description: 資源已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /resources/{resource_id}/metrics:
    get:
      tags:
        - 資源管理
      summary: 取得資源即時指標
      operationId: getResourceMetrics
      parameters:
        - name: range
          in: query
          description: 指標時間範圍 (如 6h、24h、7d)。
          schema:
            type: string
      responses:
        '200':
          description: 回傳資源指標趨勢。
          content:
            application/json:
              schema:
                type: object
                properties:
                  metrics:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceMetric'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /resources/{resource_id}/events:
    get:
      tags:
        - 資源管理
      summary: 取得資源關聯事件
      operationId: getResourceEvents
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: 回傳該資源的事件列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/EventSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /resource-groups:
    get:
      tags:
        - 資源群組
      summary: 取得資源群組列表
      operationId: listResourceGroups
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 回傳資源群組列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/ResourceGroupSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 資源群組
      summary: 建立資源群組
      operationId: createResourceGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourceGroupRequest'
      responses:
        '201':
          description: 群組建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /resource-groups/{group_id}:
    parameters:
      - name: group_id
        in: path
        required: true
        description: 資源群組唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 資源群組
      summary: 取得資源群組詳情
      operationId: getResourceGroupById
      responses:
        '200':
          description: 回傳群組詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    put:
      tags:
        - 資源群組
      summary: 更新資源群組
      operationId: updateResourceGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourceGroupRequest'
      responses:
        '200':
          description: 群組已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceGroupDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 資源群組
      summary: 刪除資源群組
      operationId: deleteResourceGroup
      responses:
        '204':
          description: 群組已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /topology:
    get:
      tags:
        - 拓撲視圖
      summary: 取得拓撲圖資料
      operationId: getTopology
      parameters:
        - name: layout
          in: query
          schema:
            type: string
            enum: [force, circular, hierarchical, grid]
        - name: status
          in: query
          schema:
            type: string
            enum: [healthy, warning, critical]
      responses:
        '200':
          description: 拓撲節點與連線資料。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopologyGraph'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /dashboards/summary:
    get:
      tags:
        - 儀表板
      summary: 取得儀表板統計
      operationId: getDashboardSummary
      responses:
        '200':
          description: 儀表板 KPI 資訊。
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  published:
                    type: integer
                  featured:
                    type: integer
                  automated:
                    type: integer
        '401':
          $ref: '#/components/responses/Unauthorized'
  /dashboards:
    get:
      tags:
        - 儀表板
      summary: 取得儀表板列表
      operationId: listDashboards
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/SortByParam'
        - $ref: '#/components/parameters/SortOrderParam'
        - name: category
          in: query
          schema:
            type: string
        - name: owner_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 回傳儀表板列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/DashboardSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 儀表板
      summary: 建立儀表板
      operationId: createDashboard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDashboardRequest'
      responses:
        '201':
          description: 儀表板建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /dashboards/{dashboard_id}:
    parameters:
      - name: dashboard_id
        in: path
        required: true
        description: 儀表板唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 儀表板
      summary: 取得儀表板詳情
      operationId: getDashboardById
      responses:
        '200':
          description: 回傳儀表板設定與元件。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - 儀表板
      summary: 更新儀表板設定
      operationId: updateDashboard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDashboardRequest'
      responses:
        '200':
          description: 儀表板已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 儀表板
      summary: 刪除儀表板
      operationId: deleteDashboard
      responses:
        '204':
          description: 儀表板已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /dashboards/{dashboard_id}/publish:
    post:
      tags:
        - 儀表板
      summary: 發布或取消發布儀表板
      operationId: publishDashboard
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                published:
                  type: boolean
                  default: true
      responses:
        '200':
          description: 儀表板發布狀態已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /dashboards/{dashboard_id}/default:
    post:
      tags:
        - 儀表板
      summary: 設定儀表板為預設首頁
      operationId: setDefaultDashboard
      responses:
        '200':
          description: 已更新預設儀表板。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /analysis/capacity/summary:
    get:
      tags:
        - 分析中心
      summary: 取得容量規劃摘要
      operationId: getCapacitySummary
      parameters:
        - name: range
          in: query
          schema:
            type: string
            example: 30d
      responses:
        '200':
          description: 容量使用摘要。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CapacitySummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analysis/capacity/forecasts:
    get:
      tags:
        - 分析中心
      summary: 取得容量預測資料
      operationId: getCapacityForecasts
      parameters:
        - name: range
          in: query
          schema:
            type: string
            example: 90d
        - name: model
          in: query
          schema:
            type: string
            enum: [arima, prophet, lstm]
      responses:
        '200':
          description: 預測趨勢與建議。
          content:
            application/json:
              schema:
                type: object
                properties:
                  forecasts:
                    type: array
                    items:
                      $ref: '#/components/schemas/CapacityForecast'
                  suggestions:
                    type: array
                    items:
                      $ref: '#/components/schemas/OptimizationSuggestion'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analysis/resource-load:
    get:
      tags:
        - 分析中心
      summary: 取得資源負載分析
      operationId: getResourceLoadAnalysis
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: type
          in: query
          schema:
            type: string
            enum: [server, database, cache, gateway, service]
        - name: group_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 回傳資源負載統計。
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    $ref: '#/components/schemas/ResourceLoadSummary'
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/ResourceLoadRow'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analysis/ai-insights:
    get:
      tags:
        - 分析中心
      summary: 取得最新 AI 洞察報告
      operationId: listAIInsights
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: 回傳 AI 洞察報告列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AIInsightReport'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /analysis/ai-insights/{report_id}:
    parameters:
      - name: report_id
        in: path
        required: true
        description: AI 洞察報告識別碼。
        schema:
          type: string
    get:
      tags:
        - 分析中心
      summary: 取得單一 AI 洞察詳情
      operationId: getAIInsightById
      responses:
        '200':
          description: 回傳完整的 AI 洞察資料。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIInsightReport'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /automation/scripts:
    get:
      tags:
        - 自動化
      summary: 取得腳本列表
      operationId: listAutomationScripts
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: type
          in: query
          schema:
            type: string
            enum: [shell, python, ansible, terraform]
        - name: keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 回傳腳本列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AutomationScriptSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 自動化
      summary: 建立自動化腳本
      operationId: createAutomationScript
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAutomationScriptRequest'
      responses:
        '201':
          description: 腳本建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationScriptDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /automation/scripts/{script_id}:
    parameters:
      - name: script_id
        in: path
        required: true
        description: 腳本唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 自動化
      summary: 取得腳本詳情
      operationId: getAutomationScriptById
      responses:
        '200':
          description: 腳本詳情資料。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationScriptDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - 自動化
      summary: 更新自動化腳本
      operationId: updateAutomationScript
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAutomationScriptRequest'
      responses:
        '200':
          description: 腳本已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationScriptDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 自動化
      summary: 刪除自動化腳本
      operationId: deleteAutomationScript
      responses:
        '204':
          description: 腳本已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /automation/scripts/{script_id}/execute:
    post:
      tags:
        - 自動化
      summary: 立即執行腳本
      operationId: executeAutomationScript
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteScriptRequest'
      responses:
        '202':
          description: 已排入腳本執行。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExecuteScriptResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /automation/scripts/{script_id}/versions:
    get:
      tags:
        - 自動化
      summary: 取得腳本版本列表
      operationId: listAutomationScriptVersions
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
      responses:
        '200':
          description: 回傳腳本版本。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AutomationScriptVersion'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /automation/schedules:
    get:
      tags:
        - 自動化
      summary: 取得排程列表
      operationId: listAutomationSchedules
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: status
          in: query
          schema:
            type: string
            enum: [enabled, disabled, running]
      responses:
        '200':
          description: 回傳排程列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AutomationScheduleSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 自動化
      summary: 建立排程
      operationId: createAutomationSchedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAutomationScheduleRequest'
      responses:
        '201':
          description: 排程建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationScheduleDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /automation/schedules/{schedule_id}:
    parameters:
      - name: schedule_id
        in: path
        required: true
        description: 排程唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 自動化
      summary: 取得排程詳情
      operationId: getAutomationScheduleById
      responses:
        '200':
          description: 排程詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationScheduleDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - 自動化
      summary: 更新排程設定
      operationId: updateAutomationSchedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAutomationScheduleRequest'
      responses:
        '200':
          description: 排程已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationScheduleDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 自動化
      summary: 刪除排程
      operationId: deleteAutomationSchedule
      responses:
        '204':
          description: 排程已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /automation/schedules/{schedule_id}/toggle:
    post:
      tags:
        - 自動化
      summary: 切換排程啟用狀態
      operationId: toggleAutomationSchedule
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ToggleScheduleRequest'
      responses:
        '200':
          description: 排程狀態已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationScheduleDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /automation/executions:
    get:
      tags:
        - 自動化
      summary: 取得執行日誌列表
      operationId: listAutomationExecutions
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, running, success, failed, cancelled]
        - name: script_id
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 回傳執行日誌。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AutomationExecutionSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /automation/executions/{execution_id}:
    parameters:
      - name: execution_id
        in: path
        required: true
        description: 執行記錄唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 自動化
      summary: 取得單筆執行詳情
      operationId: getAutomationExecutionById
      responses:
        '200':
          description: 執行詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecutionDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /automation/executions/{execution_id}/retry:
    post:
      tags:
        - 自動化
      summary: 重試執行紀錄
      operationId: retryAutomationExecution
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RetryExecutionRequest'
      responses:
        '202':
          description: 已排入重新執行。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutomationExecutionDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /iam/users:
    get:
      tags:
        - 身份與存取
      summary: 取得人員列表
      operationId: listIamUsers
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: status
          in: query
          schema:
            type: string
            enum: [active, disabled]
        - name: keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 回傳人員列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/IAMUserSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 身份與存取
      summary: 建立人員帳號
      operationId: createIamUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIAMUserRequest'
      responses:
        '201':
          description: 人員建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMUserDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /iam/users/{user_id}:
    parameters:
      - name: user_id
        in: path
        required: true
        description: 人員唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 身份與存取
      summary: 取得人員詳情
      operationId: getIamUserById
      responses:
        '200':
          description: 人員詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMUserDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - 身份與存取
      summary: 更新人員資訊與角色
      operationId: updateIamUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateIAMUserRequest'
      responses:
        '200':
          description: 人員資料已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IAMUserDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 身份與存取
      summary: 停用人員帳號
      operationId: deleteIamUser
      responses:
        '204':
          description: 人員已停用。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /iam/teams:
    get:
      tags:
        - 身份與存取
      summary: 取得團隊列表
      operationId: listIamTeams
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: keyword
          in: query
          schema:
            type: string
      responses:
        '200':
          description: 回傳團隊列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/TeamSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 身份與存取
      summary: 建立團隊
      operationId: createIamTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeamRequest'
      responses:
        '201':
          description: 團隊建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /iam/teams/{team_id}:
    parameters:
      - name: team_id
        in: path
        required: true
        description: 團隊唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 身份與存取
      summary: 取得團隊詳情
      operationId: getIamTeamById
      responses:
        '200':
          description: 團隊詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - 身份與存取
      summary: 更新團隊資訊
      operationId: updateIamTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTeamRequest'
      responses:
        '200':
          description: 團隊資料已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 身份與存取
      summary: 刪除團隊
      operationId: deleteIamTeam
      responses:
        '204':
          description: 團隊已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /iam/roles:
    get:
      tags:
        - 身份與存取
      summary: 取得角色列表
      operationId: listIamRoles
      responses:
        '200':
          description: 回傳角色列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RoleSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 身份與存取
      summary: 建立角色
      operationId: createIamRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRoleRequest'
      responses:
        '201':
          description: 角色建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /iam/roles/{role_id}:
    parameters:
      - name: role_id
        in: path
        required: true
        description: 角色唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 身份與存取
      summary: 取得角色詳情
      operationId: getIamRoleById
      responses:
        '200':
          description: 角色詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - 身份與存取
      summary: 更新角色與權限
      operationId: updateIamRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRoleRequest'
      responses:
        '200':
          description: 角色已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 身份與存取
      summary: 刪除角色
      operationId: deleteIamRole
      responses:
        '204':
          description: 角色已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /iam/audit-logs:
    get:
      tags:
        - 身份與存取
      summary: 取得審計日誌
      operationId: listAuditLogs
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: action
          in: query
          schema:
            type: string
        - name: start_time
          in: query
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: 回傳審計日誌列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/AuditLogEntry'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /notification/strategies:
    get:
      tags:
        - 通知管理
      summary: 取得通知策略列表
      operationId: listNotificationStrategies
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: status
          in: query
          schema:
            type: string
            enum: [enabled, disabled]
      responses:
        '200':
          description: 回傳通知策略列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/NotificationStrategySummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 通知管理
      summary: 建立通知策略
      operationId: createNotificationStrategy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationStrategyRequest'
      responses:
        '201':
          description: 通知策略建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStrategyDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /notification/strategies/{strategy_id}:
    parameters:
      - name: strategy_id
        in: path
        required: true
        description: 通知策略唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 通知管理
      summary: 取得通知策略詳情
      operationId: getNotificationStrategyById
      responses:
        '200':
          description: 通知策略詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStrategyDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - 通知管理
      summary: 更新通知策略
      operationId: updateNotificationStrategy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationStrategyRequest'
      responses:
        '200':
          description: 通知策略已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationStrategyDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 通知管理
      summary: 刪除通知策略
      operationId: deleteNotificationStrategy
      responses:
        '204':
          description: 通知策略已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /notification/strategies/{strategy_id}/test:
    post:
      tags:
        - 通知管理
      summary: 測試通知策略
      operationId: testNotificationStrategy
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestNotificationStrategyRequest'
      responses:
        '200':
          description: 測試結果摘要。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestNotificationResult'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /notification/channels:
    get:
      tags:
        - 通知管理
      summary: 取得通知管道列表
      operationId: listNotificationChannels
      responses:
        '200':
          description: 回傳通知管道列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationChannelSummary'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 通知管理
      summary: 建立通知管道
      operationId: createNotificationChannel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNotificationChannelRequest'
      responses:
        '201':
          description: 通知管道建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannelDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /notification/channels/{channel_id}:
    parameters:
      - name: channel_id
        in: path
        required: true
        description: 通知管道唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 通知管理
      summary: 取得通知管道詳情
      operationId: getNotificationChannelById
      responses:
        '200':
          description: 通知管道詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannelDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - 通知管理
      summary: 更新通知管道設定
      operationId: updateNotificationChannel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNotificationChannelRequest'
      responses:
        '200':
          description: 通知管道已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationChannelDetail'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 通知管理
      summary: 刪除通知管道
      operationId: deleteNotificationChannel
      responses:
        '204':
          description: 通知管道已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /notification/channels/{channel_id}/test:
    post:
      tags:
        - 通知管理
      summary: 測試通知管道
      operationId: testNotificationChannel
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestNotificationChannelRequest'
      responses:
        '200':
          description: 測試結果。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestNotificationResult'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /notification/history:
    get:
      tags:
        - 通知管理
      summary: 取得通知歷史
      operationId: listNotificationHistory
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - name: status
          in: query
          schema:
            type: string
            enum: [SUCCESS, FAILED, RETRYING]
      responses:
        '200':
          description: 回傳通知歷史列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/PaginatedResponse'
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/NotificationHistoryRecord'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /notification/history/{record_id}:
    parameters:
      - name: record_id
        in: path
        required: true
        description: 通知歷史記錄識別碼。
        schema:
          type: string
    get:
      tags:
        - 通知管理
      summary: 取得單筆通知歷史詳情
      operationId: getNotificationHistoryById
      responses:
        '200':
          description: 通知歷史詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationHistoryDetail'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
        - 通知管理
      summary: 重新發送指定通知記錄
      operationId: resendNotificationHistory
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationResendRequest'
      responses:
        '202':
          description: 已接受重新發送請求。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResendResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /notification/history/resend:
    post:
      tags:
        - 通知管理
      summary: 批量重新發送通知記錄
      operationId: bulkResendNotificationHistory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationBulkResendRequest'
      responses:
        '202':
          description: 已排入批次重新發送工作。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationBulkResendResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /settings/tags:
    get:
      tags:
        - 平台設定
      summary: 取得標籤類型列表
      operationId: listTagDefinitions
      responses:
        '200':
          description: 回傳標籤類型。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagDefinition'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 平台設定
      summary: 建立標籤類型
      operationId: createTagDefinition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagRequest'
      responses:
        '201':
          description: 標籤類型建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDefinition'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /settings/tags/{tag_id}:
    parameters:
      - name: tag_id
        in: path
        required: true
        description: 標籤類型識別碼。
        schema:
          type: string
    get:
      tags:
        - 平台設定
      summary: 取得標籤類型詳情
      operationId: getTagDefinitionById
      responses:
        '200':
          description: 標籤類型詳情。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDefinition'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    patch:
      tags:
        - 平台設定
      summary: 更新標籤類型
      operationId: updateTagDefinition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagRequest'
      responses:
        '200':
          description: 標籤類型已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagDefinition'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 平台設定
      summary: 刪除標籤類型
      operationId: deleteTagDefinition
      responses:
        '204':
          description: 標籤類型已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /settings/tags/{tag_id}/values:
    get:
      tags:
        - 平台設定
      summary: 取得標籤值列表
      operationId: listTagValues
      responses:
        '200':
          description: 回傳標籤值列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagValue'
        '401':
          $ref: '#/components/responses/Unauthorized'
    post:
      tags:
        - 平台設定
      summary: 新增標籤值
      operationId: createTagValue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTagValueRequest'
      responses:
        '201':
          description: 標籤值建立成功。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagValue'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /settings/tags/{tag_id}/values/{value_id}:
    parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: string
      - name: value_id
        in: path
        required: true
        schema:
          type: string
    patch:
      tags:
        - 平台設定
      summary: 更新標籤值
      operationId: updateTagValue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTagValueRequest'
      responses:
        '200':
          description: 標籤值已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagValue'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - 平台設定
      summary: 刪除標籤值
      operationId: deleteTagValue
      responses:
        '204':
          description: 標籤值已刪除。
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
  /settings/tags/summary:
    get:
      tags:
        - 平台設定
      summary: 取得標籤治理摘要
      operationId: getTagSummary
      responses:
        '200':
          description: 回傳標籤分類與使用統計摘要。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagSummaryResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /settings/email:
    get:
      tags:
        - 平台設定
      summary: 取得郵件設定
      operationId: getEmailSettings
      responses:
        '200':
          description: 郵件設定資料。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSettings'
        '401':
          $ref: '#/components/responses/Unauthorized'
    put:
      tags:
        - 平台設定
      summary: 更新郵件設定
      operationId: updateEmailSettings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailSettingsRequest'
      responses:
        '200':
          description: 郵件設定已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailSettings'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /settings/email/test:
    post:
      tags:
        - 平台設定
      summary: 測試郵件設定連線
      operationId: testEmailSettings
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailTestRequest'
      responses:
        '200':
          description: 測試結果。可同步回傳詳細測試資訊。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTestResult'
        '202':
          description: 測試請求已排入佇列。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTestResult'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /settings/auth:
    get:
      tags:
        - 平台設定
      summary: 取得身份驗證設定
      operationId: getAuthSettings
      responses:
        '200':
          description: 身份驗證設定資料。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSettings'
        '401':
          $ref: '#/components/responses/Unauthorized'
    put:
      tags:
        - 平台設定
      summary: 更新身份驗證設定
      operationId: updateAuthSettings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthSettingsRequest'
      responses:
        '200':
          description: 身份驗證設定已更新。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthSettings'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /tags/keys:
    get:
      tags:
        - 標籤服務
      summary: 取得可用的標籤鍵清單
      operationId: listTagKeys
      parameters:
        - name: category
          in: query
          required: false
          schema:
            type: string
          description: 依分類過濾標籤鍵。
        - name: keyword
          in: query
          required: false
          schema:
            type: string
          description: 關鍵字搜尋標籤鍵或描述。
      responses:
        '200':
          description: 標籤鍵列表。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagKeyListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
  /tags/{tag_key}/values:
    parameters:
      - name: tag_key
        in: path
        required: true
        description: 標籤鍵名稱。
        schema:
          type: string
    get:
      tags:
        - 標籤服務
      summary: 取得指定標籤鍵的常用值
      operationId: listTagValuesByKey
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 200
          description: 限制返回的標籤值數量，預設為 50。
      responses:
        '200':
          description: 標籤值列表。
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagValueListResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  parameters:
    PageParam:
      name: page
      in: query
      description: 分頁頁碼 (從 1 開始)。
      schema:
        type: integer
        minimum: 1
        default: 1
    PageSizeParam:
      name: page_size
      in: query
      description: 每頁資料筆數。
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    SortByParam:
      name: sort_by
      in: query
      description: 排序欄位名稱。
      schema:
        type: string
    SortOrderParam:
      name: sort_order
      in: query
      description: 排序方向。
      schema:
        type: string
        enum: [asc, desc]
  responses:
    BadRequest:
      description: 請求資料不正確。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: 尚未登入或登入已逾期。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Forbidden:
      description: 權限不足。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: 查無資料。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Conflict:
      description: 資料狀態衝突或重複。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    InternalError:
      description: 伺服器發生未預期錯誤。
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          description: 錯誤代碼。
        message:
          type: string
          description: 錯誤說明。
        details:
          type: object
          additionalProperties: true
          description: 其他錯誤細節。
    PaginatedResponse:
      type: object
      required: [page, page_size, total, items]
      properties:
        page:
          type: integer
        page_size:
          type: integer
        total:
          type: integer
        items:
          type: array
          items:
            description: 依實際回傳結構定義。
    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    RefreshRequest:
      type: object
      required: [refresh_token]
      properties:
        refresh_token:
          type: string
    TokenResponse:
      type: object
      required: [access_token, refresh_token, expires_in]
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
          default: Bearer
        expires_in:
          type: integer
          description: 存取令牌有效秒數。
    UserProfile:
      type: object
      required: [user_id, username, display_name, email, roles]
      properties:
        user_id:
          type: string
        username:
          type: string
        display_name:
          type: string
        email:
          type: string
          format: email
        roles:
          type: array
          items:
            type: string
        teams:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [active, disabled]
        last_login_at:
          type: string
          format: date-time
        avatar_url:
          type: string
          nullable: true
    UserPreference:
      type: object
      required: [theme, default_page, language, timezone]
      properties:
        theme:
          type: string
          enum: [light, dark, auto]
        default_page:
          type: string
          enum: [war_room, incidents, resources, dashboards]
        language:
          type: string
        timezone:
          type: string
        notification_preferences:
          type: object
          properties:
            email_notification:
              type: boolean
            slack_notification:
              type: boolean
            merge_notification:
              type: boolean
        display_options:
          type: object
          properties:
            animation:
              type: boolean
            tooltips:
              type: boolean
            compact_mode:
              type: boolean
    PreferenceUpdateRequest:
      allOf:
        - $ref: '#/components/schemas/UserPreference'
    SecurityLoginRecord:
      type: object
      required: [login_time, ip_address, device_info, status]
      properties:
        login_time:
          type: string
          format: date-time
        ip_address:
          type: string
        device_info:
          type: string
        status:
          type: string
          enum: [success, failed]
        location:
          type: string
          nullable: true
    GlobalSearchGroup:
      type: object
      required: [type, label, results]
      properties:
        type:
          type: string
          description: 搜尋類型識別，例如 event、resource。
        label:
          type: string
          description: 類型顯示名稱。
        results:
          type: array
          items:
            $ref: '#/components/schemas/GlobalSearchResult'
    GlobalSearchResult:
      type: object
      required: [id, title, url]
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        url:
          type: string
        icon:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
    NotificationSummary:
      type: object
      required: [total, unread, by_severity]
      properties:
        total:
          type: integer
        unread:
          type: integer
        by_severity:
          type: object
          additionalProperties:
            type: integer
        last_updated_at:
          type: string
          format: date-time
    NotificationItem:
      type: object
      required: [notification_id, title, severity, status, created_at]
      properties:
        notification_id:
          type: string
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, warning, info, success]
        category:
          type: string
        status:
          type: string
          enum: [unread, read]
        created_at:
          type: string
          format: date-time
        read_at:
          type: string
          format: date-time
          nullable: true
        link_url:
          type: string
          nullable: true
        actions:
          type: array
          items:
            type: string
    MarkNotificationReadRequest:
      type: object
      properties:
        read_at:
          type: string
          format: date-time
        action:
          type: string
          description: 執行的快速操作名稱。
    EventSummaryMetrics:
      type: object
      required: [active_events, resolved_today, mean_time_to_resolve, automation_rate]
      properties:
        active_events:
          type: object
          properties:
            total:
              type: integer
            critical:
              type: integer
            acknowledged:
              type: integer
        resolved_today:
          type: object
          properties:
            total:
              type: integer
            automated:
              type: integer
            trend:
              type: number
        mean_time_to_resolve:
          type: object
          properties:
            hours:
              type: number
            trend:
              type: number
        automation_rate:
          type: object
          properties:
            percentage:
              type: number
            automated_count:
              type: integer
    EventSummary:
      type: object
      required: [event_id, summary, severity, status, resource_name, trigger_time]
      properties:
        event_id:
          type: string
        event_key:
          type: string
          nullable: true
        summary:
          type: string
        source:
          type: string
          description: 事件來源，例如監控系統名稱。
          nullable: true
        description:
          type: string
        severity:
          type: string
          enum: [critical, warning, info]
        status:
          type: string
          enum: [new, acknowledged, in_progress, resolved, silenced]
        resource_id:
          type: string
          nullable: true
        resource_name:
          type: string
        service_impact:
          type: string
        rule_name:
          type: string
        trigger_threshold:
          type: string
        assignee:
          type: string
          nullable: true
        trigger_time:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
    CreateEventRequest:
      type: object
      required: [summary, severity, status, trigger_time]
      properties:
        summary:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, warning, info]
        status:
          type: string
          enum: [new, acknowledged, in_progress, resolved, silenced]
        resource_id:
          type: string
        rule_id:
          type: string
        service_impact:
          type: string
        trigger_threshold:
          type: string
        trigger_value:
          type: string
        trigger_time:
          type: string
          format: date-time
        assignee_id:
          type: string
        metadata:
          type: object
          additionalProperties: true
    UpdateEventRequest:
      type: object
      properties:
        status:
          type: string
          enum: [new, acknowledged, in_progress, resolved, silenced]
        assignee_id:
          type: string
        acknowledged_at:
          type: string
          format: date-time
        resolved_at:
          type: string
          format: date-time
        notes:
          type: string
        tags:
          type: array
          items:
            type: string
    EventDetail:
      allOf:
        - $ref: '#/components/schemas/EventSummary'
        - type: object
          properties:
            metric:
              type: string
            trigger_value:
              type: string
            unit:
              type: string
            acknowledged_at:
              type: string
              format: date-time
              nullable: true
            resolved_at:
              type: string
              format: date-time
              nullable: true
            timeline:
              type: array
              items:
                $ref: '#/components/schemas/EventTimelineEntry'
            related_events:
              type: array
              items:
                $ref: '#/components/schemas/EventRelatedItem'
            automation_actions:
              type: array
              items:
                type: string
            analysis:
              $ref: '#/components/schemas/EventAnalysisReport'
    EventTimelineEntry:
      type: object
      required: [entry_id, event_id, entry_type, message, created_at]
      properties:
        entry_id:
          type: string
        event_id:
          type: string
        entry_type:
          type: string
          enum: [status_change, note, automation, notification]
        message:
          type: string
        created_by:
          type: string
        created_at:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties: true
    EventRelatedItem:
      type: object
      required: [event_id, relationship, summary]
      properties:
        event_id:
          type: string
        relationship:
          type: string
        summary:
          type: string
        severity:
          type: string
          enum: [critical, warning, info]
        status:
          type: string
          enum: [new, acknowledged, in_progress, resolved, silenced]
        trigger_time:
          type: string
          format: date-time
    AcknowledgeEventRequest:
      type: object
      properties:
        assignee_id:
          type: string
        note:
          type: string
    EventAnalysisReport:
      type: object
      required: [event_id, generated_at, root_cause, confidence]
      properties:
        event_id:
          type: string
        generated_at:
          type: string
          format: date-time
        summary:
          type: string
        root_cause:
          type: string
        confidence:
          type: number
        impact_analysis:
          type: string
        recommendations:
          type: array
          items:
            $ref: '#/components/schemas/AIInsightSuggestion'
    QuickSilenceRequest:
      type: object
      required: [duration_hours]
      properties:
        duration_hours:
          type: integer
          enum: [1, 2, 4, 8, 12, 24]
        reason:
          type: string
        notify_on_end:
          type: boolean
    EventRuleSummary:
      type: object
      required: [rule_id, name, severity, enabled]
      properties:
        rule_id:
          type: string
        name:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, warning, info]
        enabled:
          type: boolean
        automation_enabled:
          type: boolean
        creator:
          type: string
        last_updated:
          type: string
          format: date-time
    RuleCondition:
      type: object
      required: [metric, operator, threshold]
      properties:
        metric:
          type: string
        operator:
          type: string
          enum: ['>', '<', '>=', '<=']
        threshold:
          type: number
        duration_minutes:
          type: integer
        severity:
          type: string
          enum: [critical, warning, info]
    ConditionGroup:
      type: object
      required: [logic, conditions]
      properties:
        logic:
          type: string
          enum: [AND, OR]
        conditions:
          type: array
          items:
            $ref: '#/components/schemas/RuleCondition'
    AutomationSetting:
      type: object
      properties:
        enabled:
          type: boolean
        script_id:
          type: string
        parameters:
          type: object
          additionalProperties: true
    EventRuleDetail:
      allOf:
        - $ref: '#/components/schemas/EventRuleSummary'
        - type: object
          properties:
            description:
              type: string
            labels:
              type: array
              items:
                type: string
            environments:
              type: array
              items:
                type: string
            condition_groups:
              type: array
              items:
                $ref: '#/components/schemas/ConditionGroup'
            title_template:
              type: string
            content_template:
              type: string
            automation:
              $ref: '#/components/schemas/AutomationSetting'
    CreateEventRuleRequest:
      allOf:
        - $ref: '#/components/schemas/EventRuleDetail'
    UpdateEventRuleRequest:
      allOf:
        - $ref: '#/components/schemas/EventRuleDetail'
    TestEventRuleRequest:
      type: object
      properties:
        sample_payload:
          type: object
          additionalProperties: true
    TestEventRuleResponse:
      type: object
      required: [matches, preview_event]
      properties:
        matches:
          type: boolean
        preview_event:
          $ref: '#/components/schemas/EventSummary'
        messages:
          type: array
          items:
            type: string
    SilenceMatcher:
      type: object
      required: [key, value]
      properties:
        key:
          type: string
        operator:
          type: string
          enum: [equals, regex]
        value:
          type: string
    SilenceSchedule:
      type: object
      properties:
        silence_type:
          type: string
          enum: [single, repeat, condition]
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        timezone:
          type: string
        repeat:
          type: object
          properties:
            frequency:
              type: string
              enum: [daily, weekly, monthly]
            days:
              type: array
              items:
                type: string
            until:
              type: string
              format: date-time
            occurrences:
              type: integer
    SilenceRuleSummary:
      type: object
      required: [silence_id, name, silence_type, enabled]
      properties:
        silence_id:
          type: string
        name:
          type: string
        description:
          type: string
        silence_type:
          type: string
          enum: [single, repeat, condition]
        scope:
          type: string
          enum: [global, resource, team, tag]
        enabled:
          type: boolean
        created_at:
          type: string
          format: date-time
    SilenceRuleDetail:
      allOf:
        - $ref: '#/components/schemas/SilenceRuleSummary'
        - type: object
          properties:
            schedule:
              $ref: '#/components/schemas/SilenceSchedule'
            matchers:
              type: array
              items:
                $ref: '#/components/schemas/SilenceMatcher'
            notify_on_start:
              type: boolean
            notify_on_end:
              type: boolean
            created_by:
              type: string
    CreateSilenceRuleRequest:
      allOf:
        - $ref: '#/components/schemas/SilenceRuleDetail'
    UpdateSilenceRuleRequest:
      allOf:
        - $ref: '#/components/schemas/SilenceRuleDetail'
    ResourceSummaryMetrics:
      type: object
      required: [total_resources, healthy, warning, critical, groups]
      properties:
        total_resources:
          type: integer
        healthy:
          type: integer
        warning:
          type: integer
        critical:
          type: integer
        groups:
          type: integer
    ResourceSummary:
      type: object
      required: [resource_id, name, status, type, ip_address, cpu_usage, memory_usage]
      properties:
        resource_id:
          type: string
        name:
          type: string
        status:
          type: string
          enum: [healthy, warning, critical, offline]
        type:
          type: string
          enum: [server, database, cache, gateway, service]
        ip_address:
          type: string
        location:
          type: string
        environment:
          type: string
        team:
          type: string
        os:
          type: string
        cpu_usage:
          type: number
        memory_usage:
          type: number
        disk_usage:
          type: number
        network_in_mbps:
          type: number
        network_out_mbps:
          type: number
        tags:
          type: array
          items:
            type: string
        last_event_count:
          type: integer
    CreateResourceRequest:
      type: object
      required: [name, status, type, ip_address]
      properties:
        name:
          type: string
        status:
          type: string
          enum: [healthy, warning, critical, offline]
        type:
          type: string
          enum: [server, database, cache, gateway, service]
        ip_address:
          type: string
        location:
          type: string
        environment:
          type: string
        team:
          type: string
        os:
          type: string
        labels:
          type: array
          items:
            type: string
    UpdateResourceRequest:
      allOf:
        - $ref: '#/components/schemas/CreateResourceRequest'
    ResourceMetric:
      type: object
      required: [metric, points]
      properties:
        metric:
          type: string
        unit:
          type: string
        points:
          type: array
          items:
            $ref: '#/components/schemas/CapacitySeriesPoint'
    ResourceDetail:
      allOf:
        - $ref: '#/components/schemas/ResourceSummary'
        - type: object
          properties:
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            groups:
              type: array
              items:
                type: string
            labels:
              type: array
              items:
                type: string
            notes:
              type: string
    ResourceGroupSummary:
      type: object
      required: [group_id, name, member_count, subscriber_count]
      properties:
        group_id:
          type: string
        name:
          type: string
        description:
          type: string
        owner_team:
          type: string
        member_count:
          type: integer
        subscriber_count:
          type: integer
        status_summary:
          type: object
          additionalProperties:
            type: integer
        created_at:
          type: string
          format: date-time
    ResourceGroupMember:
      type: object
      required: [resource_id, name, type]
      properties:
        resource_id:
          type: string
        name:
          type: string
        type:
          type: string
        status:
          type: string
    ResourceGroupSubscriber:
      type: object
      required: [user_id, display_name]
      properties:
        user_id:
          type: string
        display_name:
          type: string
        subscribed_at:
          type: string
          format: date-time
    CreateResourceGroupRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
        description:
          type: string
        owner_team:
          type: string
        resource_ids:
          type: array
          items:
            type: string
        subscriber_ids:
          type: array
          items:
            type: string
    UpdateResourceGroupRequest:
      allOf:
        - $ref: '#/components/schemas/CreateResourceGroupRequest'
    ResourceGroupDetail:
      allOf:
        - $ref: '#/components/schemas/ResourceGroupSummary'
        - type: object
          properties:
            members:
              type: array
              items:
                $ref: '#/components/schemas/ResourceGroupMember'
            subscribers:
              type: array
              items:
                $ref: '#/components/schemas/ResourceGroupSubscriber'
    TopologyNode:
      type: object
      required: [id, name, type, status]
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        status:
          type: string
          enum: [healthy, warning, critical, offline]
        icon:
          type: string
        metrics:
          type: object
          additionalProperties: true
    TopologyEdge:
      type: object
      required: [source, target]
      properties:
        source:
          type: string
        target:
          type: string
        relation:
          type: string
        traffic_level:
          type: number
    TopologyGraph:
      type: object
      required: [nodes, edges]
      properties:
        nodes:
          type: array
          items:
            $ref: '#/components/schemas/TopologyNode'
        edges:
          type: array
          items:
            $ref: '#/components/schemas/TopologyEdge'
    DashboardSummary:
      type: object
      required: [dashboard_id, name, category, owner, status, updated_at]
      properties:
        dashboard_id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
        owner:
          type: string
        tags:
          type: array
          items:
            type: string
        data_sources:
          type: array
          items:
            type: string
        viewer_count:
          type: integer
        favorite_count:
          type: integer
        panel_count:
          type: integer
        status:
          type: string
          enum: [draft, published]
        is_default:
          type: boolean
        is_featured:
          type: boolean
        target_page_key:
          type: string
        updated_at:
          type: string
          format: date-time
    DashboardKPI:
      type: object
      required: [label, value]
      properties:
        label:
          type: string
        value:
          type: string
        trend:
          type: number
          nullable: true
    DashboardWidget:
      type: object
      required: [widget_id, type, title]
      properties:
        widget_id:
          type: string
        type:
          type: string
        title:
          type: string
        config:
          type: object
          additionalProperties: true
        position:
          type: object
          properties:
            x:
              type: integer
            y:
              type: integer
            w:
              type: integer
            h:
              type: integer
    CreateDashboardRequest:
      type: object
      required: [name, category]
      properties:
        name:
          type: string
        category:
          type: string
        description:
          type: string
        owner_id:
          type: string
        tags:
          type: array
          items:
            type: string
        data_sources:
          type: array
          items:
            type: string
        target_page_key:
          type: string
        layout:
          type: array
          items:
            $ref: '#/components/schemas/DashboardWidget'
        kpis:
          type: array
          items:
            $ref: '#/components/schemas/DashboardKPI'
    UpdateDashboardRequest:
      allOf:
        - $ref: '#/components/schemas/CreateDashboardRequest'
        - type: object
          properties:
            is_default:
              type: boolean
            status:
              type: string
              enum: [draft, published]
    DashboardDetail:
      allOf:
        - $ref: '#/components/schemas/DashboardSummary'
        - type: object
          properties:
            description:
              type: string
            owner_id:
              type: string
            layout:
              type: array
              items:
                $ref: '#/components/schemas/DashboardWidget'
            kpis:
              type: array
              items:
                $ref: '#/components/schemas/DashboardKPI'
            is_default:
              type: boolean
            published_at:
              type: string
              format: date-time
              nullable: true
    CapacitySummary:
      type: object
      required: [total_datapoints, reports, processing_time, accuracy]
      properties:
        total_datapoints:
          type: integer
        reports:
          type: integer
        processing_time:
          type: number
        accuracy:
          type: number
    CapacitySeriesPoint:
      type: object
      required: [timestamp, value]
      properties:
        timestamp:
          type: string
          format: date-time
        value:
          type: number
    CapacityForecast:
      type: object
      required: [metric, current_usage, forecast_usage, series]
      properties:
        metric:
          type: string
        current_usage:
          type: number
        forecast_usage:
          type: number
        series:
          type: array
          items:
            $ref: '#/components/schemas/CapacitySeriesPoint'
        best_case:
          type: array
          items:
            $ref: '#/components/schemas/CapacitySeriesPoint'
        worst_case:
          type: array
          items:
            $ref: '#/components/schemas/CapacitySeriesPoint'
    OptimizationSuggestion:
      type: object
      required: [title, impact, effort]
      properties:
        title:
          type: string
        description:
          type: string
        impact:
          type: string
        effort:
          type: string
        cost_saving:
          type: number
    ResourceLoadSummary:
      type: object
      required: [avg_cpu, avg_memory, avg_disk, avg_network]
      properties:
        avg_cpu:
          type: number
        avg_memory:
          type: number
        avg_disk:
          type: number
        avg_network:
          type: number
        anomalies_detected:
          type: integer
    ResourceLoadRow:
      type: object
      required: [resource_id, resource_name, avg_cpu, avg_memory]
      properties:
        resource_id:
          type: string
        resource_name:
          type: string
        avg_cpu:
          type: number
        avg_memory:
          type: number
        disk_read:
          type: number
        disk_write:
          type: number
        net_in:
          type: number
        net_out:
          type: number
        anomaly_count:
          type: integer
    AIInsightSuggestion:
      type: object
      required: [title, priority]
      properties:
        title:
          type: string
        priority:
          type: string
          enum: [high, medium, low]
        description:
          type: string
        action_url:
          type: string
          nullable: true
    AIInsightReport:
      type: object
      required: [report_id, generated_at, predicted_events, accuracy]
      properties:
        report_id:
          type: string
        generated_at:
          type: string
          format: date-time
        analysis_type:
          type: string
        predicted_events:
          type: integer
        accuracy:
          type: number
        impact_range:
          type: string
        summary:
          type: string
        suggestions:
          type: array
          items:
            $ref: '#/components/schemas/AIInsightSuggestion'
    AutomationScriptSummary:
      type: object
      required: [script_id, name, type, version]
      properties:
        script_id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [shell, python, ansible, terraform]
        description:
          type: string
        version:
          type: string
        last_execution_status:
          type: string
          enum: [success, failed, running, never]
        updated_at:
          type: string
          format: date-time
    CreateAutomationScriptRequest:
      type: object
      required: [name, type, content]
      properties:
        name:
          type: string
        type:
          type: string
          enum: [shell, python, ansible, terraform]
        description:
          type: string
        content:
          type: string
        tags:
          type: array
          items:
            type: string
    UpdateAutomationScriptRequest:
      allOf:
        - $ref: '#/components/schemas/CreateAutomationScriptRequest'
        - type: object
          properties:
            version:
              type: string
    AutomationScriptVersion:
      type: object
      required: [version_id, version, created_at]
      properties:
        version_id:
          type: string
        version:
          type: string
        created_at:
          type: string
          format: date-time
        created_by:
          type: string
        changelog:
          type: string
    AutomationScriptDetail:
      allOf:
        - $ref: '#/components/schemas/AutomationScriptSummary'
        - type: object
          properties:
            content:
              type: string
            tags:
              type: array
              items:
                type: string
            versions:
              type: array
              items:
                $ref: '#/components/schemas/AutomationScriptVersion'
    ExecuteScriptRequest:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties: true
        trigger_source:
          type: string
          enum: [manual, event_rule, schedule]
    ExecuteScriptResponse:
      type: object
      required: [execution_id, status]
      properties:
        execution_id:
          type: string
        status:
          type: string
          enum: [pending, running]
        queued_at:
          type: string
          format: date-time
    AutomationScheduleSummary:
      type: object
      required: [schedule_id, name, status, next_run_time]
      properties:
        schedule_id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [one_time, recurring]
        status:
          type: string
          enum: [enabled, disabled, running]
        cron_expression:
          type: string
        next_run_time:
          type: string
          format: date-time
        script_id:
          type: string
        script_name:
          type: string
    CreateAutomationScheduleRequest:
      type: object
      required: [name, script_id, type]
      properties:
        name:
          type: string
        script_id:
          type: string
        type:
          type: string
          enum: [one_time, recurring]
        cron_expression:
          type: string
        timezone:
          type: string
        concurrency_policy:
          type: string
          enum: [allow, forbid]
        retry_policy:
          type: object
          properties:
            max_retries:
              type: integer
            interval_seconds:
              type: integer
        notify_on_success:
          type: boolean
        notify_on_failure:
          type: boolean
        channels:
          type: array
          items:
            type: string
    UpdateAutomationScheduleRequest:
      allOf:
        - $ref: '#/components/schemas/CreateAutomationScheduleRequest'
    AutomationScheduleDetail:
      allOf:
        - $ref: '#/components/schemas/AutomationScheduleSummary'
        - type: object
          properties:
            timezone:
              type: string
            concurrency_policy:
              type: string
            retry_policy:
              type: object
              properties:
                max_retries:
                  type: integer
                interval_seconds:
                  type: integer
            notify_on_success:
              type: boolean
            notify_on_failure:
              type: boolean
            channels:
              type: array
              items:
                type: string
            last_run_time:
              type: string
              format: date-time
              nullable: true
    ToggleScheduleRequest:
      type: object
      properties:
        enabled:
          type: boolean
    AutomationExecutionSummary:
      type: object
      required: [execution_id, script_name, status, start_time]
      properties:
        execution_id:
          type: string
        script_id:
          type: string
        script_name:
          type: string
        status:
          type: string
          enum: [pending, running, success, failed, cancelled]
        trigger_source:
          type: string
        start_time:
          type: string
          format: date-time
        duration_ms:
          type: integer
    AutomationExecutionDetail:
      allOf:
        - $ref: '#/components/schemas/AutomationExecutionSummary'
        - type: object
          properties:
            end_time:
              type: string
              format: date-time
              nullable: true
            parameters:
              type: object
              additionalProperties: true
            stdout:
              type: string
            stderr:
              type: string
            error_message:
              type: string
            related_event_ids:
              type: array
              items:
                type: string
            attempt_count:
              type: integer
    RetryExecutionRequest:
      type: object
      properties:
        force:
          type: boolean
    IAMUserSummary:
      type: object
      required: [user_id, username, name, email, status]
      properties:
        user_id:
          type: string
        username:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        status:
          type: string
          enum: [active, disabled]
        teams:
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            type: string
        last_login:
          type: string
          format: date-time
    CreateIAMUserRequest:
      type: object
      required: [username, name, email]
      properties:
        username:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        team_ids:
          type: array
          items:
            type: string
        role_ids:
          type: array
          items:
            type: string
    UpdateIAMUserRequest:
      allOf:
        - $ref: '#/components/schemas/CreateIAMUserRequest'
        - type: object
          properties:
            status:
              type: string
              enum: [active, disabled]
    IAMUserDetail:
      allOf:
        - $ref: '#/components/schemas/IAMUserSummary'
        - type: object
          properties:
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    TeamSummary:
      type: object
      required: [team_id, name]
      properties:
        team_id:
          type: string
        name:
          type: string
        description:
          type: string
        owner:
          type: string
        members:
          type: array
          description: 成員識別碼列表。
          items:
            type: string
        subscribers:
          type: array
          description: 訂閱者識別碼列表 (可包含人員與外部管道)。
          items:
            type: string
        created_at:
          type: string
          format: date-time
    CreateTeamRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
        description:
          type: string
        owner_id:
          type: string
        member_ids:
          type: array
          items:
            type: string
        subscriber_ids:
          type: array
          items:
            type: string
        subscribers:
          type: array
          items:
            $ref: '#/components/schemas/TeamSubscriberInput'
    UpdateTeamRequest:
      allOf:
        - $ref: '#/components/schemas/CreateTeamRequest'
    TeamDetail:
      allOf:
        - $ref: '#/components/schemas/TeamSummary'
        - type: object
          properties:
            member_ids:
              type: array
              items:
                type: string
            subscriber_ids:
              type: array
              items:
                type: string
            subscribers:
              type: array
              items:
                $ref: '#/components/schemas/TeamSubscriber'
    TeamSubscriberInput:
      type: object
      required: [subscriber_id, subscriber_type]
      properties:
        subscriber_id:
          type: string
        subscriber_type:
          type: string
          enum: [USER, SLACK_CHANNEL, EMAIL_GROUP, ON_CALL_SCHEDULE]
    TeamSubscriber:
      allOf:
        - $ref: '#/components/schemas/TeamSubscriberInput'
        - type: object
          properties:
            display_name:
              type: string
    RolePermission:
      type: object
      required: [module, actions]
      properties:
        module:
          type: string
        actions:
          type: array
          items:
            type: string
    RoleSummary:
      type: object
      required: [role_id, name, status]
      properties:
        role_id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [active, inactive]
        user_count:
          type: integer
        created_at:
          type: string
          format: date-time
    CreateRoleRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            $ref: '#/components/schemas/RolePermission'
    UpdateRoleRequest:
      allOf:
        - $ref: '#/components/schemas/CreateRoleRequest'
        - type: object
          properties:
            status:
              type: string
              enum: [active, inactive]
    RoleDetail:
      allOf:
        - $ref: '#/components/schemas/RoleSummary'
        - type: object
          properties:
            permissions:
              type: array
              items:
                $ref: '#/components/schemas/RolePermission'
            updated_at:
              type: string
              format: date-time
    AuditLogEntry:
      type: object
      required: [log_id, time, user, action, result]
      properties:
        log_id:
          type: string
        time:
          type: string
          format: date-time
        user:
          type: string
        action:
          type: string
        target_type:
          type: string
        target_id:
          type: string
        result:
          type: string
          enum: [success, failure]
        ip:
          type: string
        details:
          type: object
          additionalProperties: true
    NotificationRecipient:
      type: object
      required: [type, id]
      properties:
        type:
          type: string
          enum: [user, team, role]
        id:
          type: string
    NotificationChannelRef:
      type: object
      required: [channel_id, channel_type]
      properties:
        channel_id:
          type: string
        channel_type:
          type: string
          enum: [Email, Slack, PagerDuty, Webhook, Teams, 'LINE Notify', SMS]
        template:
          type: string
    NotificationStrategySummary:
      type: object
      required: [strategy_id, name, status]
      properties:
        strategy_id:
          type: string
        name:
          type: string
        trigger_condition:
          type: string
        channel_count:
          type: integer
        status:
          type: string
          enum: [enabled, disabled]
        priority:
          type: string
          enum: [high, medium, low]
    CreateNotificationStrategyRequest:
      type: object
      required: [name, trigger_condition]
      properties:
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        priority:
          type: string
          enum: [high, medium, low]
        trigger_condition:
          type: string
        severity_filters:
          type: array
          items:
            type: string
        recipients:
          type: array
          items:
            $ref: '#/components/schemas/NotificationRecipient'
        channels:
          type: array
          items:
            $ref: '#/components/schemas/NotificationChannelRef'
        resource_filters:
          type: object
          additionalProperties: true
    UpdateNotificationStrategyRequest:
      allOf:
        - $ref: '#/components/schemas/CreateNotificationStrategyRequest'
    NotificationStrategyDetail:
      allOf:
        - $ref: '#/components/schemas/NotificationStrategySummary'
        - type: object
          properties:
            description:
              type: string
            recipients:
              type: array
              items:
                $ref: '#/components/schemas/NotificationRecipient'
            channels:
              type: array
              items:
                $ref: '#/components/schemas/NotificationChannelRef'
            resource_filters:
              type: object
              additionalProperties: true
    TestNotificationStrategyRequest:
      type: object
      properties:
        test_recipient:
          type: string
        preview_payload:
          type: object
          additionalProperties: true
    TestNotificationResult:
      type: object
      required: [status, message]
      properties:
        status:
          type: string
          enum: [success, failed]
        message:
          type: string
        details:
          type: object
          additionalProperties: true
    NotificationChannelSummary:
      type: object
      required: [channel_id, name, type, enabled]
      properties:
        channel_id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [Email, Slack, PagerDuty, Webhook, Teams, 'LINE Notify', SMS]
        enabled:
          type: boolean
        status:
          type: string
          enum: [active, degraded, disabled]
          description: 若需要停用請改用 enabled 欄位設定為 false。
        template_key:
          type: string
        last_test_result:
          type: string
          enum: [success, failed, pending]
        last_test_message:
          type: string
        last_tested_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
    CreateNotificationChannelRequest:
      type: object
      required: [name, type]
      properties:
        name:
          type: string
        type:
          type: string
          enum: [Email, Slack, PagerDuty, Webhook, Teams, 'LINE Notify', SMS]
        description:
          type: string
        enabled:
          type: boolean
          default: true
        template_key:
          type: string
        config:
          type: object
          additionalProperties: true
    UpdateNotificationChannelRequest:
      allOf:
        - $ref: '#/components/schemas/CreateNotificationChannelRequest'
        - type: object
          properties:
            status:
              type: string
              enum: [active, degraded, disabled]
            last_test_result:
              type: string
              enum: [success, failed, pending]
            last_test_message:
              type: string
            last_tested_at:
              type: string
              format: date-time
              nullable: true
    NotificationChannelDetail:
      allOf:
        - $ref: '#/components/schemas/NotificationChannelSummary'
        - type: object
          properties:
            description:
              type: string
            config:
              type: object
              additionalProperties: true
    TestNotificationChannelRequest:
      type: object
      properties:
        test_recipient:
          type: string
        payload:
          type: object
          additionalProperties: true
    NotificationHistoryRecord:
      type: object
      required: [record_id, sent_at, status, channel_type, channel_label, strategy_name]
      properties:
        record_id:
          type: string
        sent_at:
          type: string
          format: date-time
        status:
          type: string
          enum: [SUCCESS, FAILED, RETRYING, QUEUED]
        channel_type:
          type: string
          enum: [Email, Slack, PagerDuty, Webhook, Teams, 'LINE Notify', SMS]
        channel_label:
          type: string
        channel_id:
          type: string
        strategy_name:
          type: string
        strategy_id:
          type: string
        alert_title:
          type: string
        message:
          type: string
        error_message:
          type: string
        recipients:
          type: array
          items:
            type: string
        retry_count:
          type: integer
        duration_ms:
          type: integer
        resend_available:
          type: boolean
        resend_count:
          type: integer
        last_resend_at:
          type: string
          format: date-time
          nullable: true
        actor:
          type: string
    NotificationHistoryDetail:
      allOf:
        - $ref: '#/components/schemas/NotificationHistoryRecord'
        - type: object
          properties:
            raw_payload:
              type: object
              additionalProperties: true
            attempts:
              type: array
              items:
                type: object
                properties:
                  sent_at:
                    type: string
                    format: date-time
                  status:
                    type: string
                  response:
                    type: string
            error_message:
              type: string
            related_event_id:
              type: string
            metadata:
              type: object
              additionalProperties: true
            resend_jobs:
              type: array
              items:
                $ref: '#/components/schemas/NotificationResendJob'
    NotificationResendRequest:
      type: object
      properties:
        channel_id:
          type: string
          description: 指定重新發送時要使用的通知管道，若省略則使用原始管道。
        recipients:
          type: array
          items:
            type: string
          description: 覆寫原始通知的收件者清單。
        dry_run:
          type: boolean
          description: 若為 true，僅驗證設定不實際送出通知。
        note:
          type: string
          description: 重新發送原因或備註。
    NotificationResendResponse:
      type: object
      required: [record_id, status, enqueued_at]
      properties:
        record_id:
          type: string
        status:
          type: string
          enum: [queued, running, completed]
        enqueued_at:
          type: string
          format: date-time
        job_id:
          type: string
        message:
          type: string
    NotificationBulkResendRequest:
      type: object
      required: [record_ids]
      properties:
        record_ids:
          type: array
          items:
            type: string
          minItems: 1
        channel_id:
          type: string
        dry_run:
          type: boolean
        note:
          type: string
    NotificationBulkResendResponse:
      type: object
      required: [requested_count, accepted_count, rejected_count]
      properties:
        requested_count:
          type: integer
        accepted_count:
          type: integer
        rejected_count:
          type: integer
        rejected_records:
          type: array
          items:
            type: object
            properties:
              record_id:
                type: string
              reason:
                type: string
        batch_id:
          type: string
    NotificationResendJob:
      type: object
      required: [job_id, status, requested_at]
      properties:
        job_id:
          type: string
        status:
          type: string
          enum: [queued, running, completed, failed]
        requested_at:
          type: string
          format: date-time
        requested_by:
          type: string
        channel_id:
          type: string
        recipients:
          type: array
          items:
            type: string
        dry_run:
          type: boolean
        started_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        result_message:
          type: string
        error_message:
          type: string
    TagDefinition:
      type: object
      required: [tag_id, name, category]
      properties:
        tag_id:
          type: string
        name:
          type: string
        category:
          type: string
        required:
          type: boolean
        usage_count:
          type: integer
        values:
          type: array
          items:
            $ref: '#/components/schemas/TagValue'
    CreateTagRequest:
      type: object
      required: [name, category]
      properties:
        name:
          type: string
        category:
          type: string
        required:
          type: boolean
    UpdateTagRequest:
      allOf:
        - $ref: '#/components/schemas/CreateTagRequest'
    TagValue:
      type: object
      required: [value_id, value]
      properties:
        value_id:
          type: string
        value:
          type: string
        description:
          type: string
        is_default:
          type: boolean
        usage_count:
          type: integer
        last_synced_at:
          type: string
          format: date-time
          nullable: true
    CreateTagValueRequest:
      type: object
      required: [value]
      properties:
        value:
          type: string
        description:
          type: string
        is_default:
          type: boolean
    UpdateTagValueRequest:
      allOf:
        - $ref: '#/components/schemas/CreateTagValueRequest'
    TagSummaryResponse:
      type: object
      required: [updated_at, totals, categories]
      properties:
        updated_at:
          type: string
          format: date-time
        totals:
          type: object
          required: [total_keys, required_keys, optional_keys, total_values]
          properties:
            total_keys:
              type: integer
            required_keys:
              type: integer
            optional_keys:
              type: integer
            total_values:
              type: integer
        categories:
          type: array
          items:
            $ref: '#/components/schemas/TagKeySummary'
    TagKeySummary:
      type: object
      required: [category, total_keys, required_keys, optional_keys]
      properties:
        category:
          type: string
        total_keys:
          type: integer
        required_keys:
          type: integer
        optional_keys:
          type: integer
        total_values:
          type: integer
        last_updated_at:
          type: string
          format: date-time
          nullable: true
        top_keys:
          type: array
          items:
            $ref: '#/components/schemas/TagKeyHighlight'
    TagKeyHighlight:
      type: object
      required: [tag_key, usage_count]
      properties:
        tag_key:
          type: string
        description:
          type: string
        usage_count:
          type: integer
        required:
          type: boolean
    TagKeyListResponse:
      type: object
      required: [items, total]
      properties:
        total:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/TagKeyOption'
    TagKeyOption:
      type: object
      required: [tag_key]
      properties:
        tag_key:
          type: string
        display_name:
          type: string
        description:
          type: string
        categories:
          type: array
          items:
            type: string
        usage_count:
          type: integer
        required:
          type: boolean
        last_updated_at:
          type: string
          format: date-time
          nullable: true
    TagValueListResponse:
      type: object
      required: [tag_key, items]
      properties:
        tag_key:
          type: string
        total:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/TagValueOption'
    TagValueOption:
      type: object
      required: [value]
      properties:
        value:
          type: string
        description:
          type: string
        usage_count:
          type: integer
        is_default:
          type: boolean
        last_seen_at:
          type: string
          format: date-time
          nullable: true
    EmailSettings:
      type: object
      required: [smtp_host, smtp_port, sender_email, encryption]
      properties:
        smtp_host:
          type: string
        smtp_port:
          type: integer
        username:
          type: string
        sender_name:
          type: string
        sender_email:
          type: string
          format: email
        encryption:
          type: string
          enum: [none, tls, ssl]
        test_recipient:
          type: string
        is_enabled:
          type: boolean
        updated_at:
          type: string
          format: date-time
    EmailSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/EmailSettings'
    EmailTestRequest:
      type: object
      properties:
        recipient:
          type: string
          format: email
          description: 覆寫預設測試收件人。
        template_key:
          type: string
          description: 指定要使用的郵件模板代碼。
        variables:
          type: object
          additionalProperties: true
          description: 套用至郵件模板的變數資料。
        subject_override:
          type: string
        body_override:
          type: string
    EmailTestResult:
      type: object
      required: [status, executed_at]
      properties:
        status:
          type: string
          enum: [success, failed, queued]
        executed_at:
          type: string
          format: date-time
        duration_ms:
          type: integer
        recipient:
          type: string
          format: email
        message:
          type: string
        error:
          type: string
        logs:
          type: array
          items:
            type: string
        preview_url:
          type: string
    AuthSettings:
      type: object
      required: [provider, oidc_enabled, client_id, auth_url, token_url]
      properties:
        provider:
          type: string
        oidc_enabled:
          type: boolean
        realm:
          type: string
        client_id:
          type: string
        client_secret_hint:
          type: string
        auth_url:
          type: string
        token_url:
          type: string
        userinfo_url:
          type: string
        redirect_uri:
          type: string
        logout_url:
          type: string
        scopes:
          type: array
          items:
            type: string
        user_sync:
          type: boolean
        updated_at:
          type: string
          format: date-time
    AuthSettingsRequest:
      allOf:
        - $ref: '#/components/schemas/AuthSettings'
        - type: object
          properties:
            client_secret:
              type: string
              format: password
