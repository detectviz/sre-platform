openapi: 3.1.0
info:
  title: SRE 平台 API 契約
  version: 3.0.0
  description: |
    定義 SRE 平台前端與後端之間的資料契約，涵蓋事件管理、資源監控、儀表板、
    自動化、通知、設定與個人偏好等模組。所有時間皆為 ISO 8601 格式 (UTC)。
servers:
  - url: http://localhost:4000
    description: 本地 Mock 伺服器
x-resource-status-rules:
  cpu_usage:
    healthy: "< 60%"
    warning: "60% - 80%"
    critical: ">= 80%"
  memory_usage:
    healthy: "< 70%"
    warning: "70% - 90%"
    critical: ">= 90%"
  disk_usage:
    healthy: "< 75%"
    warning: "75% - 90%"
    critical: ">= 90%"
  network_latency_ms:
    healthy: "< 150"
    warning: "150 - 250"
    critical: ">= 250"
x-incident-lifecycle:
  states:
    new:
      description: 新事件等待處理。
      transitions:
        acknowledge:
          target: acknowledged
          path: /events/{event_id}/actions
          method: POST
          description: 傳入 action=acknowledge。
        assign:
          target: in_progress
          path: /events/{event_id}/actions
          method: POST
          description: 傳入 action=assign 並指定 assignee_id。
        resolve:
          target: resolved
          path: /events/{event_id}/actions
          method: POST
          description: 傳入 action=resolve。
    acknowledged:
      description: 事件已被接手。
      transitions:
        assign:
          target: in_progress
          path: /events/{event_id}/actions
          method: POST
          description: 傳入 action=assign 並指定 assignee_id。
        resolve:
          target: resolved
          path: /events/{event_id}/actions
          method: POST
          description: 傳入 action=resolve。
    in_progress:
      description: 處理人正在處理事件。
      transitions:
        resolve:
          target: resolved
          path: /events/{event_id}/actions
          method: POST
          description: 傳入 action=resolve。
    resolved:
      description: 事件已被解決。
      transitions:
        reopen:
          target: in_progress
          path: /events/{event_id}
          method: PATCH
          description: 將狀態更新為 in_progress。
x-error-codes:
  - code: INVALID_REQUEST
    message: 請求參數驗證失敗，請確認輸入資料。
  - code: UNAUTHORIZED
    message: 尚未登入或登入已逾期。
  - code: FORBIDDEN
    message: 權限不足，請聯絡系統管理員。
  - code: NOT_FOUND
    message: 查無符合條件的資料。
  - code: CONFLICT
    message: 資料狀態衝突或已存在重複紀錄。
  - code: INTERNAL_ERROR
    message: 系統處理發生未預期錯誤，請稍後再試。
tags:
  - name: 認證
    description: 登入與令牌管理。
  - name: 全局功能
    description: 全局搜尋與頂部摘要功能。
  - name: 系統健康
    description: 平台健康檢查與就緒狀態監控。
  - name: 指標服務
    description: 系統指標定義、彙總與時序查詢服務。
  - name: 通知中心
    description: 個人通知收取與管理。
  - name: 事件管理
    description: 事件列表、詳情與 AI 分析。
  - name: 事件規則
    description: 事件偵測與自動化規則設定。
  - name: 靜音規則
    description: 事件靜音排程與條件設定。
  - name: 批次作業
    description: 跨模組批次處理事件與資源的操作。
  - name: 資源管理
    description: 資源列表與指標查詢。
  - name: 資源群組
    description: 資源群組與訂閱管理。
  - name: 拓撲視圖
    description: 資源拓撲圖與依賴關係。
  - name: 儀表板
    description: 儀表板清單與戰情室設定。
  - name: 分析中心
    description: 容量規劃、資源負載與 AI 洞察。
  - name: 自動化
    description: 腳本、排程與執行日誌管理。
  - name: 身份與存取
    description: 人員、團隊、角色與審計日誌。
  - name: 通知管理
    description: 通知策略、管道與歷史。
  - name: 平台設定
    description: 標籤、郵件與身份驗證設定。
  - name: 個人偏好
    description: 個人偏好與安全設定。
  - name: 標籤服務
    description: 提供全平台標籤鍵與標籤值查詢服務。
paths:
  /auth/login:
    post:
      tags:
        - 認證
      summary: 使用者登入
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
      responses:
        "200":
          description: 登入成功，回傳存取與刷新令牌。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalError"
  /auth/logout:
    post:
      tags:
        - 認證
      summary: 登出並註銷目前的存取令牌
      operationId: logout
      responses:
        "204":
          description: 已成功登出。
        "401":
          $ref: "#/components/responses/Unauthorized"
  /auth/refresh:
    post:
      tags:
        - 認證
      summary: 透過刷新令牌取得新的存取令牌
      operationId: refreshToken
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RefreshRequest"
      responses:
        "200":
          description: 成功換發新的令牌。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "500":
          $ref: "#/components/responses/InternalError"
  /me:
    get:
      tags:
        - 個人偏好
      summary: 取得目前登入者的個人資訊
      operationId: getCurrentUser
      responses:
        "200":
          description: 回傳使用者基本資料與角色。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserProfile"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /me/preferences:
    get:
      tags:
        - 個人偏好
      summary: 取得使用者偏好設定
      operationId: getPreferences
      responses:
        "200":
          description: 回傳偏好設定資料。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPreference"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      tags:
        - 個人偏好
      summary: 更新使用者偏好設定
      operationId: updatePreferences
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PreferenceUpdateRequest"
      responses:
        "200":
          description: 偏好設定已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserPreference"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /me/security/logins:
    get:
      tags:
        - 個人偏好
      summary: 取得最近登入記錄
      operationId: listSecurityLogins
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
      responses:
        "200":
          description: 回傳登入記錄列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/SecurityLoginRecord"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /search:
    get:
      tags:
        - 全局功能
      summary: 全局搜尋
      operationId: globalSearch
      parameters:
        - name: keyword
          in: query
          required: true
          description: 搜尋關鍵字。
          schema:
            type: string
        - name: types
          in: query
          description: 限制搜尋類型 (以逗號分隔)。
          schema:
            type: string
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
      responses:
        "200":
          description: 回傳依類型分組的搜尋結果。
          content:
            application/json:
              schema:
                type: object
                properties:
                  query:
                    type: string
                  groups:
                    type: array
                    items:
                      $ref: "#/components/schemas/GlobalSearchGroup"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /healthz:
    get:
      tags:
        - 系統健康
      summary: 服務健康檢查
      operationId: getHealthStatus
      responses:
        "200":
          description: 目前服務健康狀態。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HealthCheckStatus"
  /readyz:
    get:
      tags:
        - 系統健康
      summary: 服務就緒檢查
      operationId: getReadinessStatus
      responses:
        "200":
          description: 服務依賴是否已就緒。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ReadinessCheckStatus"
  /metrics:
    get:
      tags:
        - 指標服務
      summary: 取得系統指標彙總
      operationId: getMetricsOverview
      parameters:
        - name: metric_keys
          in: query
          description: 指定要返回的指標鍵 (以逗號分隔)。
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: resource_type
          in: query
          description: 限制回傳的資源類型。
          schema:
            type: string
        - name: group_by
          in: query
          description: 依特定欄位分組 (以逗號分隔，如 team 或 environment)。
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
        - name: start_time
          in: query
          description: 查詢起始時間 (含)。
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          description: 查詢結束時間 (含)。
          schema:
            type: string
            format: date-time
        - name: granularity
          in: query
          description: 指標時間粒度，預設 5 分鐘。
          schema:
            type: string
            enum: [1m, 5m, 15m, 1h, 6h, 1d]
      responses:
        "200":
          description: 指標彙總資料。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricsOverviewResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /metrics/definitions:
    get:
      tags:
        - 指標服務
      summary: 取得指標定義列表
      operationId: listMetricDefinitions
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: category
          in: query
          description: 依指標分類過濾。
          schema:
            type: string
        - name: resource_scope
          in: query
          description: 依指標適用範圍過濾。
          schema:
            type: string
            enum: [global, resource, resource_type, team]
        - name: keyword
          in: query
          description: 依名稱或描述模糊搜尋。
          schema:
            type: string
      responses:
        "200":
          description: 指標定義分頁列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/MetricDefinition"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /metrics/query:
    post:
      tags:
        - 指標服務
      summary: 多資源指標時序查詢
      operationId: queryMetrics
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MetricQueryRequest"
      responses:
        "200":
          description: 指標時序查詢結果。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MetricQueryResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /notifications/summary:
    get:
      tags:
        - 通知中心
      summary: 取得通知中心摘要
      operationId: getNotificationSummary
      responses:
        "200":
          description: 回傳未讀數量與分類統計。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /notifications:
    get:
      tags:
        - 通知中心
      summary: 取得通知列表
      operationId: listNotifications
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: status
          in: query
          description: 依通知狀態篩選。
          schema:
            type: string
            enum: [unread, read]
        - name: severity
          in: query
          description: 依嚴重程度篩選。
          schema:
            type: string
            enum: [critical, warning, info, success]
      responses:
        "200":
          description: 回傳個人通知列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/NotificationItem"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /notifications/read:
    post:
      tags:
        - 通知中心
      summary: 標記通知為已讀
      operationId: readNotifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationReadRequest"
      responses:
        "200":
          description: 回傳更新後的通知條目與摘要。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationReadResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /notifications/clear:
    post:
      tags:
        - 通知中心
      summary: 清除通知
      operationId: clearNotifications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationClearRequest"
      responses:
        "200":
          description: 回傳清除結果與最新通知摘要。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationClearResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /events/summary:
    get:
      tags:
        - 事件管理
      summary: 取得事件 KPI 統計
      operationId: getEventSummary
      parameters:
        - name: time_range_start
          in: query
          description: KPI 起始時間 (含)。
          schema:
            type: string
            format: date-time
        - name: time_range_end
          in: query
          description: KPI 結束時間 (含)。
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: 事件總覽統計。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventSummaryMetrics"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /events:
    get:
      tags:
        - 事件管理
      summary: 取得事件列表
      operationId: listEvents
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: status
          in: query
          schema:
            type: string
            enum: [new, acknowledged, in_progress, resolved, silenced]
        - name: severity
          in: query
          schema:
            type: string
            enum: [critical, warning, info]
        - name: resource_id
          in: query
          schema:
            type: string
        - name: rule_uid
          in: query
          schema:
            type: string
          description: Grafana 告警規則的 UID。
        - name: assignee_id
          in: query
          schema:
            type: string
        - name: start_time
          in: query
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          schema:
            type: string
            format: date-time
        - name: keyword
          in: query
          description: 摘要或描述搜尋關鍵字。
          schema:
            type: string
        - name: resource_name
          in: query
          description: 依資源名稱模糊搜尋。
          schema:
            type: string
        - name: resource_type
          in: query
          description: 依資源類型篩選。
          schema:
            type: string
        - name: rule_name
          in: query
          description: 依規則名稱模糊搜尋。
          schema:
            type: string
        - name: tags
          in: query
          description: 依標籤篩選 (以逗號分隔)。
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: 回傳事件分頁列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/EventSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 事件管理
      summary: 手動建立事件
      operationId: createEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEventRequest"
      responses:
        "201":
          description: 事件建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "409":
          $ref: "#/components/responses/Conflict"
  /batch-operations:
    post:
      tags:
        - 批次作業
      summary: 建立事件或資源的批次操作
      description: |
        依據 target_type 對事件或資源發起批次操作。當目標為資源時，僅允許團隊管理員或超級管理員執行。
      operationId: createBatchOperation
      security:
        - bearerAuth: []
      x-roles:
        - team_member
        - team_manager
        - super_admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BatchOperationRequest"
      responses:
        "202":
          description: 已接受批次處理請求。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchOperationStatus"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/InternalError"
  /batch-operations/{operation_id}:
    parameters:
      - name: operation_id
        in: path
        required: true
        description: 批次作業唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 批次作業
      summary: 查詢批次處理狀態
      operationId: getBatchOperationStatus
      security:
        - bearerAuth: []
      x-roles:
        - team_member
        - team_manager
        - super_admin
      responses:
        "200":
          description: 批次處理狀態與結果。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BatchOperationStatus"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
  /events/{event_id}:
    parameters:
      - name: event_id
        in: path
        required: true
        description: 事件唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 事件管理
      summary: 取得事件詳情
      operationId: getEventById
      responses:
        "200":
          description: 回傳事件詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - 事件管理
      summary: 更新事件狀態或指派資訊
      operationId: updateEvent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEventRequest"
      responses:
        "200":
          description: 事件已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 事件管理
      summary: 刪除事件
      operationId: deleteEvent
      responses:
        "204":
          description: 事件已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /events/{event_id}/timeline:
    get:
      tags:
        - 事件管理
      summary: 取得事件處理歷史
      operationId: getEventTimeline
      responses:
        "200":
          description: 回傳事件歷程清單。
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EventTimelineEntry"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    post:
      tags:
        - 事件管理
      summary: 新增事件歷程記錄
      operationId: appendEventTimeline
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEventTimelineEntryRequest"
      responses:
        "201":
          description: 已新增事件歷程。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventTimelineEntry"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /events/{event_id}/related:
    get:
      tags:
        - 事件管理
      summary: 取得關聯事件
      operationId: getRelatedEvents
      responses:
        "200":
          description: 回傳關聯事件列表。
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/EventRelatedItem"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /events/{event_id}/actions:
    post:
      tags:
        - 事件管理
      summary: 對事件執行狀態操作
      operationId: performEventAction
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EventActionRequest"
      responses:
        "200":
          description: 事件狀態已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "409":
          $ref: "#/components/responses/Conflict"
  /events/{event_id}/analysis:
    get:
      tags:
        - 事件管理
      summary: 取得最新的 AI 事件分析
      operationId: getEventAnalysis
      responses:
        "200":
          description: 回傳事件 AI 分析內容。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventAnalysisReport"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    post:
      tags:
        - 事件管理
      summary: 重新產生 AI 事件分析
      operationId: generateEventAnalysis
      responses:
        "202":
          description: 已觸發分析，回傳最新結果或排程資訊。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventAnalysisReport"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /events/{event_id}/silence:
    post:
      tags:
        - 事件管理
      summary: 針對事件建立快速靜音設定
      operationId: createQuickSilence
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/QuickSilenceRequest"
      responses:
        "201":
          description: 已建立新的靜音規則。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SilenceRuleDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /events/report:
    post:
      tags:
        - 事件管理
      summary: 產生事件彙總報告
      operationId: generateEventReport
      security:
        - bearerAuth: []
      x-roles:
        - team_member
        - team_manager
        - super_admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/GenerateEventReportRequest"
      responses:
        "200":
          description: 回傳 AI 產生的事件彙總報告。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenerateEventReportResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /event-rules/summary:
    get:
      tags:
        - 事件規則
      summary: 取得事件規則統計
      operationId: getEventRuleSummary
      responses:
        "200":
          description: 規則啟用狀態統計。
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  enabled:
                    type: integer
                  automation_enabled:
                    type: integer
        "401":
          $ref: "#/components/responses/Unauthorized"
  /event-rules/templates:
    get:
      tags:
        - 事件規則
      summary: 取得事件規則範本列表
      operationId: listEventRuleTemplates
      description: 提供前端精靈快速載入的標準事件規則範本內容。
      parameters:
        - name: severity
          in: query
          schema:
            type: string
            enum: [critical, warning, info]
        - name: keyword
          in: query
          schema:
            type: string
      responses:
        "200":
          description: 規則範本清單。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/EventRuleTemplate"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /event-rules:
    get:
      tags:
        - 事件規則
      summary: 取得事件規則列表
      operationId: listEventRules

      description: 從 Grafana Alerting 取得告警規則快取，並合併平台擴充的自動化設定資訊；若同步失敗則回傳快取資料並於 sync_status 標示。
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: severity
          in: query
          schema:
            type: string
            enum: [critical, warning, info]
        - name: enabled
          in: query
          schema:
            type: boolean
        - name: keyword
          in: query
          schema:
            type: string
        - name: format
          in: query
          description: 指定回應格式，預設為 JSON；設為 csv 時回傳文字檔供匯出使用。
          schema:
            type: string
            enum: [json, csv]
            default: json
      responses:
        "200":
          description: 回傳事件規則列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/EventRuleSummary"
            text/csv:
              schema:
                type: string
                description: 當 format=csv 時回傳的匯出內容，欄位以逗號分隔。
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 事件規則
      summary: 建立事件規則
      operationId: createEventRule
      description: 透過 Grafana API 建立告警規則，並儲存平台端額外的自動化綁定設定。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEventRuleRequest"
      responses:
        "201":
          description: 規則建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventRuleDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "409":
          $ref: "#/components/responses/Conflict"
  /event-rules/{rule_uid}:
    parameters:
      - name: rule_uid
        in: path
        required: true
        description: Grafana 告警規則的 UID。
        schema:
          type: string
    get:
      tags:
        - 事件規則
      summary: 取得事件規則詳情
      operationId: getEventRuleById
      description: 從 Grafana Alerting 取得指定告警規則並附帶平台的擴充屬性；若 Grafana 暫時不可用則回傳快取內容並揭露 sync_status 與 last_synced_at。
      responses:
        "200":
          description: 規則詳情資料。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventRuleDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags:
        - 事件規則
      summary: 更新事件規則
      operationId: updateEventRule
      description: 更新 Grafana 告警規則內容，並同步平台側的自動化綁定資訊。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateEventRuleRequest"
      responses:
        "200":
          description: 規則已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventRuleDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 事件規則
      summary: 刪除事件規則
      operationId: deleteEventRule
      description: 從 Grafana Alerting 刪除指定告警規則並解除平台綁定。
      responses:
        "204":
          description: 規則已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /event-rules/{rule_uid}/toggle:
    post:
      tags:
        - 事件規則
      summary: 切換事件規則啟用狀態
      operationId: toggleEventRule
      description: |-
        切換或直接設定事件規則的啟用狀態。若未提供 payload，則反轉目前狀態；
        若提供 `enabled` 欄位則依指定值更新。
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToggleEnabledRequest"
      responses:
        "200":
          description: 更新後的事件規則資訊。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EventRuleDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /event-rules/{rule_uid}/test:
    post:
      tags:
        - 事件規則
      summary: 測試事件規則
      operationId: testEventRule
      description: 將測試事件傳送至 Grafana Alerting，回傳模擬比對結果與預覽事件。
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestEventRuleRequest"
      responses:
        "200":
          description: 回傳測試結果摘要。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestEventRuleResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /silence-rules:
    get:
      tags:
        - 靜音規則
      summary: 取得靜音規則列表
      operationId: listSilenceRules
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: silence_type
          in: query
          schema:
            type: string
            enum: [single, repeat, condition]
        - name: enabled
          in: query
          schema:
            type: boolean
        - name: format
          in: query
          description: 指定回應格式，預設為 JSON；設為 csv 時回傳文字檔供匯出使用。
          schema:
            type: string
            enum: [json, csv]
            default: json
      responses:
        "200":
          description: 回傳靜音規則列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/SilenceRuleSummary"
            text/csv:
              schema:
                type: string
                description: 當 format=csv 時回傳的匯出內容，欄位以逗號分隔。
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 靜音規則
      summary: 建立靜音規則
      operationId: createSilenceRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSilenceRuleRequest"
      responses:
        "201":
          description: 靜音規則建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SilenceRuleDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /silence-rules/{silence_id}:
    parameters:
      - name: silence_id
        in: path
        required: true
        description: 靜音規則唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 靜音規則
      summary: 取得靜音規則詳情
      operationId: getSilenceRuleById
      responses:
        "200":
          description: 靜音規則詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SilenceRuleDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags:
        - 靜音規則
      summary: 更新靜音規則
      operationId: updateSilenceRule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateSilenceRuleRequest"
      responses:
        "200":
          description: 靜音規則已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SilenceRuleDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 靜音規則
      summary: 刪除靜音規則
      operationId: deleteSilenceRule
      responses:
        "204":
          description: 靜音規則已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /resources/summary:
    get:
      tags:
        - 資源管理
      summary: 取得資源 KPI 指標
      operationId: getResourceSummary
      responses:
        "200":
          description: 資源統計資料。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceSummaryMetrics"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /resources:
    get:
      tags:
        - 資源管理
      summary: 取得資源列表
      operationId: listResources
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: status
          in: query
          schema:
            type: string
            enum: [healthy, warning, critical, offline]
        - name: type
          in: query
          schema:
            type: string
            enum: [server, database, cache, gateway, service]
        - name: environment
          in: query
          schema:
            type: string
        - name: keyword
          in: query
          description: 名稱、IP 或標籤關鍵字。
          schema:
            type: string
      responses:
        "200":
          description: 回傳資源列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/ResourceSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 資源管理
      summary: 建立資源
      operationId: createResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateResourceRequest"
      responses:
        "201":
          description: 資源建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /resources/{resource_id}:
    parameters:
      - name: resource_id
        in: path
        required: true
        description: 資源唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 資源管理
      summary: 取得資源詳情
      operationId: getResourceById
      responses:
        "200":
          description: 回傳資源詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - 資源管理
      summary: 更新資源資訊
      operationId: updateResource
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateResourceRequest"
      responses:
        "200":
          description: 資源已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 資源管理
      summary: 刪除資源
      operationId: deleteResource
      responses:
        "204":
          description: 資源已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /resources/{resource_id}/metrics:
    get:
      tags:
        - 資源管理
      summary: 取得資源即時指標
      operationId: getResourceMetrics
      parameters:
        - name: range
          in: query
          description: 指標時間範圍 (如 6h、24h、7d)。
          schema:
            type: string
      responses:
        "200":
          description: 回傳資源指標趨勢。
          content:
            application/json:
              schema:
                type: object
                properties:
                  metrics:
                    type: array
                    items:
                      $ref: "#/components/schemas/ResourceMetric"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /resources/{resource_id}/events:
    get:
      tags:
        - 資源管理
      summary: 取得資源關聯事件
      operationId: getResourceEvents
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
      responses:
        "200":
          description: 回傳該資源的事件列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/EventSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /resource-groups:
    get:
      tags:
        - 資源群組
      summary: 取得資源群組列表
      operationId: listResourceGroups
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: keyword
          in: query
          schema:
            type: string
      responses:
        "200":
          description: 回傳資源群組列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/ResourceGroupSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 資源群組
      summary: 建立資源群組
      operationId: createResourceGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateResourceGroupRequest"
      responses:
        "201":
          description: 群組建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroupDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /resource-groups/{group_id}:
    parameters:
      - name: group_id
        in: path
        required: true
        description: 資源群組唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 資源群組
      summary: 取得資源群組詳情
      operationId: getResourceGroupById
      responses:
        "200":
          description: 回傳群組詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroupDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    put:
      tags:
        - 資源群組
      summary: 更新資源群組
      operationId: updateResourceGroup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateResourceGroupRequest"
      responses:
        "200":
          description: 群組已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ResourceGroupDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 資源群組
      summary: 刪除資源群組
      operationId: deleteResourceGroup
      responses:
        "204":
          description: 群組已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /topology:
    get:
      tags:
        - 拓撲視圖
      summary: 取得拓撲圖資料
      operationId: getTopology
      parameters:
        - name: layout
          in: query
          schema:
            type: string
            enum: [force, circular, hierarchical, grid]
        - name: status
          in: query
          schema:
            type: string
            enum: [healthy, warning, critical]
      responses:
        "200":
          description: 拓撲節點與連線資料。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopologyGraph"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /resources/scan:
    post:
      tags:
        - 資源管理
      summary: 啟動網路資源掃描
      operationId: scanResources
      security:
        - bearerAuth: []
      x-roles:
        - team_manager
        - super_admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScanRequest"
      responses:
        "202":
          description: 掃描任務已啟動。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScanTaskResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "500":
          $ref: "#/components/responses/InternalError"
  /resources/scan/{task_id}:
    get:
      tags:
        - 資源管理
      summary: 查詢掃描任務狀態
      operationId: getScanTask
      security:
        - bearerAuth: []
      x-roles:
        - team_manager
        - super_admin
      parameters:
        - $ref: "#/components/parameters/TaskIdParam"
      responses:
        "200":
          description: 掃描任務狀態。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ScanTaskResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalError"
  /dashboards/summary:
    get:
      tags:
        - 儀表板
      summary: 取得儀表板統計
      operationId: getDashboardSummary
      responses:
        "200":
          description: 儀表板 KPI 資訊，包含依類型統計。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardSummaryMetrics"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /dashboards:
    get:
      tags:
        - 儀表板
      summary: 取得儀表板列表
      operationId: listDashboards
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: category
          in: query
          schema:
            type: string
        - name: owner_id
          in: query
          schema:
            type: string
        - name: dashboard_type
          in: query
          description: 僅篩選特定類型的儀表板。
          schema:
            $ref: "#/components/schemas/DashboardType"
      responses:
        "200":
          description: 回傳儀表板列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/DashboardSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 儀表板
      summary: 建立儀表板
      operationId: createDashboard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateDashboardRequest"
      responses:
        "201":
          description: 儀表板建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /dashboards/{dashboard_id}:
    parameters:
      - name: dashboard_id
        in: path
        required: true
        description: 儀表板唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 儀表板
      summary: 取得儀表板詳情
      operationId: getDashboardById
      responses:
        "200":
          description: 回傳儀表板設定與元件。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - 儀表板
      summary: 更新儀表板設定
      operationId: updateDashboard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateDashboardRequest"
      responses:
        "200":
          description: 儀表板已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DashboardDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 儀表板
      summary: 刪除儀表板
      operationId: deleteDashboard
      responses:
        "204":
          description: 儀表板已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /dashboards/{dashboard_id}/grafana-url:
    get:
      tags:
        - 儀表板
      summary: 獲取Grafana Dashboard iframe URL
      description: 僅適用於 dashboard_type 為 grafana 的儀表板。
      operationId: getGrafanaDashboardUrl
      security:
        - bearerAuth: []
      parameters:
        - name: dashboard_id
          in: path
          required: true
          description: 儀表板唯一識別碼。
          schema:
            type: string
        - name: theme
          in: query
          required: false
          description: 主題模式 (light/dark)。
          schema:
            type: string
            enum: [light, dark]
        - name: kiosk
          in: query
          required: false
          description: 無頭模式 (TV模式)。
          schema:
            type: boolean
        - name: refresh
          in: query
          required: false
          description: 自動刷新間隔 (秒)。
          schema:
            type: integer
      responses:
        "200":
          description: Grafana Dashboard iframe URL。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GrafanaDashboardUrl"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
        "500":
          $ref: "#/components/responses/InternalError"
  /analysis/capacity:
    get:
      tags:
        - 分析中心
      summary: 取得最新容量分析報告
      operationId: getCapacityAnalysis
      parameters:
        - name: time_range
          in: query
          schema:
            type: string
            example: 30d
          description: 指定分析時間範圍 (例如 7d、30d)，預設回傳最近報告。
        - name: model
          in: query
          schema:
            type: string
            enum: [arima, prophet, lstm]
          description: 選擇分析模型，若未指定則採用最新報告中的模型。
      responses:
        "200":
          description: 包含容量摘要、預測序列與優化建議。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CapacityAnalysisReport"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /analysis/resource-load:
    get:
      tags:
        - 分析中心
      summary: 取得資源負載分析
      operationId: getResourceLoadAnalysis
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: type
          in: query
          schema:
            type: string
            enum: [server, database, cache, gateway, service]
        - name: group_id
          in: query
          schema:
            type: string
      responses:
        "200":
          description: 回傳來源於 `resource_metrics` 彙總檢視的資源負載統計。
          content:
            application/json:
              schema:
                type: object
                properties:
                  summary:
                    $ref: "#/components/schemas/ResourceLoadSummary"
                  items:
                    type: array
                    items:
                      $ref: "#/components/schemas/ResourceLoadRow"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /analysis/ai-insights:
    get:
      tags:
        - 分析中心
      summary: 取得最新 AI 洞察報告
      operationId: listAIInsights
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
      responses:
        "200":
          description: 回傳 AI 洞察報告列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/AIInsightReport"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /analysis/ai-insights/{report_id}:
    parameters:
      - name: report_id
        in: path
        required: true
        description: AI 洞察報告識別碼。
        schema:
          type: string
    get:
      tags:
        - 分析中心
      summary: 取得單一 AI 洞察詳情
      operationId: getAIInsightById
      responses:
        "200":
          description: 回傳完整的 AI 洞察資料。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AIInsightReport"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /automation/scripts:
    get:
      tags:
        - 自動化
      summary: 取得腳本列表
      operationId: listAutomationScripts
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: type
          in: query
          schema:
            type: string
            enum: [shell, python, ansible, terraform]
        - name: keyword
          in: query
          schema:
            type: string
      responses:
        "200":
          description: 回傳腳本列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/AutomationScriptSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 自動化
      summary: 建立自動化腳本
      operationId: createAutomationScript
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAutomationScriptRequest"
      responses:
        "201":
          description: 腳本建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationScriptDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /automation/scripts/{script_id}:
    parameters:
      - name: script_id
        in: path
        required: true
        description: 腳本唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 自動化
      summary: 取得腳本詳情
      operationId: getAutomationScriptById
      responses:
        "200":
          description: 腳本詳情資料。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationScriptDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - 自動化
      summary: 更新自動化腳本
      operationId: updateAutomationScript
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAutomationScriptRequest"
      responses:
        "200":
          description: 腳本已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationScriptDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 自動化
      summary: 刪除自動化腳本
      operationId: deleteAutomationScript
      responses:
        "204":
          description: 腳本已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /automation/scripts/{script_id}/execute:
    post:
      tags:
        - 自動化
      summary: 立即執行腳本
      operationId: executeAutomationScript
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ExecuteScriptRequest"
      responses:
        "202":
          description: 已排入腳本執行。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExecuteScriptResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /automation/scripts/{script_id}/versions:
    get:
      tags:
        - 自動化
      summary: 取得腳本版本列表
      operationId: listAutomationScriptVersions
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
      responses:
        "200":
          description: 回傳腳本版本。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/AutomationScriptVersion"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /automation/schedules:
    get:
      tags:
        - 自動化
      summary: 取得排程列表
      operationId: listAutomationSchedules
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: status
          in: query
          schema:
            type: string
            enum: [enabled, disabled, running]
      responses:
        "200":
          description: 回傳排程列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/AutomationScheduleSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 自動化
      summary: 建立排程
      operationId: createAutomationSchedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateAutomationScheduleRequest"
      responses:
        "201":
          description: 排程建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationScheduleDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /automation/schedules/{schedule_id}:
    parameters:
      - name: schedule_id
        in: path
        required: true
        description: 排程唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 自動化
      summary: 取得排程詳情
      operationId: getAutomationScheduleById
      responses:
        "200":
          description: 排程詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationScheduleDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - 自動化
      summary: 更新排程設定
      operationId: updateAutomationSchedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateAutomationScheduleRequest"
      responses:
        "200":
          description: 排程已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationScheduleDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 自動化
      summary: 刪除排程
      operationId: deleteAutomationSchedule
      responses:
        "204":
          description: 排程已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /automation/schedules/{schedule_id}/toggle:
    post:
      tags:
        - 自動化
      summary: 切換自動化排程狀態
      operationId: toggleAutomationSchedule
      description: |-
        切換或直接指定排程的 `status`。若 payload 內提供 `enabled` 或 `status` 值，
        將依指定狀態更新；若無 payload 則在 enabled/disabled 間反轉。
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ToggleEnabledRequest"
      responses:
        "200":
          description: 更新後的排程資訊。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationScheduleDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /automation/executions:
    get:
      tags:
        - 自動化
      summary: 取得執行日誌列表
      operationId: listAutomationExecutions
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, running, success, failed, cancelled]
        - name: script_id
          in: query
          schema:
            type: string
      responses:
        "200":
          description: 回傳執行日誌。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/AutomationExecutionSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /automation/executions/{execution_id}:
    parameters:
      - name: execution_id
        in: path
        required: true
        description: 執行記錄唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 自動化
      summary: 取得單筆執行詳情
      operationId: getAutomationExecutionById
      responses:
        "200":
          description: 執行詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationExecutionDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /automation/executions/{execution_id}/retry:
    post:
      tags:
        - 自動化
      summary: 重試執行紀錄
      operationId: retryAutomationExecution
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RetryExecutionRequest"
      responses:
        "202":
          description: 已排入重新執行。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AutomationExecutionDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /iam/invitations:
    get:
      tags:
        - 身份與存取
      summary: 取得邀請列表
      operationId: listIamInvitations
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - in: query
          name: status
          description: 依邀請狀態篩選，多個狀態以逗號分隔。
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: [invitation_sent, accepted, expired, cancelled]
        - in: query
          name: keyword
          description: 依電子郵件或姓名關鍵字模糊搜尋。
          schema:
            type: string
        - in: query
          name: sort_by
          description: 指定排序欄位，預設為 invited_at。
          schema:
            type: string
            enum: [invited_at, expires_at, email, status, last_sent_at]
        - in: query
          name: sort_order
          description: 排序方向，支援 asc 或 desc，預設為 desc。
          schema:
            type: string
            enum: [asc, desc]
      responses:
        "200":
          description: 邀請列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/IAMInvitationResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 身份與存取
      summary: 發送人員邀請
      operationId: createIamInvitation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateIAMInvitationRequest"
      responses:
        "201":
          description: 邀請已發送。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMInvitationResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /iam/users:
    get:
      tags:
        - 身份與存取
      summary: 取得人員列表
      operationId: listIamUsers
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: status
          in: query
          schema:
            type: string
            enum: [active, disabled]
        - name: keyword
          in: query
          schema:
            type: string
      responses:
        "200":
          description: 回傳人員列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/IAMUserSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /iam/users/{user_id}:
    parameters:
      - name: user_id
        in: path
        required: true
        description: 人員唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 身份與存取
      summary: 取得人員詳情
      operationId: getIamUserById
      responses:
        "200":
          description: 人員詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMUserDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - 身份與存取
      summary: 更新人員資訊與角色
      operationId: updateIamUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateIAMUserRequest"
      responses:
        "200":
          description: 人員資料已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/IAMUserDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 身份與存取
      summary: 停用人員帳號
      operationId: deleteIamUser
      responses:
        "204":
          description: 人員已停用。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /iam/teams:
    get:
      tags:
        - 身份與存取
      summary: 取得團隊列表
      operationId: listIamTeams
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: keyword
          in: query
          schema:
            type: string
      responses:
        "200":
          description: 回傳團隊列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/TeamSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 身份與存取
      summary: 建立團隊
      operationId: createIamTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTeamRequest"
      responses:
        "201":
          description: 團隊建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /iam/teams/{team_id}:
    parameters:
      - name: team_id
        in: path
        required: true
        description: 團隊唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 身份與存取
      summary: 取得團隊詳情
      operationId: getIamTeamById
      responses:
        "200":
          description: 團隊詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - 身份與存取
      summary: 更新團隊資訊
      operationId: updateIamTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTeamRequest"
      responses:
        "200":
          description: 團隊資料已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 身份與存取
      summary: 刪除團隊
      operationId: deleteIamTeam
      responses:
        "204":
          description: 團隊已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /iam/roles:
    get:
      tags:
        - 身份與存取
      summary: 取得角色列表
      operationId: listIamRoles
      responses:
        "200":
          description: 回傳角色列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoleSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 身份與存取
      summary: 建立角色
      operationId: createIamRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRoleRequest"
      responses:
        "201":
          description: 角色建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /iam/roles/{role_id}:
    parameters:
      - name: role_id
        in: path
        required: true
        description: 角色唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 身份與存取
      summary: 取得角色詳情
      operationId: getIamRoleById
      responses:
        "200":
          description: 角色詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - 身份與存取
      summary: 更新角色與權限
      operationId: updateIamRole
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateRoleRequest"
      responses:
        "200":
          description: 角色已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoleDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 身份與存取
      summary: 刪除角色
      operationId: deleteIamRole
      responses:
        "204":
          description: 角色已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /iam/audit-logs:
    get:
      tags:
        - 身份與存取
      summary: 取得審計日誌
      operationId: listAuditLogs
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - name: action
          in: query
          schema:
            type: string
        - name: start_time
          in: query
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: 回傳審計日誌列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/AuditLogEntry"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /notification-config/strategies:
    get:
      tags:
        - 通知管理
      summary: 取得通知策略列表
      operationId: listNotificationStrategies
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: status
          in: query
          description: 依啟用狀態篩選策略，可傳入單一值或逗號分隔多個值。
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: [enabled, disabled]
        - name: priority
          in: query
          description: 依策略優先級篩選，可逗號分隔多個值。
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: [high, medium, low]
        - name: channel_types
          in: query
          description: 依通知管道類型篩選策略。
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: [Email, Slack, PagerDuty, Webhook, Teams, "LINE Notify", SMS]
        - name: channel_id
          in: query
          description: 指定通知管道識別碼以篩選策略。
          schema:
            type: string
        - name: severity
          in: query
          description: 依策略支援的嚴重程度篩選，可逗號分隔多個值。
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - name: recipient_type
          in: query
          description: 依接收者類型篩選 (user/team/role)。
          schema:
            type: string
            enum: [user, team, role]
        - name: keyword
          in: query
          description: 依策略名稱、描述或觸發條件關鍵字模糊搜尋。
          schema:
            type: string
        - name: format
          in: query
          description: 指定回應格式，預設為 JSON；設為 csv 時回傳文字檔供匯出使用。
          schema:
            type: string
            enum: [json, csv]
            default: json
      responses:
        "200":
          description: 回傳通知策略列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/NotificationStrategySummary"
            text/csv:
              schema:
                type: string
                description: 當 format=csv 時回傳的匯出內容，欄位以逗號分隔。
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 通知管理
      summary: 建立通知策略
      operationId: createNotificationStrategy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNotificationStrategyRequest"
      responses:
        "201":
          description: 通知策略建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationStrategyDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /notification-config/strategies/{strategy_id}:
    parameters:
      - name: strategy_id
        in: path
        required: true
        description: 通知策略唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 通知管理
      summary: 取得通知策略詳情
      operationId: getNotificationStrategyById
      responses:
        "200":
          description: 通知策略詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationStrategyDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - 通知管理
      summary: 更新通知策略
      operationId: updateNotificationStrategy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNotificationStrategyRequest"
      responses:
        "200":
          description: 通知策略已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationStrategyDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 通知管理
      summary: 刪除通知策略
      operationId: deleteNotificationStrategy
      responses:
        "204":
          description: 通知策略已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /notification-config/strategies/{strategy_id}/test:
    post:
      tags:
        - 通知管理
      summary: 測試通知策略
      operationId: testNotificationStrategy
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestNotificationStrategyRequest"
      responses:
        "200":
          description: 測試結果摘要。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestNotificationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /notification-config/channels:
    get:
      tags:
        - 通知管理
      summary: 取得通知管道列表
      operationId: listNotificationChannels
      responses:
        "200":
          description: 回傳通知管道列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/NotificationChannelSummary"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 通知管理
      summary: 建立通知管道
      operationId: createNotificationChannel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateNotificationChannelRequest"
      responses:
        "201":
          description: 通知管道建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationChannelDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /notification-config/channels/{channel_id}:
    parameters:
      - name: channel_id
        in: path
        required: true
        description: 通知管道唯一識別碼。
        schema:
          type: string
    get:
      tags:
        - 通知管理
      summary: 取得通知管道詳情
      operationId: getNotificationChannelById
      responses:
        "200":
          description: 通知管道詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationChannelDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - 通知管理
      summary: 更新通知管道設定
      operationId: updateNotificationChannel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateNotificationChannelRequest"
      responses:
        "200":
          description: 通知管道已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationChannelDetail"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 通知管理
      summary: 刪除通知管道
      operationId: deleteNotificationChannel
      responses:
        "204":
          description: 通知管道已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /notification-config/channels/{channel_id}/test:
    post:
      tags:
        - 通知管理
      summary: 測試通知管道
      operationId: testNotificationChannel
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TestNotificationChannelRequest"
      responses:
        "200":
          description: 測試結果。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TestNotificationResult"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /notification-config/history:
    get:
      tags:
        - 通知管理
      summary: 取得通知歷史
      operationId: listNotificationHistory
      parameters:
        - $ref: "#/components/parameters/PageParam"
        - $ref: "#/components/parameters/PageSizeParam"
        - $ref: "#/components/parameters/SortByParam"
        - $ref: "#/components/parameters/SortOrderParam"
        - name: status
          in: query
          description: 依通知狀態篩選，可使用逗號分隔多個值。
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: [SUCCESS, FAILED, RETRYING, QUEUED]
        - name: channel_types
          in: query
          description: 依通知管道類型篩選，可一次指定多個值。
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              enum: [Email, Slack, PagerDuty, Webhook, Teams, "LINE Notify", SMS]
        - name: channel_id
          in: query
          description: 指定通知管道識別碼以篩選紀錄。
          schema:
            type: string
        - name: strategy_id
          in: query
          description: 指定通知策略識別碼以篩選紀錄。
          schema:
            type: string
        - name: event_id
          in: query
          description: 篩選與特定事件關聯的通知。
          schema:
            type: string
        - name: start_time
          in: query
          description: 篩選在此時間（含）之後發送的紀錄。
          schema:
            type: string
            format: date-time
        - name: end_time
          in: query
          description: 篩選在此時間（含）之前發送的紀錄。
          schema:
            type: string
            format: date-time
        - name: keyword
          in: query
          description: 依策略名稱、管道標籤、接收者或訊息內容關鍵字模糊搜尋。
          schema:
            type: string
        - name: has_error
          in: query
          description: 僅顯示包含錯誤訊息的紀錄。
          schema:
            type: boolean
      responses:
        "200":
          description: 回傳通知歷史列表。
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/PaginatedResponse"
                  - type: object
                    properties:
                      items:
                        type: array
                        items:
                          $ref: "#/components/schemas/NotificationHistoryRecord"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /notification-config/history/{record_id}:
    parameters:
      - name: record_id
        in: path
        required: true
        description: 通知歷史記錄識別碼。
        schema:
          type: string
    get:
      tags:
        - 通知管理
      summary: 取得單筆通知歷史詳情
      operationId: getNotificationHistoryById
      responses:
        "200":
          description: 通知歷史詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationHistoryDetail"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /notification-config/history/purge:
    post:
      tags:
        - 通知管理
      summary: 清除舊的通知歷史紀錄
      operationId: purgeNotificationHistory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NotificationHistoryPurgeRequest"
      responses:
        "200":
          description: 已完成通知歷史清理作業。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NotificationHistoryPurgeResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "403":
          $ref: "#/components/responses/Forbidden"
  /settings/tags:
    get:
      tags:
        - 平台設定
      summary: 取得標籤類型列表
      operationId: listTagDefinitions
      parameters:
        - name: search
          in: query
          description: 依標籤名稱或標籤值關鍵字模糊搜尋。
          schema:
            type: string
        - name: category
          in: query
          description: 篩選特定分類的標籤。
          schema:
            type: string
        - name: include_values
          in: query
          description: 是否一併載入標籤值清單，預設僅回傳標籤鍵資訊。
          schema:
            type: boolean
            default: false
        - name: limit
          in: query
          description: 限制回傳的標籤類型數量，提供前端自動完成時使用。
          schema:
            type: integer
            minimum: 1
            maximum: 100
      responses:
        "200":
          description: 回傳標籤類型。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TagDefinition"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 平台設定
      summary: 建立標籤類型
      operationId: createTagDefinition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTagRequest"
      responses:
        "201":
          description: 標籤類型建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagDefinition"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /settings/tags/{tag_id}:
    parameters:
      - name: tag_id
        in: path
        required: true
        description: 標籤類型識別碼。
        schema:
          type: string
    get:
      tags:
        - 平台設定
      summary: 取得標籤類型詳情
      operationId: getTagDefinitionById
      responses:
        "200":
          description: 標籤類型詳情。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagDefinition"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    patch:
      tags:
        - 平台設定
      summary: 更新標籤類型
      operationId: updateTagDefinition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagRequest"
      responses:
        "200":
          description: 標籤類型已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagDefinition"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 平台設定
      summary: 刪除標籤類型
      operationId: deleteTagDefinition
      responses:
        "204":
          description: 標籤類型已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /settings/tags/{tag_id}/values:
    get:
      tags:
        - 平台設定
      summary: 取得標籤值列表
      operationId: listTagValues
      responses:
        "200":
          description: 回傳標籤值列表。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TagValue"
        "401":
          $ref: "#/components/responses/Unauthorized"
    post:
      tags:
        - 平台設定
      summary: 新增標籤值
      operationId: createTagValue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTagValueRequest"
      responses:
        "201":
          description: 標籤值建立成功。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagValue"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /settings/tags/{tag_id}/values/{value_id}:
    parameters:
      - name: tag_id
        in: path
        required: true
        schema:
          type: string
      - name: value_id
        in: path
        required: true
        schema:
          type: string
    patch:
      tags:
        - 平台設定
      summary: 更新標籤值
      operationId: updateTagValue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateTagValueRequest"
      responses:
        "200":
          description: 標籤值已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagValue"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
    delete:
      tags:
        - 平台設定
      summary: 刪除標籤值
      operationId: deleteTagValue
      responses:
        "204":
          description: 標籤值已刪除。
        "401":
          $ref: "#/components/responses/Unauthorized"
        "404":
          $ref: "#/components/responses/NotFound"
  /settings/tags/summary:
    get:
      tags:
        - 平台設定
      summary: 取得標籤治理摘要
      operationId: getTagSummary
      responses:
        "200":
          description: 回傳標籤分類與使用統計摘要。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TagSummaryResponse"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /settings/email:
    get:
      tags:
        - 平台設定
      summary: 取得郵件設定
      operationId: getEmailSettings
      description: 回傳與 `notification_channels` 表同源的預設郵件通知通道設定。
      responses:
        "200":
          description: 郵件設定資料。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailSettings"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      tags:
        - 平台設定
      summary: 更新郵件設定
      operationId: updateEmailSettings
      description: 更新預設郵件通知通道並同步 `notification_channels` 中的 Email 設定。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailSettingsRequest"
      responses:
        "200":
          description: 郵件設定已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailSettings"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /settings/email/test:
    post:
      tags:
        - 平台設定
      summary: 測試郵件設定連線
      operationId: testEmailSettings
      description: 使用目前的郵件通知通道設定進行連線測試。
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EmailTestRequest"
      responses:
        "200":
          description: 測試結果。可同步回傳詳細測試資訊。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailTestResult"
        "202":
          description: 測試請求已排入佇列。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmailTestResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /settings/auth:
    get:
      tags:
        - 平台設定
      summary: 取得身份驗證整合狀態
      operationId: getAuthSettings
      description: 回傳與 Keycloak 等外部身份供應商整合後的唯讀設定資訊。
      responses:
        "200":
          description: 身份驗證設定資料。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthSettings"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      tags:
        - 平台設定
      summary: （已棄用）更新身份驗證設定
      operationId: updateAuthSettings
      deprecated: true
      description: |-
        設定改由 Keycloak 等身份供應商集中管理，此端點僅保留向後相容性並將變更轉交外部系統。
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthSettingsRequest"
      responses:
        "200":
          description: 身份驗證設定已更新。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthSettings"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /settings/auth/test:
    post:
      tags:
        - 平台設定
      summary: （已棄用）測試身份驗證設定連線
      operationId: testAuthSettings
      deprecated: true
      description: 身份驗證測試請改於外部身份供應商執行，此端點僅回報既有設定的健康狀態。
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthTestRequest"
      responses:
        "200":
          description: 測試結果摘要。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthTestResult"
        "202":
          description: 測試請求已排入背景工作。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthTestResult"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /settings/widgets:
    get:
      tags:
        - 平台設定
      summary: 取得可用指標小工具清單
      operationId: listLayoutWidgets
      parameters:
        - name: page_path
          in: query
          description: 僅回傳支援指定頁面的指標小工具。值需為平台定義的頁面路徑 (例如 `/events`)。
          schema:
            type: string
      responses:
        "200":
          description: 可用指標小工具清單。
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/LayoutWidgetDefinition"
        "401":
          $ref: "#/components/responses/Unauthorized"
  /settings/layouts:
    get:
      tags:
        - 平台設定
      summary: 取得頁面版面配置
      operationId: getPageLayout
      parameters:
        - name: page_path
          in: query
          required: true
          description: 指定要查詢的頁面路徑 (例如 `/events`)。
          schema:
            type: string
        - name: scope_type
          in: query
          description: 指定查詢的版面層級，若省略則依序嘗試 user → role → global。
          schema:
            $ref: "#/components/schemas/LayoutScopeType"
        - name: scope_id
          in: query
          description: 搭配 scope_type 使用的識別碼。global 範圍可省略。
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: 回傳實際套用的版面配置與回退鏈資訊。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LayoutResolutionResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
    put:
      tags:
        - 平台設定
      summary: 儲存頁面版面配置
      operationId: savePageLayout
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SavePageLayoutRequest"
      responses:
        "200":
          description: 版面配置已儲存。回傳最新版本的資料。
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PageLayoutRecord"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/Unauthorized"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    PageParam:
      name: page
      in: query
      description: 分頁頁碼 (從 1 開始)。
      schema:
        type: integer
        minimum: 1
        default: 1
    PageSizeParam:
      name: page_size
      in: query
      description: 每頁資料筆數。
      schema:
        type: integer
        minimum: 1
        maximum: 100
        default: 20
    SortByParam:
      name: sort_by
      in: query
      description: 排序欄位名稱。
      schema:
        type: string
    SortOrderParam:
      name: sort_order
      in: query
      description: 排序方向。
      schema:
        type: string
        enum: [asc, desc]
    TaskIdParam:
      name: task_id
      in: path
      required: true
      description: 任務唯一識別碼。
      schema:
        type: string
  responses:
    BadRequest:
      description: 請求資料不正確。
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Unauthorized:
      description: 尚未登入或登入已逾期。
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Forbidden:
      description: 權限不足。
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    NotFound:
      description: 查無資料。
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    Conflict:
      description: 資料狀態衝突或重複。
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
    InternalError:
      description: 伺服器發生未預期錯誤。
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
  schemas:
    ErrorResponse:
      type: object
      required: [code, message]
      properties:
        code:
          type: string
          description: 錯誤代碼。
        message:
          type: string
          description: 錯誤說明。
        details:
          type: object
          additionalProperties: true
          description: 其他錯誤細節。
    PaginatedResponse:
      type: object
      required: [page, page_size, total, items]
      properties:
        page:
          type: integer
        page_size:
          type: integer
        total:
          type: integer
        items:
          type: array
          items:
            description: 依實際回傳結構定義。
    HealthComponentStatus:
      type: object
      required: [name, status]
      properties:
        name:
          type: string
        status:
          type: string
          enum: [ok, degraded, down]
        message:
          type: string
        latency_ms:
          type: integer
        dependency:
          type: string
        last_checked_at:
          type: string
          format: date-time
    HealthCheckStatus:
      type: object
      required: [status, checked_at]
      properties:
        status:
          type: string
          enum: [ok, degraded, down]
        checked_at:
          type: string
          format: date-time
        version:
          type: string
        components:
          type: array
          items:
            $ref: "#/components/schemas/HealthComponentStatus"
        notes:
          type: array
          items:
            type: string
    ReadinessCheckStatus:
      allOf:
        - $ref: "#/components/schemas/HealthCheckStatus"
        - type: object
          properties:
            pending_dependencies:
              type: array
              items:
                type: string
    MetricDefinition:
      type: object
      required: [metric_key, display_name, unit, category, resource_scope, supported_aggregations, default_aggregation]
      properties:
        metric_key:
          type: string
        display_name:
          type: string
        description:
          type: string
        unit:
          type: string
        category:
          type: string
          enum: [performance, reliability, saturation, cost, custom]
        resource_scope:
          type: string
          enum: [global, resource, resource_type, team]
        supported_aggregations:
          type: array
          items:
            type: string
            enum: [avg, max, min, sum, p95, p99]
        default_aggregation:
          type: string
          enum: [avg, max, min, sum, p95, p99]
        warning_threshold:
          type: number
        critical_threshold:
          type: number
        tags:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    TimeSeriesPoint:
      type: object
      required: [timestamp, value]
      properties:
        timestamp:
          type: string
          format: date-time
        value:
          type: number
    MetricTopResource:
      type: object
      required: [resource_id, resource_name, value, status]
      properties:
        resource_id:
          type: string
        resource_name:
          type: string
        resource_type:
          type: string
        value:
          type: number
        status:
          type: string
          enum: [healthy, warning, critical, unknown]
        change_rate:
          type: number
    MetricOverview:
      type: object
      required: [metric_key, display_name, unit, latest_value, status, trend]
      properties:
        metric_key:
          type: string
        display_name:
          type: string
        unit:
          type: string
        latest_value:
          type: number
        status:
          type: string
          enum: [healthy, warning, critical, unknown]
        change_rate:
          type: number
        thresholds:
          type: object
          properties:
            warning:
              type: number
            critical:
              type: number
        last_updated_at:
          type: string
          format: date-time
        trend:
          type: array
          items:
            $ref: "#/components/schemas/TimeSeriesPoint"
        top_resources:
          type: array
          items:
            $ref: "#/components/schemas/MetricTopResource"
        metadata:
          type: object
          additionalProperties: true
    MetricsOverviewResponse:
      type: object
      required: [generated_at, granularity, metrics]
      properties:
        generated_at:
          type: string
          format: date-time
        granularity:
          type: string
        metrics:
          type: array
          items:
            $ref: "#/components/schemas/MetricOverview"
    MetricTimeRange:
      type: object
      required: [start, end, step]
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        step:
          type: string
        timezone:
          type: string
    MetricQueryFilter:
      type: object
      required: [field, operator]
      properties:
        field:
          type: string
        operator:
          type: string
          enum: [equals, not_equals, regex, gt, gte, lt, lte]
        value:
          type: string
    MetricQueryRequest:
      type: object
      required: [metric_key, time_range]
      properties:
        metric_key:
          type: string
        resource_ids:
          type: array
          items:
            type: string
        resource_type:
          type: string
        group_by:
          type: array
          items:
            type: string
        aggregations:
          type: array
          items:
            type: string
            enum: [avg, max, min, sum, p95, p99]
        filters:
          type: array
          items:
            $ref: "#/components/schemas/MetricQueryFilter"
        time_range:
          $ref: "#/components/schemas/MetricTimeRange"
        compare_range:
          $ref: "#/components/schemas/MetricTimeRange"
    MetricSeriesSummary:
      type: object
      required: [min, max, avg, last]
      properties:
        min:
          type: number
        max:
          type: number
        avg:
          type: number
        last:
          type: number
        last_timestamp:
          type: string
          format: date-time
    MetricSeriesResult:
      type: object
      required: [series_id, metric_key, datapoints, summary]
      properties:
        series_id:
          type: string
        metric_key:
          type: string
        resource_id:
          type: string
        resource_name:
          type: string
        group:
          type: object
          additionalProperties: true
        aggregation:
          type: string
          enum: [avg, max, min, sum, p95, p99]
        status:
          type: string
          enum: [healthy, warning, critical, unknown]
        datapoints:
          type: array
          items:
            $ref: "#/components/schemas/TimeSeriesPoint"
        summary:
          $ref: "#/components/schemas/MetricSeriesSummary"
    MetricAnnotation:
      type: object
      required: [timestamp, level, message]
      properties:
        timestamp:
          type: string
          format: date-time
        level:
          type: string
          enum: [info, warning, critical]
        message:
          type: string
        source:
          type: string
    MetricQueryResponse:
      type: object
      required: [query_id, metric_key, unit, generated_at, series]
      properties:
        query_id:
          type: string
        metric_key:
          type: string
        unit:
          type: string
        requested_range:
          $ref: "#/components/schemas/MetricTimeRange"
        compare_range:
          $ref: "#/components/schemas/MetricTimeRange"
        aggregations:
          type: array
          items:
            type: string
            enum: [avg, max, min, sum, p95, p99]
        generated_at:
          type: string
          format: date-time
        series:
          type: array
          items:
            $ref: "#/components/schemas/MetricSeriesResult"
        annotations:
          type: array
          items:
            $ref: "#/components/schemas/MetricAnnotation"
    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string
          format: password
    RefreshRequest:
      type: object
      required: [refresh_token]
      properties:
        refresh_token:
          type: string
    TokenResponse:
      type: object
      required: [access_token, refresh_token, expires_in]
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        token_type:
          type: string
          default: Bearer
        expires_in:
          type: integer
          description: 存取令牌有效秒數。
    UserProfile:
      type: object
      required: [user_id, username, display_name, email, roles]
      properties:
        user_id:
          type: string
        username:
          type: string
        display_name:
          type: string
        email:
          type: string
          format: email
        roles:
          type: array
          items:
            type: string
        teams:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [active, disabled]
        last_login_at:
          type: string
          format: date-time
        avatar_url:
          type: string
          nullable: true
    UserPreference:
      type: object
      required: [theme, language, timezone]
      properties:
        theme:
          type: string
          enum: [light, dark, auto]
        default_landing:
          $ref: "#/components/schemas/DefaultLandingPreference"
        default_page:
          type: string
          description: 已淘汰欄位，僅為相容舊版前端而保留，請改用 `default_landing`。
          deprecated: true
        language:
          type: string
        timezone:
          type: string
        notification_preferences:
          type: object
          properties:
            email_notification:
              type: boolean
            slack_notification:
              type: boolean
            merge_notification:
              type: boolean
        display_options:
          type: object
          properties:
            animation:
              type: boolean
            tooltips:
              type: boolean
            compact_mode:
              type: boolean
        dashboard_preferences:
          $ref: "#/components/schemas/DashboardPreferenceSettings"
    PreferenceUpdateRequest:
      allOf:
        - $ref: "#/components/schemas/UserPreference"
    DefaultLandingPreference:
      description: 設定使用者登入後的預設落地頁面，可選系統頁面或指定儀表板。
      oneOf:
        - $ref: "#/components/schemas/SystemPageLandingPreference"
        - $ref: "#/components/schemas/DashboardLandingPreference"
      discriminator:
        propertyName: type
        mapping:
          system_page: '#/components/schemas/SystemPageLandingPreference'
          dashboard: '#/components/schemas/DashboardLandingPreference'
    SystemPageLandingPreference:
      type: object
      required: [type, page_key]
      properties:
        type:
          type: string
          const: system_page
        page_key:
          type: string
          description: 系統內建頁面識別碼。
          enum: [war_room, incidents, resources, analysis, automation, notifications, dashboards]
    DashboardLandingPreference:
      type: object
      required: [type, dashboard_id]
      properties:
        type:
          type: string
          const: dashboard
        dashboard_id:
          type: string
          format: uuid
        dashboard_name:
          type: string
          description: 儀表板顯示名稱，供前端快取使用。
        dashboard_type:
          $ref: "#/components/schemas/DashboardType"
    DashboardPreferenceSettings:
      type: object
      description: 儀表板相關偏好設定。
      properties:
        auto_refresh_interval_seconds:
          type: integer
          minimum: 0
          description: 自動重新整理間隔秒數，0 代表停用自動刷新。
        auto_save_layout:
          type: boolean
          description: 是否自動儲存儀表板布局變更。
      additionalProperties: false
    SecurityLoginRecord:
      type: object
      required: [login_time, ip_address, device_info, status]
      properties:
        login_time:
          type: string
          format: date-time
        ip_address:
          type: string
        device_info:
          type: string
        status:
          type: string
          enum: [success, failed]
        location:
          type: string
          nullable: true
    GlobalSearchGroup:
      type: object
      required: [type, label, results]
      properties:
        type:
          type: string
          description: 搜尋類型識別，例如 event、resource。
        label:
          type: string
          description: 類型顯示名稱。
        results:
          type: array
          items:
            $ref: "#/components/schemas/GlobalSearchResult"
    GlobalSearchResult:
      type: object
      required: [id, title, url]
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        url:
          type: string
        icon:
          type: string
          nullable: true
        tags:
          type: array
          items:
            type: string
    NotificationSummary:
      type: object
      required: [total, unread, by_severity]
      properties:
        total:
          type: integer
        unread:
          type: integer
        by_severity:
          type: object
          additionalProperties:
            type: integer
        last_updated_at:
          type: string
          format: date-time
    NotificationItem:
      type: object
      required: [notification_id, title, severity, status, created_at]
      properties:
        notification_id:
          type: string
        title:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, warning, info, success]
        category:
          type: string
        status:
          type: string
          enum: [unread, read]
        created_at:
          type: string
          format: date-time
        read_at:
          type: string
          format: date-time
          nullable: true
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: 通知被清除的時間，未被清除時為 NULL。
        link_url:
          type: string
          nullable: true
        actions:
          type: array
          items:
            type: string
    NotificationReadRequest:
      type: object
      properties:
        notification_ids:
          type: array
          description: 要標記為已讀的通知識別碼列表。
          minItems: 1
          items:
            type: string
        mark_all:
          type: boolean
          description: 將所有通知標記為已讀。
        read_at:
          type: string
          format: date-time
      oneOf:
        - required: [notification_ids]
        - required: [mark_all]
          properties:
            mark_all:
              const: true
              type: boolean
    NotificationReadResponse:
      type: object
      required: [summary]
      properties:
        updated_items:
          type: array
          description: 本次更新後的通知條目。
          items:
            $ref: "#/components/schemas/NotificationItem"
        summary:
          $ref: "#/components/schemas/NotificationSummary"
          description: 最新的通知統計摘要。
    NotificationClearRequest:
      type: object
      properties:
        notification_ids:
          type: array
          description: 要清除的通知識別碼列表。
          minItems: 1
          items:
            type: string
        clear_all_read:
          type: boolean
          description: 清除所有已讀通知。
        clear_all:
          type: boolean
          description: 清除所有通知（包含未讀）。
      oneOf:
        - required: [notification_ids]
        - required: [clear_all_read]
          properties:
            clear_all_read:
              const: true
              type: boolean
        - required: [clear_all]
          properties:
            clear_all:
              const: true
              type: boolean
      additionalProperties: false
    NotificationClearResponse:
      type: object
      required: [cleared_count, summary]
      properties:
        cleared_ids:
          type: array
          description: 本次被清除的通知識別碼列表。
          items:
            type: string
        cleared_count:
          type: integer
          description: 成功清除的通知數量。
        summary:
          $ref: "#/components/schemas/NotificationSummary"
          description: 清除操作後最新的通知統計摘要。
    EventSummaryMetrics:
      type: object
      required:
        [active_events, resolved_today, mean_time_to_resolve, automation_rate]
      properties:
        active_events:
          type: object
          properties:
            total:
              type: integer
            critical:
              type: integer
            acknowledged:
              type: integer
        resolved_today:
          type: object
          properties:
            total:
              type: integer
            automated:
              type: integer
            trend:
              type: number
        mean_time_to_resolve:
          type: object
          properties:
            hours:
              type: number
            trend:
              type: number
        automation_rate:
          type: object
          properties:
            percentage:
              type: number
            automated_count:
              type: integer
    EventSummary:
      type: object
      required:
        [event_id, summary, event_source, severity, status, resource_name, trigger_time, priority]
      properties:
        event_id:
          type: string
        event_key:
          type: string
          nullable: true
        summary:
          type: string
        event_source:
          type: string
          enum: [grafana_webhook, platform_internal, manual_created]
          description: 事件來源分類，用於區分 Grafana Webhook、平台內部與人工建立事件。
        source:
          type: string
          description: 事件來源，例如監控系統名稱。
          nullable: true
        description:
          type: string
        severity:
          type: string
          enum: [critical, warning, info]
        status:
          type: string
          enum: [new, acknowledged, in_progress, resolved, silenced]
        priority:
          type: string
          enum: [P0, P1, P2, P3]
          description: 事件處理優先級，P0 為最高。
        resource_id:
          type: string
          nullable: true
        rule_uid:
          type: string
          nullable: true
          description: 觸發該事件的 Grafana 告警規則 UID。
        resource_name:
          type: string
          nullable: true
        service_impact:
          type: string
          nullable: true
        rule_name:
          type: string
          nullable: true
        trigger_threshold:
          type: string
          nullable: true
        assignee_id:
          type: string
          nullable: true
          description: 事件目前的處理人員識別碼。
        assignee:
          type: string
          nullable: true
        trigger_time:
          type: string
          format: date-time
        tags:
          type: array
          items:
            type: string
    CreateEventRequest:
      type: object
      required: [summary, severity, status, trigger_time]
      properties:
        summary:
          type: string
        description:
          type: string
        event_source:
          type: string
          enum: [grafana_webhook, platform_internal, manual_created]
          default: platform_internal
          description: 建立事件時指定來源類型，預設為平台內部建立。
        source:
          type: string
          description: 事件來源描述，例如外部監控系統名稱。
          nullable: true
        severity:
          type: string
          enum: [critical, warning, info]
        status:
          type: string
          enum: [new, acknowledged, in_progress, resolved, silenced]
        priority:
          type: string
          enum: [P0, P1, P2, P3]
          default: P2
        resource_id:
          type: string
        rule_uid:
          type: string
          description: Grafana 告警規則 UID。
        service_impact:
          type: string
        trigger_threshold:
          type: string
        trigger_value:
          type: string
        unit:
          type: string
        trigger_time:
          type: string
          format: date-time
        assignee_id:
          type: string
        notes:
          type: string
          description: 事件備註說明，通常由人工填寫補充資訊。
        metadata:
          type: object
          additionalProperties: true
    UpdateEventRequest:
      type: object
      properties:
        event_source:
          type: string
          enum: [grafana_webhook, platform_internal, manual_created]
          description: 更新事件來源分類，通常用於人工補登或資料修正。
        status:
          type: string
          enum: [new, acknowledged, in_progress, resolved, silenced]
        assignee_id:
          type: string
        priority:
          type: string
          enum: [P0, P1, P2, P3]
        acknowledged_at:
          type: string
          format: date-time
        resolved_at:
          type: string
          format: date-time
        notes:
          type: string
          description: 更新事件備註內容，若傳入空字串則清除備註。
        source:
          type: string
        service_impact:
          type: string
        tags:
          type: array
          items:
            type: string
        metadata:
          type: object
          additionalProperties: true
    CreateEventTimelineEntryRequest:
      type: object
      required: [entry_type, message]
      properties:
        entry_type:
          type: string
          enum: [status_change, note, automation, notification]
        message:
          type: string
        metadata:
          type: object
          additionalProperties: true
    GenerateEventReportRequest:
      type: object
      required: [event_ids]
      properties:
        event_ids:
          type: array
          minItems: 1
          items:
            type: string
        include_timeline:
          type: boolean
          default: false
        title:
          type: string
    GenerateEventReportResponse:
      type: object
      required: [report_id, generated_at, summary, event_ids]
      properties:
        report_id:
          type: string
        generated_at:
          type: string
          format: date-time
        title:
          type: string
        event_ids:
          type: array
          items:
            type: string
        severity_breakdown:
          type: object
          additionalProperties:
            type: integer
        priority_breakdown:
          type: object
          additionalProperties:
            type: integer
        summary:
          type: string
        root_causes:
          type: array
          items:
            type: string
        impacts:
          type: array
          items:
            type: string
        recommendations:
          type: array
          items:
            $ref: "#/components/schemas/AIInsightSuggestion"
        timeline_highlights:
          type: array
          items:
            $ref: "#/components/schemas/EventReportTimelineHighlight"
    EventDetail:
      allOf:
        - $ref: "#/components/schemas/EventSummary"
        - type: object
          properties:
            trigger_value:
              type: string
              nullable: true
            unit:
              type: string
              nullable: true
            acknowledged_at:
              type: string
              format: date-time
              nullable: true
            resolved_at:
              type: string
              format: date-time
              nullable: true
            notes:
              type: string
              nullable: true
              description: 事件備註內容。
            timeline:
              type: array
              items:
                $ref: "#/components/schemas/EventTimelineEntry"
            related_events:
              type: array
              items:
                $ref: "#/components/schemas/EventRelatedItem"
            automation_executions:
              type: array
              items:
                $ref: "#/components/schemas/AutomationExecutionSummary"
            analysis:
              $ref: "#/components/schemas/EventAnalysisReport"
            metadata:
              type: object
              additionalProperties: true
    EventReportTimelineHighlight:
      type: object
      required: [event_id, event_summary, items]
      properties:
        event_id:
          type: string
        event_summary:
          type: string
        items:
          type: array
          items:
            $ref: "#/components/schemas/EventTimelineEntry"
    EventTimelineEntry:
      type: object
      required: [entry_id, event_id, entry_type, message, created_at]
      properties:
        entry_id:
          type: string
        event_id:
          type: string
        entry_type:
          type: string
          enum: [status_change, note, automation, notification]
        message:
          type: string
        created_by:
          type: string
        created_at:
          type: string
          format: date-time
        metadata:
          type: object
          additionalProperties: true
    EventRelatedItem:
      type: object
      required: [event_id, relationship, summary]
      properties:
        event_id:
          type: string
        relationship:
          type: string
        summary:
          type: string
        severity:
          type: string
          enum: [critical, warning, info]
        status:
          type: string
          enum: [new, acknowledged, in_progress, resolved, silenced]
        trigger_time:
          type: string
          format: date-time
    EventActionRequest:
      type: object
      required: [action]
      properties:
        action:
          type: string
          enum: [acknowledge, assign, resolve]
        assignee_id:
          type: string
          description: 當 action 為 assign 或 acknowledge 時可指定接手人。
        note:
          type: string
          description: 操作備註。
        resolved_at:
          type: string
          format: date-time
          description: 當 action 為 resolve 時可覆寫結束時間。
        resolution_note:
          type: string
          description: 當 action 為 resolve 時填寫的結案說明。
    EventAnalysisReport:
      type: object
      required: [event_id, generated_at, root_cause, confidence]
      properties:
        event_id:
          type: string
        generated_at:
          type: string
          format: date-time
        summary:
          type: string
        root_cause:
          type: string
        confidence:
          type: number
        impact_analysis:
          type: string
        recommendations:
          type: array
          items:
            $ref: "#/components/schemas/AIInsightSuggestion"
    QuickSilenceRequest:
      type: object
      required: [duration_hours]
      properties:
        scope:
          type: string
          enum: [event, resource, team]
          default: event
        matchers:
          type: array
          items:
            $ref: "#/components/schemas/SilenceMatcher"
        duration_hours:
          type: integer
          enum: [1, 2, 4, 8, 12, 24]
        reason:
          type: string
        notify_on_end:
          type: boolean
    ResourceFilter:
      type: object
      required: [type, key, operator]
      properties:
        type:
          type: string
          description: 篩選條件類型，tag 代表資源標籤，resource 代表單一資源，resource_group 代表資源群組。
          enum: [tag, resource, resource_group, service]
        key:
          type: string
          description: 當 type=tag 時表示標籤鍵值；其餘情境用於標識欄位名稱。
        operator:
          type: string
          description: 條件運算子。
          enum: [equals, not_equals, regex, in, not_in]
        value:
          type: string
          nullable: true
          description: 單一條件值，當 values 有多個值時可為空。
        values:
          type: array
          items:
            type: string
          nullable: true
          description: 多選條件值，適用於 in/not_in 運算子。
    EventRuleTemplate:
      type: object
      required: [template_key, name, severity, default_priority, condition_groups]
      properties:
        template_key:
          type: string
        name:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, warning, info]
        default_priority:
          type: string
          enum: [P0, P1, P2, P3]
        labels:
          type: array
          items:
            type: string
        environments:
          type: array
          items:
            type: string
        default_target_summary:
          type: string
          description: 預設監控對象摘要文字，協助清單與預覽顯示。
        default_resource_filters:
          type: array
          items:
            $ref: "#/components/schemas/ResourceFilter"
        condition_groups:
          type: array
          items:
            $ref: "#/components/schemas/ConditionGroup"
        title_template:
          type: string
        content_template:
          type: string
        suggested_script_id:
          type: string
          nullable: true
          description: 建議搭配的自動化腳本識別碼，可協助前端顯示提示用語。
    EventRuleSyncStatus:
      type: string
      description: 事件規則資料的同步狀態，標示是否為即時資料或快取結果。
      enum: [fresh, stale, failed]
    EventRuleSummary:
      type: object
      required: [rule_uid, name, severity, enabled, creator, last_updated, sync_status, target]
      properties:
        rule_uid:
          type: string
          description: Grafana 告警規則 UID。
        name:
          type: string
        description:
          type: string
        severity:
          type: string
          enum: [critical, warning, info]
        enabled:
          type: boolean
        automation_enabled:
          type: boolean
        default_priority:
          type: string
          enum: [P0, P1, P2, P3]
          description: 透過此規則產生事件時套用的預設優先級。
        template_key:
          type: string
          nullable: true
          description: 若規則來自快速套用範本，回傳範本鍵值以利顯示。
        target:
          type: string
          description: 監控對象摘要文字，供事件規則列表顯示使用。
        creator:
          type: string
          description: 規則建立者，若 Grafana 暫不可用則使用快取的建立者資訊。
        last_updated:
          type: string
          format: date-time
          description: 規則最後更新時間，來源為 Grafana 回傳值或本地快取記錄。
        last_synced_at:
          type: string
          format: date-time
          nullable: true
          description: 最近一次成功同步 Grafana 規則的時間；若為 null 代表僅有快取資料。
        sync_status:
          $ref: "#/components/schemas/EventRuleSyncStatus"
    RuleCondition:
      type: object
      required: [metric, operator, threshold]
      properties:
        metric:
          type: string
        operator:
          type: string
          enum: [">", "<", ">=", "<="]
        threshold:
          type: number
        duration_minutes:
          type: integer
        severity:
          type: string
          enum: [critical, warning, info]
    ConditionGroup:
      type: object
      required: [logic, conditions]
      properties:
        logic:
          type: string
          enum: [AND, OR]
        conditions:
          type: array
          items:
            $ref: "#/components/schemas/RuleCondition"
    AutomationSetting:
      type: object
      properties:
        enabled:
          type: boolean
        script_id:
          type: string
          nullable: true
        parameters:
          type: object
          additionalProperties: true
    EventRuleDetail:
      allOf:
        - $ref: "#/components/schemas/EventRuleSummary"
        - type: object
          properties:
            template_key:
              type: string
              nullable: true
            description:
              type: string
            labels:
              type: array
              items:
                type: string
            environments:
              type: array
              items:
                type: string
            target:
              type: string
              description: 監控對象摘要文字，供表單預覽使用。
            resource_filters:
              type: array
              items:
                $ref: "#/components/schemas/ResourceFilter"
            condition_groups:
              type: array
              items:
                $ref: "#/components/schemas/ConditionGroup"
            title_template:
              type: string
            content_template:
              type: string
            automation:
              $ref: "#/components/schemas/AutomationSetting"
    EventRulePayload:
      type: object
      required: [name, severity, condition_groups]
      properties:
        name:
          type: string
        description:
          type: string
        template_key:
          type: string
          nullable: true
        severity:
          type: string
          enum: [critical, warning, info]
        default_priority:
          type: string
          enum: [P0, P1, P2, P3]
        enabled:
          type: boolean
          default: true
        automation_enabled:
          type: boolean
        target:
          type: string
          description: 監控對象摘要文字，若省略則依據 resource_filters 自動生成。
        resource_filters:
          type: array
          items:
            $ref: "#/components/schemas/ResourceFilter"
        labels:
          type: array
          items:
            type: string
        environments:
          type: array
          items:
            type: string
        condition_groups:
          type: array
          items:
            $ref: "#/components/schemas/ConditionGroup"
        title_template:
          type: string
        content_template:
          type: string
        automation:
          $ref: "#/components/schemas/AutomationSetting"
    CreateEventRuleRequest:
      $ref: "#/components/schemas/EventRulePayload"
    UpdateEventRuleRequest:
      $ref: "#/components/schemas/EventRulePayload"
    ToggleEnabledRequest:
      type: object
      properties:
        enabled:
          type: boolean
          description: |-
            為 true 時啟用目標資源，為 false 時停用；若未提供則改以 status 或反轉現有狀態。
        status:
          type: string
          enum: [enabled, disabled]
          description: 供自動化排程直接指定狀態使用，會同步更新 enabled 布林值。
    TestEventRuleRequest:
      type: object
      properties:
        sample_payload:
          type: object
          additionalProperties: true
    TestEventRuleResponse:
      type: object
      required: [matches, preview_event]
      properties:
        matches:
          type: boolean
        preview_event:
          $ref: "#/components/schemas/EventSummary"
        messages:
          type: array
          items:
            type: string
    SilenceMatcher:
      type: object
      required: [matcher_key, matcher_value]
      properties:
        matcher_key:
          type: string
        operator:
          type: string
          enum: [equals, regex]
        matcher_value:
          type: string
    SilenceSchedule:
      type: object
      properties:
        starts_at:
          type: string
          format: date-time
        ends_at:
          type: string
          format: date-time
        timezone:
          type: string
        repeat:
          type: object
          properties:
            frequency:
              type: string
              enum: [daily, weekly, monthly]
            days:
              type: array
              items:
                type: string
            until:
              type: string
              format: date-time
            occurrences:
              type: integer
    SilenceRuleSummary:
      type: object
      required: [silence_id, name, silence_type, enabled]
      properties:
        silence_id:
          type: string
        name:
          type: string
        description:
          type: string
        silence_type:
          type: string
          enum: [single, repeat, condition]
        scope:
          type: string
          enum: [global, resource, team, tag, event]
        enabled:
          type: boolean
        created_at:
          type: string
          format: date-time
        event_id:
          type: string
          nullable: true
    SilenceRuleDetail:
      allOf:
        - $ref: "#/components/schemas/SilenceRuleSummary"
        - type: object
          properties:
            schedule:
              $ref: "#/components/schemas/SilenceSchedule"
            matchers:
              type: array
              items:
                $ref: "#/components/schemas/SilenceMatcher"
            notify_on_start:
              type: boolean
            notify_on_end:
              type: boolean
            created_by:
              type: string
    SilenceRulePayload:
      type: object
      required: [name, silence_type, scope, schedule, matchers]
      properties:
        name:
          type: string
        description:
          type: string
        silence_type:
          type: string
          enum: [single, repeat, condition]
        scope:
          type: string
          enum: [global, resource, team, tag, event]
        enabled:
          type: boolean
        event_id:
          type: string
          nullable: true
        schedule:
          $ref: "#/components/schemas/SilenceSchedule"
        matchers:
          type: array
          items:
            $ref: "#/components/schemas/SilenceMatcher"
        notify_on_start:
          type: boolean
        notify_on_end:
          type: boolean
    CreateSilenceRuleRequest:
      $ref: "#/components/schemas/SilenceRulePayload"
    UpdateSilenceRuleRequest:
      $ref: "#/components/schemas/SilenceRulePayload"
    ResourceSummaryMetrics:
      type: object
      required: [total_resources, healthy, warning, critical, groups]
      properties:
        total_resources:
          type: integer
        healthy:
          type: integer
        warning:
          type: integer
        critical:
          type: integer
        groups:
          type: integer
    ResourceTag:
      type: object
      required: [tag_value_id, key, value]
      properties:
        tag_id:
          type: string
        tag_value_id:
          type: string
        key:
          type: string
        value:
          type: string
        assigned_at:
          type: string
          format: date-time
          nullable: true
    ResourceTagAssignment:
      type: object
      required: [tag_value_id]
      properties:
        tag_value_id:
          type: string
        tag_id:
          type: string
          nullable: true
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
    ResourceSummary:
      type: object
      required:
        [resource_id, name, status, type, ip_address, cpu_usage, memory_usage]
      properties:
        resource_id:
          type: string
        name:
          type: string
        status:
          type: string
          enum: [healthy, warning, critical, offline]
        type:
          type: string
          enum: [server, database, cache, gateway, service]
        ip_address:
          type: string
        location:
          type: string
        environment:
          type: string
        team_id:
          type: string
          nullable: true
          description: 資源所屬團隊的唯一識別碼。
        team:
          type: string
          nullable: true
          description: 顯示用的團隊名稱。
        os:
          type: string
        cpu_usage:
          type: number
        memory_usage:
          type: number
        disk_usage:
          type: number
        network_in_mbps:
          type: number
        network_out_mbps:
          type: number
        service_impact:
          type: string
          nullable: true
        tags:
          type: array
          items:
            $ref: "#/components/schemas/ResourceTag"
        last_event_count:
          type: integer
        updated_at:
          type: string
          format: date-time
        groups:
          type: array
          items:
            $ref: "#/components/schemas/ResourceGroupRef"
    CreateResourceRequest:
      type: object
      required: [name, status, type, ip_address]
      properties:
        name:
          type: string
        status:
          type: string
          enum: [healthy, warning, critical, offline]
        type:
          type: string
          enum: [server, database, cache, gateway, service]
        ip_address:
          type: string
        location:
          type: string
        environment:
          type: string
        team_id:
          type: string
          description: 資源負責團隊的唯一識別碼。
        team:
          type: string
          description: 顯示用途的團隊名稱，後端會依 team_id 優先處理。
        os:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/ResourceTagAssignment"
        group_ids:
          type: array
          description: 要加入的資源群組識別碼列表。
          items:
            type: string
    UpdateResourceRequest:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
          enum: [healthy, warning, critical, offline]
        type:
          type: string
          enum: [server, database, cache, gateway, service]
        ip_address:
          type: string
        location:
          type: string
        environment:
          type: string
        team_id:
          type: string
        team:
          type: string
        os:
          type: string
        service_impact:
          type: string
        notes:
          type: string
        tags:
          type: array
          items:
            $ref: "#/components/schemas/ResourceTagAssignment"
        group_ids:
          type: array
          description: 更新後應屬於的資源群組識別碼列表。
          items:
            type: string
    ResourceMetric:
      type: object
      required: [metric, points]
      properties:
        metric:
          type: string
        unit:
          type: string
        points:
          type: array
          items:
            $ref: "#/components/schemas/TimeSeriesPoint"
    ResourceDetail:
      allOf:
        - $ref: "#/components/schemas/ResourceSummary"
        - type: object
          properties:
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
            groups:
              type: array
              items:
                $ref: "#/components/schemas/ResourceGroupRef"
            notes:
              type: string
            silences:
              type: array
              items:
                $ref: "#/components/schemas/SilenceRuleDetail"
    ResourceGroupRef:
      type: object
      required: [group_id, group_name]
      properties:
        group_id:
          type: string
        group_name:
          type: string
    ResourceGroupSummary:
      type: object
      required: [group_id, name, member_count, subscriber_count]
      properties:
        group_id:
          type: string
        name:
          type: string
        description:
          type: string
        owner_team_id:
          type: string
          nullable: true
          description: 群組擁有者團隊的唯一識別碼。
        owner_team:
          type: string
          nullable: true
          description: 顯示用途的團隊名稱。
        member_count:
          type: integer
        subscriber_count:
          type: integer
        status_summary:
          type: object
          additionalProperties:
            type: integer
        created_at:
          type: string
          format: date-time
      ResourceGroupMember:
        type: object
        required: [resource_id, name, type, status]
        properties:
          resource_id:
            type: string
          name:
            type: string
          type:
            type: string
            enum: [server, database, cache, gateway, service]
          status:
            type: string
            enum: [healthy, warning, critical, offline]
    ResourceGroupSubscriber:
      type: object
      required: [user_id, display_name]
      properties:
        user_id:
          type: string
        display_name:
          type: string
        subscribed_at:
          type: string
          format: date-time
    CreateResourceGroupRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
        description:
          type: string
        owner_team_id:
          type: string
          description: 群組擁有者團隊的唯一識別碼。
        owner_team:
          type: string
          description: 顯示用途的團隊名稱。
        resource_ids:
          type: array
          items:
            type: string
        subscriber_ids:
          type: array
          items:
            type: string
    UpdateResourceGroupRequest:
      allOf:
        - $ref: "#/components/schemas/CreateResourceGroupRequest"
    ResourceGroupDetail:
      allOf:
        - $ref: "#/components/schemas/ResourceGroupSummary"
        - type: object
          properties:
            members:
              type: array
              items:
                $ref: "#/components/schemas/ResourceGroupMember"
            subscribers:
              type: array
              items:
                $ref: "#/components/schemas/ResourceGroupSubscriber"
    TopologyNode:
      type: object
      required: [id, name, type, status]
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        status:
          type: string
          enum: [healthy, warning, critical, offline]
        icon:
          type: string
        metrics:
          type: object
          additionalProperties: true
      TopologyEdge:
        type: object
        required: [source, target]
        properties:
          source:
            type: string
          target:
            type: string
          relation:
            type: string
          traffic_level:
            type: number
          metadata:
            type: object
            additionalProperties: true
    TopologyGraph:
      type: object
      required: [nodes, edges]
      properties:
        nodes:
          type: array
          items:
            $ref: "#/components/schemas/TopologyNode"
        edges:
          type: array
          items:
            $ref: "#/components/schemas/TopologyEdge"
    DashboardType:
      type: string
      enum: [built_in, grafana]
      description: 儀表板來源類型，built_in 代表平台內建，grafana 代表外部 Grafana 儀表板。
    DashboardSummaryMetrics:
      type: object
      required: [totals, kpi_cards]
      properties:
        totals:
          type: object
          required: [total, built_in, grafana, published, featured, automated]
          properties:
            total:
              type: integer
              description: 儀表板總數。
            built_in:
              type: integer
              description: 內建儀表板數量。
            grafana:
              type: integer
              description: 連結至 Grafana 的儀表板數量。
            published:
              type: integer
              description: 已發布的儀表板數量。
            featured:
              type: integer
              description: 標記為精選的儀表板數量。
            automated:
              type: integer
              description: 啟用自動化資料更新的儀表板數量。
        kpi_cards:
          type: array
          description: 儀表板首頁顯示的 KPI 卡片集合 (如活躍用戶、戰情室數量)。
          items:
            $ref: "#/components/schemas/DashboardKPI"
    DashboardSummary:
      type: object
      required: [dashboard_id, name, category, owner, status, updated_at, dashboard_type]
      properties:
        dashboard_id:
          type: string
        name:
          type: string
        description:
          type: string
        category:
          type: string
        dashboard_type:
          $ref: "#/components/schemas/DashboardType"
        grafana_dashboard_uid:
          type: string
          nullable: true
          description: Grafana 儀表板的 UID，僅當 dashboard_type 為 grafana 時提供。
        grafana_folder_uid:
          type: string
          nullable: true
          description: Grafana 資料夾 UID，僅當 dashboard_type 為 grafana 時提供。
        owner:
          type: string
        tags:
          type: array
          items:
            type: string
        data_sources:
          type: array
          items:
            type: string
        viewer_count:
          type: integer
        favorite_count:
          type: integer
        panel_count:
          type: integer
        status:
          type: string
          enum: [draft, published]
        is_default:
          type: boolean
        is_featured:
          type: boolean
        target_page_key:
          type: string
        updated_at:
          type: string
          format: date-time
    DashboardKPI:
      type: object
      required: [label, value]
      properties:
        label:
          type: string
        value:
          type: string
        trend:
          type: number
        category:
          type: string
          description: 代表的業務範疇 (例如 活躍用戶、SRE 戰情室)。
          nullable: true
    DashboardWidget:
      type: object
      required: [widget_id, type, title]
      properties:
        widget_id:
          type: string
        type:
          type: string
        title:
          type: string
        config:
          type: object
          additionalProperties: true
        position:
          type: object
          properties:
            x:
              type: integer
            y:
              type: integer
            w:
              type: integer
            h:
              type: integer
    CreateDashboardRequest:
      type: object
      required: [name, category, dashboard_type]
      properties:
        name:
          type: string
        category:
          type: string
        dashboard_type:
          $ref: "#/components/schemas/DashboardType"
        description:
          type: string
        owner_id:
          type: string
        tags:
          type: array
          items:
            type: string
        data_sources:
          type: array
          items:
            type: string
        grafana_dashboard_uid:
          type: string
          description: 連結 Grafana 儀表板時必填的 UID。
        grafana_folder_uid:
          type: string
          description: Grafana 儀表板所在資料夾 UID。
        grafana_url:
          type: string
          description: Grafana 儀表板的原始分享 URL。
        grafana_embed_options:
          type: object
          additionalProperties: true
          description: Grafana iframe 參數（例如 kiosk、refresh、var-*）。
        target_page_key:
          type: string
        layout:
          type: array
          items:
            $ref: "#/components/schemas/DashboardWidget"
        kpis:
          type: array
          items:
            $ref: "#/components/schemas/DashboardKPI"
      allOf:
        - if:
            properties:
              dashboard_type:
                const: grafana
          then:
            required: [grafana_dashboard_uid]
    UpdateDashboardRequest:
      type: object
      properties:
        name:
          type: string
        category:
          type: string
        dashboard_type:
          $ref: "#/components/schemas/DashboardType"
        description:
          type: string
        owner_id:
          type: string
        tags:
          type: array
          items:
            type: string
        data_sources:
          type: array
          items:
            type: string
        grafana_dashboard_uid:
          type: string
        grafana_folder_uid:
          type: string
        grafana_url:
          type: string
        grafana_embed_options:
          type: object
          additionalProperties: true
        target_page_key:
          type: string
        layout:
          type: array
          items:
            $ref: "#/components/schemas/DashboardWidget"
        kpis:
          type: array
          items:
            $ref: "#/components/schemas/DashboardKPI"
        is_default:
          type: boolean
        status:
          type: string
          enum: [draft, published]
      allOf:
        - if:
            properties:
              dashboard_type:
                const: grafana
          then:
            required: [grafana_dashboard_uid]
    DashboardDetail:
      allOf:
        - $ref: "#/components/schemas/DashboardSummary"
        - type: object
          properties:
            description:
              type: string
            owner_id:
              type: string
            layout:
              type: array
              items:
                $ref: "#/components/schemas/DashboardWidget"
            kpis:
              type: array
              items:
                $ref: "#/components/schemas/DashboardKPI"
            is_default:
              type: boolean
            published_at:
              type: string
              format: date-time
              nullable: true
            grafana_url:
              type: string
              nullable: true
              description: Grafana 儀表板原始連結，僅於 dashboard_type 為 grafana 時提供。
            grafana_embed_options:
              type: object
              nullable: true
              description: Grafana 嵌入設定，例如時間範圍或 kiosk 模式參數。
              additionalProperties: true
    CapacitySummary:
      type: object
      required: [total_datapoints, avg_utilization, peak_usage, headroom, forecast_horizon_days, accuracy]
      properties:
        total_datapoints:
          type: integer
          description: 納入分析的資料點總數。
        avg_utilization:
          type: number
          description: 指標平均使用率 (百分比)。
        peak_usage:
          type: number
          description: 觀察期間的峰值使用率 (百分比)。
        headroom:
          type: number
          description: 與預測需求相比的容量餘裕 (百分比)。
        forecast_horizon_days:
          type: integer
          description: 預測涵蓋的天數。
        processing_time_ms:
          type: integer
          description: 產生報告所需時間 (毫秒)。
        accuracy:
          type: number
          description: 模型準確度 (0-1)。
    CapacityForecast:
      type: object
      required: [metric, current_usage, forecast_usage, series]
      properties:
        metric:
          type: string
        current_usage:
          type: number
        forecast_usage:
          type: number
        series:
          type: array
          items:
            $ref: "#/components/schemas/TimeSeriesPoint"
        best_case:
          type: array
          items:
            $ref: "#/components/schemas/TimeSeriesPoint"
        worst_case:
          type: array
          items:
            $ref: "#/components/schemas/TimeSeriesPoint"
    OptimizationSuggestion:
      type: object
      required: [title, impact, effort]
      properties:
        title:
          type: string
        description:
          type: string
        impact:
          type: string
        effort:
          type: string
        cost_saving:
          type: number
          description: "預估成本節省 (單位: USD)。"
    CapacityAnalysisReport:
      type: object
      required: [report_id, generated_at, time_range, summary, forecasts, suggestions]
      properties:
        report_id:
          type: string
        generated_at:
          type: string
          format: date-time
        time_range:
          type: string
        model:
          type: string
        summary:
          $ref: "#/components/schemas/CapacitySummary"
        forecasts:
          type: array
          items:
            $ref: "#/components/schemas/CapacityForecast"
        suggestions:
          type: array
          items:
            $ref: "#/components/schemas/OptimizationSuggestion"
    ResourceLoadSummary:
      type: object
      required: [avg_cpu, avg_memory, avg_disk, avg_network]
      properties:
        avg_cpu:
          type: number
        avg_memory:
          type: number
        avg_disk:
          type: number
        avg_network:
          type: number
        anomalies_detected:
          type: integer
        granularity:
          type: string
          description: 此批摘要對應的彙總粒度。
    ResourceLoadRow:
      type: object
      required: [resource_id, resource_name, avg_cpu, avg_memory]
      properties:
        resource_id:
          type: string
        resource_name:
          type: string
        collected_at:
          type: string
          format: date-time
          description: 對應 `resource_metrics` 中彙總資料的時間戳。
        granularity:
          type: string
          description: 彙總粒度 (raw、1m、5m、1h、1d)。
        avg_cpu:
          type: number
        avg_memory:
          type: number
        disk_read:
          type: number
        disk_write:
          type: number
        net_in:
          type: number
        net_out:
          type: number
        anomaly_count:
          type: integer
    AIInsightSuggestion:
      type: object
      required: [title, priority]
      properties:
        title:
          type: string
        priority:
          type: string
          enum: [high, medium, low]
        description:
          type: string
        action_url:
          type: string
          nullable: true
    AIInsightReport:
      type: object
      required: [report_id, generated_at, predicted_events, accuracy]
      properties:
        report_id:
          type: string
        generated_at:
          type: string
          format: date-time
        analysis_type:
          type: string
        predicted_events:
          type: integer
        accuracy:
          type: number
        impact_range:
          type: string
        summary:
          type: string
        suggestions:
          type: array
          items:
            $ref: "#/components/schemas/AIInsightSuggestion"
    AutomationScriptSummary:
      type: object
      required: [script_id, name, type, version]
      properties:
        script_id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [shell, python, ansible, terraform]
        description:
          type: string
        version:
          type: string
        last_execution_status:
          type: string
          enum: [success, failed, running, never]
        updated_at:
          type: string
          format: date-time
    AutomationScriptPayload:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum: [shell, python, ansible, terraform]
        description:
          type: string
        content:
          type: string
        tags:
          type: array
          items:
            type: string
        version:
          type: string
    CreateAutomationScriptRequest:
      allOf:
        - $ref: "#/components/schemas/AutomationScriptPayload"
        - type: object
          required: [name, type, content]
    UpdateAutomationScriptRequest:
      $ref: "#/components/schemas/AutomationScriptPayload"
    AutomationScriptVersion:
      type: object
      required: [version_id, version, created_at]
      properties:
        version_id:
          type: string
        version:
          type: string
        created_at:
          type: string
          format: date-time
        created_by:
          type: string
        changelog:
          type: string
    AutomationScriptDetail:
      allOf:
        - $ref: "#/components/schemas/AutomationScriptSummary"
        - type: object
          properties:
            content:
              type: string
            tags:
              type: array
              items:
                type: string
            versions:
              type: array
              items:
                $ref: "#/components/schemas/AutomationScriptVersion"
    ExecuteScriptRequest:
      type: object
      properties:
        parameters:
          type: object
          additionalProperties: true
        trigger_source:
          type: string
          enum: [manual, event_rule, schedule]
    ExecuteScriptResponse:
      type: object
      required: [execution_id, status]
      properties:
        execution_id:
          type: string
        status:
          type: string
          enum: [pending, running]
        queued_at:
          type: string
          format: date-time
    AutomationScheduleSummary:
      type: object
      required: [schedule_id, name, status, next_run_time]
      properties:
        schedule_id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [one_time, recurring]
        status:
          type: string
          enum: [enabled, disabled, running]
        cron_expression:
          type: string
        next_run_time:
          type: string
          format: date-time
        script_id:
          type: string
        script_name:
          type: string
    AutomationSchedulePayload:
      type: object
      properties:
        name:
          type: string
        script_id:
          type: string
        type:
          type: string
          enum: [one_time, recurring]
        cron_expression:
          type: string
        timezone:
          type: string
        status:
          type: string
          enum: [enabled, disabled]
        concurrency_policy:
          type: string
          enum: [allow, forbid]
        retry_policy:
          type: object
          properties:
            max_retries:
              type: integer
            interval_seconds:
              type: integer
        notify_on_success:
          type: boolean
        notify_on_failure:
          type: boolean
        channels:
          type: array
          items:
            type: string
    CreateAutomationScheduleRequest:
      allOf:
        - $ref: "#/components/schemas/AutomationSchedulePayload"
        - type: object
          required: [name, script_id, type]
    UpdateAutomationScheduleRequest:
      $ref: "#/components/schemas/AutomationSchedulePayload"
    AutomationScheduleDetail:
      allOf:
        - $ref: "#/components/schemas/AutomationScheduleSummary"
        - type: object
          properties:
            timezone:
              type: string
            concurrency_policy:
              type: string
            retry_policy:
              type: object
              properties:
                max_retries:
                  type: integer
                interval_seconds:
                  type: integer
            notify_on_success:
              type: boolean
            notify_on_failure:
              type: boolean
            channels:
              type: array
              items:
                type: string
            last_run_time:
              type: string
              format: date-time
              nullable: true
    AutomationExecutionSummary:
      type: object
      required: [execution_id, script_name, status, start_time]
      properties:
        execution_id:
          type: string
        script_id:
          type: string
          nullable: true
        script_name:
          type: string
        status:
          type: string
          enum: [pending, running, success, failed, cancelled]
        trigger_source:
          type: string
          enum: [manual, event_rule, schedule]
        triggered_by:
          type: string
          nullable: true
        start_time:
          type: string
          format: date-time
        duration_ms:
          type: integer
    AutomationExecutionDetail:
      allOf:
        - $ref: "#/components/schemas/AutomationExecutionSummary"
        - type: object
          properties:
            end_time:
              type: string
              format: date-time
              nullable: true
            parameters:
              type: object
              additionalProperties: true
            stdout:
              type: string
            stderr:
              type: string
            error_message:
              type: string
            related_event_ids:
              type: array
              items:
                type: string
            attempt_count:
              type: integer
    RetryExecutionRequest:
      type: object
      properties:
        force:
          type: boolean
    IAMUserSummary:
      type: object
      required: [user_id, username, display_name, email, status]
      properties:
        user_id:
          type: string
        username:
          type: string
        display_name:
          type: string
        email:
          type: string
          format: email
        status:
          type: string
          enum: [active, disabled]
        teams:
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            type: string
        last_login:
          type: string
          format: date-time
    UpdateIAMUserRequest:
      type: object
      properties:
        role_ids:
          type: array
          items:
            type: string
        team_ids:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [active, disabled]
    CreateIAMInvitationRequest:
      type: object
      required: [email]
      properties:
        email:
          type: string
          format: email
        name:
          type: string
    IAMInvitationResponse:
      type: object
      required: [invitation_id, status, email, invited_at, last_sent_at]
      properties:
        invitation_id:
          type: string
        status:
          type: string
          enum: [invitation_sent, accepted, expired, cancelled]
        email:
          type: string
          format: email
        name:
          type: string
          nullable: true
        invited_by:
          type: string
          nullable: true
          description: 發送邀請者的使用者識別碼。
        invited_by_name:
          type: string
          nullable: true
          description: 發送邀請者的顯示名稱，供列表顯示。
        invited_at:
          type: string
          format: date-time
        expires_at:
          type: string
          format: date-time
          nullable: true
        accepted_at:
          type: string
          format: date-time
          nullable: true
        last_sent_at:
          type: string
          format: date-time
    IAMUserDetail:
      allOf:
        - $ref: "#/components/schemas/IAMUserSummary"
        - type: object
          properties:
            created_at:
              type: string
              format: date-time
            updated_at:
              type: string
              format: date-time
    TeamSummary:
      type: object
      required: [team_id, name]
      properties:
        team_id:
          type: string
        name:
          type: string
        description:
          type: string
        owner:
          type: string
        member_ids:
          type: array
          description: 成員識別碼列表。
          items:
            type: string
        subscribers:
          type: array
          description: 訂閱對象 (可包含人員與外部管道)。
          items:
            $ref: "#/components/schemas/TeamSubscriber"
        created_at:
          type: string
          format: date-time
    CreateTeamRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
        description:
          type: string
        owner_id:
          type: string
        member_ids:
          type: array
          items:
            type: string
        subscribers:
          type: array
          items:
            $ref: "#/components/schemas/TeamSubscriberInput"
    UpdateTeamRequest:
      allOf:
        - $ref: "#/components/schemas/CreateTeamRequest"
    TeamDetail:
      allOf:
        - $ref: "#/components/schemas/TeamSummary"
        - type: object
          properties:
            subscribers:
              type: array
              items:
                $ref: "#/components/schemas/TeamSubscriber"
    TeamSubscriberInput:
      type: object
      required: [subscriber_id, subscriber_type]
      properties:
        subscriber_id:
          type: string
        subscriber_type:
          type: string
          enum: [USER, SLACK_CHANNEL, EMAIL_GROUP, ON_CALL_SCHEDULE]
    TeamSubscriber:
      allOf:
        - $ref: "#/components/schemas/TeamSubscriberInput"
        - type: object
          properties:
            display_name:
              type: string
    RolePermission:
      type: object
      required: [module, actions]
      properties:
        module:
          type: string
        actions:
          type: array
          items:
            type: string
    RoleSummary:
      type: object
      required: [role_id, name, status]
      properties:
        role_id:
          type: string
        name:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [active, inactive]
        user_count:
          type: integer
        created_at:
          type: string
          format: date-time
    CreateRoleRequest:
      type: object
      required: [name]
      properties:
        name:
          type: string
        description:
          type: string
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/RolePermission"
    UpdateRoleRequest:
      allOf:
        - $ref: "#/components/schemas/CreateRoleRequest"
        - type: object
          properties:
            status:
              type: string
              enum: [active, inactive]
    RoleDetail:
      allOf:
        - $ref: "#/components/schemas/RoleSummary"
        - type: object
          properties:
            permissions:
              type: array
              items:
                $ref: "#/components/schemas/RolePermission"
            updated_at:
              type: string
              format: date-time
    AuditLogEntry:
      type: object
      required: [log_id, time, user, action, result]
      properties:
        log_id:
          type: string
        time:
          type: string
          format: date-time
        user:
          type: string
        action:
          type: string
        target_type:
          type: string
        target_id:
          type: string
        result:
          type: string
          enum: [success, failure]
        ip:
          type: string
        details:
          type: object
          additionalProperties: true
    NotificationRecipient:
      type: object
      required: [type, id]
      properties:
        type:
          type: string
          enum: [user, team, role]
        id:
          type: string
        display_name:
          type: string
          description: 對應接收者的顯示名稱，僅於回應中提供。
          readOnly: true
    NotificationChannelRef:
      type: object
      required: [channel_id, channel_type]
      properties:
        channel_id:
          type: string
        channel_type:
          type: string
          enum: [Email, Slack, PagerDuty, Webhook, Teams, "LINE Notify", SMS]
        template:
          type: string
          nullable: true
        channel_name:
          type: string
          description: 通知管道的顯示名稱，僅於回應中提供。
          readOnly: true
    NotificationRetryPolicy:
      type: object
      properties:
        max_attempts:
          type: integer
          minimum: 0
          default: 1
        interval_seconds:
          type: integer
          minimum: 0
          default: 300
        escalation_channel_ids:
          type: array
          items:
            type: string
        backoff_factor:
          type: number
          minimum: 1
          default: 1
          description: 指數回退倍率，1 表示固定間隔。
    NotificationDeliverySettings:
      type: object
      properties:
        enable_aggregation:
          type: boolean
        aggregation_window_seconds:
          type: integer
          minimum: 0
        enable_delay:
          type: boolean
        delay_seconds:
          type: integer
          minimum: 0
        enable_repeat_suppression:
          type: boolean
        repeat_suppression_minutes:
          type: integer
          minimum: 0
        webhook_headers:
          type: object
          additionalProperties:
            type: string
        encrypt_payload:
          type: boolean
        api_token_secret_id:
          type: string
          nullable: true
        custom_payload_template:
          type: string
          nullable: true
    NotificationSnoozeSettings:
      type: object
      properties:
        auto_snooze_minutes:
          type: integer
          minimum: 0
        resume_on_resolve:
          type: boolean
        schedule:
          $ref: "#/components/schemas/SilenceSchedule"
    NotificationStrategySummary:
      type: object
      required: [strategy_id, name, enabled]
      properties:
        strategy_id:
          type: string
        name:
          type: string
        trigger_condition:
          type: string
        channel_count:
          type: integer
        enabled:
          type: boolean
        priority:
          type: string
          enum: [high, medium, low]
    NotificationStrategyPayload:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        enabled:
          type: boolean
        priority:
          type: string
          enum: [high, medium, low]
        trigger_condition:
          type: string
        severity_filters:
          type: array
          items:
            type: string
        recipients:
          type: array
          items:
            $ref: "#/components/schemas/NotificationRecipient"
        channels:
          type: array
          items:
            $ref: "#/components/schemas/NotificationChannelRef"
        resource_filters:
          type: object
          additionalProperties: true
        retry_policy:
          $ref: "#/components/schemas/NotificationRetryPolicy"
        delivery_settings:
          $ref: "#/components/schemas/NotificationDeliverySettings"
        snooze_settings:
          $ref: "#/components/schemas/NotificationSnoozeSettings"
        linked_silence_ids:
          type: array
          items:
            type: string
    CreateNotificationStrategyRequest:
      allOf:
        - $ref: "#/components/schemas/NotificationStrategyPayload"
        - type: object
          required: [name, trigger_condition]
    UpdateNotificationStrategyRequest:
      $ref: "#/components/schemas/NotificationStrategyPayload"
    NotificationStrategyDetail:
      allOf:
        - $ref: "#/components/schemas/NotificationStrategySummary"
        - type: object
          properties:
            description:
              type: string
            recipients:
              type: array
              items:
                $ref: "#/components/schemas/NotificationRecipient"
            channels:
              type: array
              items:
                $ref: "#/components/schemas/NotificationChannelRef"
            severity_filters:
              type: array
              items:
                type: string
            resource_filters:
              type: object
              additionalProperties: true
            retry_policy:
              $ref: "#/components/schemas/NotificationRetryPolicy"
            delivery_settings:
              $ref: "#/components/schemas/NotificationDeliverySettings"
            snooze_settings:
              $ref: "#/components/schemas/NotificationSnoozeSettings"
            linked_silence_ids:
              type: array
              items:
                type: string
    TestNotificationStrategyRequest:
      type: object
      properties:
        test_recipient:
          type: string
        preview_payload:
          type: object
          additionalProperties: true
    TestNotificationResult:
      type: object
      required: [status, message]
      properties:
        status:
          type: string
          enum: [success, failed]
        message:
          type: string
        details:
          type: object
          additionalProperties: true
    NotificationChannelSummary:
      type: object
      required: [channel_id, name, type, enabled]
      properties:
        channel_id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [Email, Slack, PagerDuty, Webhook, Teams, "LINE Notify", SMS]
        enabled:
          type: boolean
        status:
          type: string
          enum: [active, degraded, disabled]
          description: 若需要停用請改用 enabled 欄位設定為 false。
        template_key:
          type: string
        last_test_result:
          type: string
          enum: [success, failed, pending]
        last_test_message:
          type: string
        last_tested_at:
          type: string
          format: date-time
          nullable: true
        updated_at:
          type: string
          format: date-time
    NotificationChannelPayload:
      type: object
      properties:
        name:
          type: string
        type:
          type: string
          enum: [Email, Slack, PagerDuty, Webhook, Teams, "LINE Notify", SMS]
        description:
          type: string
        enabled:
          type: boolean
        template_key:
          type: string
        config:
          type: object
          additionalProperties: true
    CreateNotificationChannelRequest:
      allOf:
        - $ref: "#/components/schemas/NotificationChannelPayload"
        - type: object
          required: [name, type]
    UpdateNotificationChannelRequest:
      $ref: "#/components/schemas/NotificationChannelPayload"
    NotificationChannelDetail:
      allOf:
        - $ref: "#/components/schemas/NotificationChannelSummary"
        - type: object
          properties:
            description:
              type: string
            config:
              type: object
              additionalProperties: true
    TestNotificationChannelRequest:
      type: object
      properties:
        test_recipient:
          type: string
        payload:
          type: object
          additionalProperties: true
    NotificationHistoryRecord:
      type: object
      required:
        [record_id, sent_at, status, channel_type, channel_label, strategy_name]
      properties:
        record_id:
          type: string
        sent_at:
          type: string
          format: date-time
        status:
          type: string
          enum: [SUCCESS, FAILED, RETRYING, QUEUED]
        channel_type:
          type: string
          enum: [Email, Slack, PagerDuty, Webhook, Teams, "LINE Notify", SMS]
        channel_label:
          type: string
        channel_id:
          type: string
        strategy_name:
          type: string
        strategy_id:
          type: string
        alert_title:
          type: string
        message:
          type: string
        error_message:
          type: string
        related_event_id:
          type: string
        metadata:
          type: object
          additionalProperties: true
        recipients:
          type: array
          items:
            type: string
        retry_count:
          type: integer
        duration_ms:
          type: integer
        actor:
          type: string
    NotificationHistoryDetail:
      allOf:
        - $ref: "#/components/schemas/NotificationHistoryRecord"
        - type: object
          properties:
            raw_payload:
              type: object
              additionalProperties: true
            attempts:
              type: array
              items:
                type: object
                properties:
                  sent_at:
                    type: string
                    format: date-time
                  status:
                    type: string
                  response:
                    type: string
            error_message:
              type: string
            related_event_id:
              type: string
            metadata:
              type: object
              additionalProperties: true
    NotificationHistoryPurgeRequest:
      type: object
      required: [before]
      properties:
        before:
          type: string
          format: date-time
          description: 清除發送時間早於此時間戳的通知紀錄。
        status:
          type: array
          description: 指定要清除的通知狀態，預設為全部。
          items:
            type: string
            enum: [SUCCESS, FAILED, RETRYING, QUEUED]
        channel_types:
          type: array
          description: 限定要清除的通知管道類型。
          items:
            type: string
            enum: [Email, Slack, PagerDuty, Webhook, Teams, "LINE Notify", SMS]
        strategy_ids:
          type: array
          description: 僅清除屬於這些策略的紀錄。
          items:
            type: string
        channel_ids:
          type: array
          description: 僅清除指定通知管道的紀錄。
          items:
            type: string
        dry_run:
          type: boolean
          description: 若為 true，僅回報將被刪除的筆數不實際刪除。
        max_records:
          type: integer
          minimum: 1
          description: 限制此次清除的最大筆數。
    NotificationHistoryPurgeResult:
      type: object
      required: [matched_count, deleted_count, dry_run]
      properties:
        matched_count:
          type: integer
        deleted_count:
          type: integer
        dry_run:
          type: boolean
        message:
          type: string
    TagDefinition:
      type: object
      required: [tag_id, name, category]
      properties:
        tag_id:
          type: string
        name:
          type: string
        category:
          type: string
        required:
          type: boolean
        usage_count:
          type: integer
        values:
          type: array
          items:
            $ref: "#/components/schemas/TagValue"
    CreateTagRequest:
      type: object
      required: [name, category]
      properties:
        name:
          type: string
        category:
          type: string
        required:
          type: boolean
    UpdateTagRequest:
      allOf:
        - $ref: "#/components/schemas/CreateTagRequest"
    TagValue:
      type: object
      required: [value_id, value]
      properties:
        value_id:
          type: string
        value:
          type: string
        description:
          type: string
        is_default:
          type: boolean
        usage_count:
          type: integer
        last_synced_at:
          type: string
          format: date-time
          nullable: true
    CreateTagValueRequest:
      type: object
      required: [value]
      properties:
        value:
          type: string
        description:
          type: string
        is_default:
          type: boolean
    UpdateTagValueRequest:
      allOf:
        - $ref: "#/components/schemas/CreateTagValueRequest"
    TagSummaryResponse:
      type: object
      required: [updated_at, totals, categories]
      properties:
        updated_at:
          type: string
          format: date-time
        totals:
          type: object
          required: [total_keys, required_keys, optional_keys, total_values]
          properties:
            total_keys:
              type: integer
            required_keys:
              type: integer
            optional_keys:
              type: integer
            total_values:
              type: integer
        categories:
          type: array
          items:
            $ref: "#/components/schemas/TagKeySummary"
    TagKeySummary:
      type: object
      required: [category, total_keys, required_keys, optional_keys]
      properties:
        category:
          type: string
        total_keys:
          type: integer
        required_keys:
          type: integer
        optional_keys:
          type: integer
        total_values:
          type: integer
        last_updated_at:
          type: string
          format: date-time
          nullable: true
        top_keys:
          type: array
          items:
            $ref: "#/components/schemas/TagKeyHighlight"
    TagKeyHighlight:
      type: object
      required: [tag_key, usage_count]
      properties:
        tag_key:
          type: string
        description:
          type: string
        usage_count:
          type: integer
        required:
          type: boolean
    EmailSettings:
      type: object
      required: [smtp_host, smtp_port, sender_email, encryption]
      properties:
        channel_id:
          type: string
          description: 對應通知通道設定的唯一識別碼。
        channel_name:
          type: string
          description: 預設郵件通知通道名稱。
        smtp_host:
          type: string
        smtp_port:
          type: integer
        username:
          type: string
        sender_name:
          type: string
        sender_email:
          type: string
          format: email
        encryption:
          type: string
          enum: [none, tls, ssl]
        test_recipient:
          type: string
        is_enabled:
          type: boolean
        updated_at:
          type: string
          format: date-time
    EmailSettingsRequest:
      allOf:
        - $ref: "#/components/schemas/EmailSettings"
    EmailTestRequest:
      type: object
      properties:
        recipient:
          type: string
          format: email
          description: 覆寫預設測試收件人。
        template_key:
          type: string
          description: 指定要使用的郵件模板代碼。
        variables:
          type: object
          additionalProperties: true
          description: 套用至郵件模板的變數資料。
        subject_override:
          type: string
        body_override:
          type: string
    EmailTestResult:
      type: object
      required: [status, executed_at]
      properties:
        status:
          type: string
          enum: [success, failed, queued]
        executed_at:
          type: string
          format: date-time
        duration_ms:
          type: integer
        recipient:
          type: string
          format: email
        message:
          type: string
        error:
          type: string
        logs:
          type: array
          items:
            type: string
        preview_url:
          type: string
    AuthSettings:
      type: object
      required: [provider, oidc_enabled, client_id, auth_url, token_url]
      properties:
        provider:
          type: string
        oidc_enabled:
          type: boolean
        managed_by:
          type: string
          enum: [keycloak, custom]
          description: 指示設定由哪個外部系統維護。
        read_only:
          type: boolean
          description: 為 true 時代表設定僅提供查詢資訊。
        realm:
          type: string
        client_id:
          type: string
        client_secret_hint:
          type: string
        auth_url:
          type: string
        token_url:
          type: string
        userinfo_url:
          type: string
        redirect_uri:
          type: string
        logout_url:
          type: string
        scopes:
          type: array
          items:
            type: string
        user_sync:
          type: boolean
        updated_at:
          type: string
          format: date-time
    AuthSettingsRequest:
      allOf:
        - $ref: "#/components/schemas/AuthSettings"
        - type: object
          properties:
            client_secret:
              type: string
              format: password
    AuthTestRequest:
      type: object
      properties:
        settings_override:
          $ref: "#/components/schemas/AuthSettingsRequest"
        test_username:
          type: string
        test_password:
          type: string
          format: password
        scope_override:
          type: array
          items:
            type: string
        async:
          type: boolean
          description: 是否以背景方式執行測試。
    AuthTestResult:
      type: object
      required: [status, executed_at]
      properties:
        status:
          type: string
          enum: [success, failed, queued]
        executed_at:
          type: string
          format: date-time
        latency_ms:
          type: integer
        message:
          type: string
        warnings:
          type: array
          items:
            type: string
        trace_id:
          type: string
          nullable: true
    LayoutScopeType:
      type: string
      enum: [global, role, user]
      description: 版面配置適用的層級。
    LayoutWidgetDefinition:
      type: object
      required: [widget_id, name, supported_pages, data_api_endpoint]
      properties:
        widget_id:
          type: string
          description: 指標卡片的唯一識別碼。
        name:
          type: string
          description: 顯示於 UI 的卡片名稱。
        description:
          type: string
          description: 功能說明，於 tooltip 呈現。
        supported_pages:
          type: array
          items:
            type: string
          description: 可放置此卡片的頁面路徑清單。
        data_api_endpoint:
          type: string
          description: 前端抓取資料時呼叫的 API 路徑。
        updated_at:
          type: string
          format: date-time
          description: 資訊最後更新時間。
    LayoutWidgetConfig:
      type: object
      required: [widget_id, order]
      properties:
        widget_id:
          type: string
          description: 對應的 widget_id。
        order:
          type: integer
          minimum: 1
          description: 顯示順序，1 為最左側。
    LayoutFallbackEntry:
      type: object
      required: [scope_type]
      properties:
        scope_type:
          $ref: "#/components/schemas/LayoutScopeType"
        scope_id:
          type: string
          format: uuid
          nullable: true
          description: 命中的角色或使用者識別碼；global 範圍為空值。
        matched:
          type: boolean
          description: 是否找到對應配置。
        updated_at:
          type: string
          format: date-time
          nullable: true
          description: 該層級配置最後更新時間。
    PageLayoutRecord:
      type: object
      required: [layout_id, page_path, scope_type, widgets, updated_at]
      properties:
        layout_id:
          type: string
          format: uuid
          description: 版面配置主鍵識別碼。
        page_path:
          type: string
          description: 套用此配置的頁面路徑。
        scope_type:
          $ref: "#/components/schemas/LayoutScopeType"
        scope_id:
          type: string
          format: uuid
          nullable: true
          description: 角色或使用者識別碼，global 範圍為空值。
        widgets:
          type: array
          items:
            $ref: "#/components/schemas/LayoutWidgetConfig"
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        updated_by:
          type: string
          format: uuid
          nullable: true
          description: 最後修改此配置的使用者識別碼。
    LayoutResolutionResponse:
      type: object
      required: [page_path, resolved_scope_type, widgets]
      properties:
        page_path:
          type: string
        resolved_scope_type:
          $ref: "#/components/schemas/LayoutScopeType"
        resolved_scope_id:
          type: string
          format: uuid
          nullable: true
        widgets:
          type: array
          items:
            $ref: "#/components/schemas/LayoutWidgetConfig"
        layout_record:
          $ref: "#/components/schemas/PageLayoutRecord"
          nullable: true
        fallback_chain:
          type: array
          items:
            $ref: "#/components/schemas/LayoutFallbackEntry"
        updated_at:
          type: string
          format: date-time
          description: 實際採用配置的最後更新時間。
    SavePageLayoutRequest:
      type: object
      required: [page_path, scope_type, widgets]
      properties:
        page_path:
          type: string
        scope_type:
          $ref: "#/components/schemas/LayoutScopeType"
        scope_id:
          type: string
          format: uuid
          nullable: true
          description: global 範圍可省略，role/user 範圍需提供。
        widgets:
          type: array
          description: 按照顯示順序排列的指標卡片列表。
          items:
            $ref: "#/components/schemas/LayoutWidgetConfig"
    GrafanaDashboardUrl:
      type: object
      required: [url, embed_url, expires_at]
      properties:
        url:
          type: string
          description: Grafana dashboard 的完整 URL
        embed_url:
          type: string
          description: 可直接用於 iframe src 的嵌入 URL
        expires_at:
          type: string
          format: date-time
          description: 臨時訪問令牌的過期時間
        parameters:
          type: object
          properties:
            theme:
              type: string
              enum: [light, dark]
            kiosk:
              type: boolean
            refresh:
              type: integer
              description: 刷新間隔（秒）
    BatchOperationRequest:
      type: object
      required: [target_type, action]
      properties:
        target_type:
          type: string
          enum: [event, resource]
        action:
          type: string
          enum:
            [acknowledge, resolve, assign, add_comment, delete, update_status, assign_team, add_tags, remove_tags]
        event_ids:
          type: array
          minItems: 1
          items:
            type: string
        resource_ids:
          type: array
          minItems: 1
          items:
            type: string
        assignee_id:
          type: string
        comment:
          type: string
        resolved_at:
          type: string
          format: date-time
        target_status:
          type: string
          enum: [healthy, warning, critical, offline]
        target_team_id:
          type: string
        tags:
          type: array
          minItems: 1
          items:
            type: string
        reason:
          type: string
      allOf:
        - if:
            properties:
              target_type:
                const: event
          then:
            required: [event_ids]
            properties:
              action:
                enum: [acknowledge, resolve, assign, add_comment]
        - if:
            properties:
              target_type:
                const: resource
          then:
            required: [resource_ids]
            properties:
              action:
                enum: [delete, update_status, assign_team, add_tags, remove_tags]
        - if:
            properties:
              action:
                const: assign
          then:
            required: [assignee_id]
        - if:
            properties:
              action:
                const: add_comment
          then:
            required: [comment]
        - if:
            properties:
              action:
                const: update_status
          then:
            required: [target_status]
        - if:
            properties:
              action:
                const: assign_team
          then:
            required: [target_team_id]
        - if:
            properties:
              action:
                const: add_tags
          then:
            required: [tags]
        - if:
            properties:
              action:
                const: remove_tags
          then:
            required: [tags]
    BatchOperationItem:
      type: object
      required: [target_id, success, processed_at]
      properties:
        target_id:
          type: string
        success:
          type: boolean
        message:
          type: string
        error_code:
          type: string
          nullable: true
        processed_at:
          type: string
          format: date-time
    BatchOperationStatus:
      type: object
      required:
        [operation_id, target_type, action, status, total_count, processed_count, success_count, failed_count, created_at]
      properties:
        operation_id:
          type: string
        target_type:
          type: string
          enum: [event, resource]
        action:
          type: string
          enum: [acknowledge, resolve, assign, add_comment, delete, update_status, assign_team, add_tags, remove_tags]
        status:
          type: string
          enum: [pending, running, completed, failed]
        requested_by:
          type: string
        context:
          type: object
          additionalProperties: true
        total_count:
          type: integer
        processed_count:
          type: integer
        success_count:
          type: integer
        failed_count:
          type: integer
        created_at:
          type: string
          format: date-time
        completed_at:
          type: string
          format: date-time
          nullable: true
        items:
          type: array
          items:
            $ref: "#/components/schemas/BatchOperationItem"
    ScanRequest:
      type: object
      required: [scan_type, target]
      properties:
        scan_type:
          type: string
          enum: [network, resources, infrastructure]
        target:
          type: string
        options:
          type: object
          properties:
            ports:
              type: array
              items:
                type: integer
            timeout:
              type: integer
            max_depth:
              type: integer
            include_types:
              type: array
              items:
                type: string
    ScanTaskResponse:
      type: object
      required: [task_id, status, created_at]
      properties:
        task_id:
          type: string
        status:
          type: string
          enum: [pending, running, completed, failed]
        scan_type:
          type: string
          enum: [network, resources, infrastructure]
        target:
          type: string
        progress:
          type: number
          minimum: 0
          maximum: 100
        options:
          type: object
          additionalProperties: true
        results_count:
          type: integer
        created_at:
          type: string
          format: date-time
        started_at:
          type: string
          format: date-time
          nullable: true
        completed_at:
          type: string
          format: date-time
          nullable: true
        error_message:
          type: string
          nullable: true
        results:
          type: array
          items:
            $ref: "#/components/schemas/ScanResult"
    ScanResult:
      type: object
      required: [result_id, name, type, status, discovered_at]
      properties:
        result_id:
          type: string
          description: 掃描結果的唯一識別碼。
        resource_id:
          type: string
          nullable: true
        name:
          type: string
        type:
          type: string
          enum: [server, database, cache, gateway, service]
        status:
          type: string
          enum: [healthy, warning, critical, offline]
        ip_address:
          type: string
        location:
          type: string
        discovered_at:
          type: string
          format: date-time
        services:
          type: array
          items:
            type: object
            properties:
              port:
                type: integer
              protocol:
                type: string
              service:
                type: string
              version:
                type: string
        metadata:
          type: object
          additionalProperties: true
